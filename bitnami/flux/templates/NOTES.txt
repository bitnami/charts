CHART NAME: {{ .Chart.Name }}
CHART VERSION: {{ .Chart.Version }}
APP VERSION: {{ .Chart.AppVersion }}

Did you know there are enterprise versions of the Bitnami catalog? For enhanced secure software supply chain features, unlimited pulls from Docker, LTS support, or application customization, see Bitnami Premium or Tanzu Application Catalog. See https://www.arrow.com/globalecs/na/vendors/bitnami for more information.

** Please be patient while the chart is being deployed **

{{- if .Values.diagnosticMode.enabled }}
The chart has been deployed in diagnostic mode. All probes have been disabled and the command has been overwritten with:

  command: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.command "context" $) | nindent 4 }}
  args: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.args "context" $) | nindent 4 }}

Get the list of pods by executing:

  kubectl get pods --namespace {{ include "common.names.namespace" . | quote }} -l app.kubernetes.io/instance={{ .Release.Name }}

Access the pod you want to debug by executing

  kubectl exec --namespace {{ include "common.names.namespace" . | quote }} -ti <NAME OF THE POD> -- bash

{{- else }}

The following controllers have been deployed:

  {{- if .Values.helmController.enabled }}
  - helm-controller
  {{- end }}
  {{- if .Values.imageAutomationController.enabled }}
  - image-automation-controller
  {{- end }}
  {{- if .Values.imageReflectorController.enabled }}
  - image-reflector-controller
  {{- end }}
  {{- if .Values.kustomizeController.enabled }}
  - kustomize-controller
  {{- end }}
  {{- if .Values.notificationController.enabled }}
  - notification-controller
  {{- end }}
  {{- if .Values.sourceController.enabled }}
  - source-controller
  {{- end }}

{{- end }}

Check the status of the pods by running this command:

  kubectl get pods --namespace {{ include "common.names.namespace" . | quote }} -l app.kubernetes.io/instance={{ .Release.Name }}

Read the upstream flux documentation to start working with the controllers:

  https://fluxcd.io/flux/components/

{{- include "common.warnings.rollingTag" .Values.kustomizeController.image }}
{{- include "flux.validateValues" . }}
{{- include "common.warnings.resources" (dict "sections" (list "helmController" "imageAutomationController" "imageReflectorController" "kustomizeController" "notificationController" "sourceController" "volumePermissions") "context" $) }}
{{- include "common.warnings.modifiedImages" (dict "images" (list .Values.kustomizeController.image .Values.helmController.image .Values.sourceController.image .Values.notificationController.image .Values.imageAutomationController.image .Values.imageReflectorController.image .Values.volumePermissions.image) "context" $) }}
{{- include "common.errors.insecureImages" (dict "images" (list .Values.kustomizeController.image .Values.helmController.image .Values.sourceController.image .Values.notificationController.image .Values.imageAutomationController.image .Values.imageReflectorController.image .Values.volumePermissions.image) "context" $) }}
