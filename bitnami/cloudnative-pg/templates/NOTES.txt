CHART NAME: {{ .Chart.Name }}
CHART VERSION: {{ .Chart.Version }}
APP VERSION: {{ .Chart.AppVersion }}

Did you know there are enterprise versions of the Bitnami catalog? For enhanced secure software supply chain features, unlimited pulls from Docker, LTS support, or application customization, see Bitnami Premium or Tanzu Application Catalog. See https://www.arrow.com/globalecs/na/vendors/bitnami for more information.

** Please be patient while the chart is being deployed **

Check the status of the pods by running this command:

  kubectl get pods --namespace {{ include "common.names.namespace" . | quote }} -l app.kubernetes.io/instance={{ .Release.Name }}

Check the cloudnative-pg documentation for instructions on how to deploy Cluster, Backup and other postgresql.cnpg.io objects.

https://cloudnative-pg.io/docs/

{{- if .Values.operator.rbac.create }}
{{- if .Values.operator.watchAllNamespaces }}
WARNING: CloudNative-PG can access all secrets in the cluster. This could pose a security risk if the application gets compromised.

You can limit allowed namespaces by setting watchAllNamespaces = false and configuring watchNamespaces
{{- else }}

CloudNative-PG can ONLY access resources in the following namespaces:
{{ $namespaces := .Values.operator.watchNamespaces | default (list (include "common.names.namespace" .)) }}
{{- range $namespace := $namespaces }}
  - {{ $namespace }}
{{- end }}

CloudNative-PG won't be able to access resources in other namespaces. You can configure this behavior by setting watchNamespaces

{{- end }}
{{- end }}

{{- include "common.warnings.rollingTag" .Values.operator.image }}
{{- include "common.warnings.rollingTag" .Values.operator.postgresqlImage }}
{{- include "common.warnings.rollingTag" .Values.pluginBarmanCloud.image }}
{{- include "common.warnings.rollingTag" .Values.pluginBarmanCloud.sidecarImage }}
{{- include "cloudnative-pg.validateValues" . }}
{{- include "common.warnings.resources" (dict "sections" (list "operator" "pluginBarmanCloud") "context" $) }}
{{- include "common.warnings.modifiedImages" (dict "images" (list .Values.operator.postgresqlImage .Values.operator.image .Values.pluginBarmanCloud.image .Values.pluginBarmanCloud.sidecarImage) "context" $) }}
{{- include "common.errors.insecureImages" (dict "images" (list .Values.operator.postgresqlImage .Values.operator.image .Values.pluginBarmanCloud.image .Values.pluginBarmanCloud.sidecarImage) "context" $) }}
