# Copyright Broadcom, Inc. All Rights Reserved.
# SPDX-License-Identifier: APACHE-2.0

## @section Global parameters
## Global Docker image parameters
## Please, note that this will override the image parameters, including dependencies, configured to use the global value
## Current available global Docker image parameters: imageRegistry, imagePullSecrets and storageClass
##

## @param global.imageRegistry Global Docker image registry
## @param global.imagePullSecrets Global Docker registry secret names as an array
## @param global.defaultStorageClass Global default StorageClass for Persistent Volume(s)
## @param global.storageClass DEPRECATED: use global.defaultStorageClass instead
##
global:
  imageRegistry: ""
  ## e.g:
  ## imagePullSecrets:
  ##   - myRegistryKeySecretName
  ##
  imagePullSecrets: []
  defaultStorageClass: ""
  storageClass: ""
  ## Security parameters
  ##
  security:
    ## @param global.security.allowInsecureImages Allows skipping image verification
    allowInsecureImages: false
  ## Compatibility adaptations for Kubernetes platforms
  ##
  compatibility:
    ## Compatibility adaptations for Openshift
    ##
    openshift:
      ## @param global.compatibility.openshift.adaptSecurityContext Adapt the securityContext sections of the deployment to make them compatible with Openshift restricted-v2 SCC: remove runAsUser, runAsGroup and fsGroup and let the platform use their allowed default IDs. Possible values: auto (apply if the detected running cluster is Openshift), force (perform the adaptation always), disabled (do not perform adaptation)
      ##
      adaptSecurityContext: auto

## @section Common parameters
##

## @param kubeVersion Override Kubernetes version
##
kubeVersion: ""
## @param nameOverride String to partially override common.names.name
##
nameOverride: ""
## @param fullnameOverride String to fully override common.names.fullname
##
fullnameOverride: ""
## @param namespaceOverride String to fully override common.names.namespace
##
namespaceOverride: ""
## @param commonLabels Labels to add to all deployed objects
##
commonLabels: {}
## @param commonAnnotations Annotations to add to all deployed objects
##
commonAnnotations: {}
## @param clusterDomain Kubernetes cluster domain name
##
clusterDomain: cluster.local
## @param extraDeploy Array of extra objects to deploy with the release
##
extraDeploy: []
## Diagnostic mode
## @param diagnosticMode.enabled Enable diagnostic mode (all probes will be disabled and the command will be overridden)
## @param diagnosticMode.command Command to override all containers in the chart release
## @param diagnosticMode.args Args to override all containers in the chart release
##
diagnosticMode:
  enabled: false
  command:
    - sleep
  args:
    - infinity
## @param configuration Specify content for Cilium common configuration (basic one auto-generated based on other values otherwise)
##
configuration: {}
## @param overrideConfiguration Cilium common configuration override. Values defined here takes precedence over the ones defined at `configuration`
##
overrideConfiguration: {}
## @param existingConfigmap The name of an existing ConfigMap with your custom Cilium configuration
##
existingConfigmap: ""
## @param clusterName Name of the Cilium cluster
##
clusterName: default
## @param azure.enabled Enable Azure integration
## @param azure.resourceGroup When enabling Azure integration, set the Azure Resource Group
## @param azure.tenantID When enabling Azure integration, set the Azure Tenant ID
## @param azure.subscriptionID When enabling Azure integration, set the Azure Subscription ID
## @param azure.clientID When enabling Azure integration, set the Azure Client ID
## @param azure.clientSecret When enabling Azure integration, set the Azure Client Secret
##
azure:
  enabled: false
  resourceGroup: ""
  tenantID: ""
  subscriptionID: ""
  clientID: ""
  clientSecret: ""
## @param aws.enabled Enable AWS integration
## @param aws.region When enabling AWS integration, set the AWS region
## @param aws.accessKeyID When enabling AWS integration, set the AWS Access Key ID
## @param aws.secretAccessKey When enabling AWS integration, set the AWS Secret Access Key
##
aws:
  enabled: false
  region: ""
  accessKeyID: ""
  secretAccessKey: ""
## @param gcp.enabled Enable GCP integration
##
gcp:
  enabled: false

## @section Cilium Agent Parameters
##
agent:
  ## Bitnami Cilium Agent image
  ## ref: https://hub.docker.com/r/bitnami/cilium/tags/
  ## @param agent.image.registry [default: REGISTRY_NAME] Cilium Agent image registry
  ## @param agent.image.repository [default: REPOSITORY_NAME/cilium] Cilium Agent image repository
  ## @skip agent.image.tag Cilium Agent image tag (immutable tags are recommended)
  ## @param agent.image.digest Cilium Agent image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag image tag (immutable tags are recommended)
  ## @param agent.image.pullPolicy Cilium Agent image pull policy
  ## @param agent.image.pullSecrets Cilium Agent image pull secrets
  ## @param agent.image.debug Enable Cilium Agent image debug mode
  ##
  image:
    registry: docker.io
    repository: bitnami/cilium
    tag: 1.16.5-debian-12-r1
    digest: ""
    ## Specify a imagePullPolicy
    ## ref: https://kubernetes.io/docs/concepts/containers/images/#pre-pulled-images
    ##
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
    debug: false
  ## @param agent.containerPorts.health Cilium Agent health container port
  ## @param agent.containerPorts.pprof Cilium Agent pprof container port
  ## @param agent.containerPorts.hubblePeer Cilium Agent Hubble peer service container port
  ## @param agent.containerPorts.metrics Cilium Agent metrics container port
  ## @param agent.containerPorts.hubbleMetrics Cilium Agent Hubble metrics container port
  ##
  containerPorts:
    health: 9879
    pprof: 6060
    hubblePeer: 4244
    metrics: 9962
    hubbleMetrics: 9965
  ## @param agent.extraContainerPorts Optionally specify extra list of additional ports for Cilium Agent containers
  ## e.g:
  ## extraContainerPorts:
  ##   - name: myservice
  ##     containerPort: 9090
  ##
  extraContainerPorts: []
  ## Configure extra options for Cilium Agent containers' liveness and readiness probes
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
  ## @param agent.livenessProbe.enabled Enable livenessProbe on Cilium Agent containers
  ## @param agent.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
  ## @param agent.livenessProbe.periodSeconds Period seconds for livenessProbe
  ## @param agent.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
  ## @param agent.livenessProbe.failureThreshold Failure threshold for livenessProbe
  ## @param agent.livenessProbe.successThreshold Success threshold for livenessProbe
  ##
  livenessProbe:
    enabled: true
    initialDelaySeconds: 10
    periodSeconds: 30
    timeoutSeconds: 5
    failureThreshold: 10
    successThreshold: 1
  ## @param agent.readinessProbe.enabled Enable readinessProbe on Cilium Agent containers
  ## @param agent.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
  ## @param agent.readinessProbe.periodSeconds Period seconds for readinessProbe
  ## @param agent.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
  ## @param agent.readinessProbe.failureThreshold Failure threshold for readinessProbe
  ## @param agent.readinessProbe.successThreshold Success threshold for readinessProbe
  ##
  readinessProbe:
    enabled: true
    initialDelaySeconds: 10
    periodSeconds: 30
    timeoutSeconds: 5
    failureThreshold: 3
    successThreshold: 1
  ## @param agent.startupProbe.enabled Enable startupProbe on Cilium Agent containers
  ## @param agent.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
  ## @param agent.startupProbe.periodSeconds Period seconds for startupProbe
  ## @param agent.startupProbe.timeoutSeconds Timeout seconds for startupProbe
  ## @param agent.startupProbe.failureThreshold Failure threshold for startupProbe
  ## @param agent.startupProbe.successThreshold Success threshold for startupProbe
  ##
  startupProbe:
    enabled: false
    initialDelaySeconds: 5
    periodSeconds: 2
    timeoutSeconds: 1
    failureThreshold: 100
    successThreshold: 1
  ## @param agent.customLivenessProbe Custom livenessProbe that overrides the default one
  ##
  customLivenessProbe: {}
  ## @param agent.customReadinessProbe Custom readinessProbe that overrides the default one
  ##
  customReadinessProbe: {}
  ## @param agent.customStartupProbe Custom startupProbe that overrides the default one
  ##
  customStartupProbe: {}
  ## Cilium Agent resource requests and limits
  ## ref: http://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
  ## @param agent.resourcesPreset Set Cilium Agent container resources according to one common preset (allowed values: none, nano, small, medium, large, xlarge, 2xlarge). This is ignored if agent.resources is set (agent.resources is recommended for production).
  ## More information: https://github.com/bitnami/charts/blob/main/bitnami/common/templates/_resources.tpl#L15
  ##
  resourcesPreset: "micro"
  ## @param agent.resources Set Cilium Agent container requests and limits for different resources like CPU or memory (essential for production workloads)
  ## Example:
  ## resources:
  ##   requests:
  ##     cpu: 2
  ##     memory: 512Mi
  ##   limits:
  ##     cpu: 3
  ##     memory: 1024Mi
  ##
  resources: {}
  ## Configure Pods Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param agent.podSecurityContext.enabled Enable Cilium Agent pods' Security Context
  ## @param agent.podSecurityContext.fsGroupChangePolicy Set filesystem group change policy for Cilium Agent pods
  ## @param agent.podSecurityContext.sysctls Set kernel settings using the sysctl interface for Cilium Agent pods
  ## @param agent.podSecurityContext.supplementalGroups Set filesystem extra groups for Cilium Agent pods
  ## @param agent.podSecurityContext.fsGroup Set fsGroup in Cilium Agent pods' Security Context
  ##
  podSecurityContext:
    enabled: true
    fsGroupChangePolicy: Always
    sysctls: []
    supplementalGroups: []
    fsGroup: 0
  ## Configure Container Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
  ## @param agent.containerSecurityContext.enabled Enabled Cilium Agent container' Security Context
  ## @param agent.containerSecurityContext.seLinuxOptions [object,nullable] Set SELinux options in Cilium Agent container
  ## @param agent.containerSecurityContext.runAsUser Set runAsUser in Cilium Agent container' Security Context
  ## @param agent.containerSecurityContext.runAsGroup Set runAsUser in Cilium Agent container' Security Context
  ## @param agent.containerSecurityContext.runAsNonRoot Set runAsNonRoot in Cilium Agent container' Security Context
  ## @param agent.containerSecurityContext.readOnlyRootFilesystem Set readOnlyRootFilesystem in Cilium Agent container' Security Context
  ## @param agent.containerSecurityContext.privileged Set privileged in Cilium Agent container' Security Context
  ## @param agent.containerSecurityContext.allowPrivilegeEscalation Set allowPrivilegeEscalation in Cilium Agent container' Security Context
  ## @param agent.containerSecurityContext.capabilities.add List of capabilities to be added in Cilium Agent container
  ## @param agent.containerSecurityContext.capabilities.drop List of capabilities to be dropped in Cilium Agent container
  ## @param agent.containerSecurityContext.seccompProfile.type Set seccomp profile in Cilium Agent container
  ##
  containerSecurityContext:
    enabled: true
    ## Running with spc_t type (designed for privileged operations, check capabilities)
    ## since the container is not executed as a privileged container by default. This
    ## should prevent issues with SELinux policies.
    seLinuxOptions:
      level: 's0'
      type: 'spc_t'
    runAsUser: 0
    runAsGroup: 0
    runAsNonRoot: false
    readOnlyRootFilesystem: true
    privileged: false
    allowPrivilegeEscalation: false
    capabilities:
      add:
      - BPF
      - CHOWN
      - DAC_OVERRIDE
      - FOWNER
      - KILL
      - NET_ADMIN
      - NET_RAW
      - IPC_LOCK
      - PERFMON
      - SETGID
      - SETUID
      - SYS_ADMIN
      - SYS_MODULE
      - SYS_RESOURCE
      drop: ["ALL"]
    seccompProfile:
      type: "RuntimeDefault"
  ## @param agent.bpf.autoMount Enable automatically mounting BPF fs on the host
  ## @param agent.bpf.hostRoot Path to the host's BPF root directory
  ##
  bpf:
    autoMount: true
    hostRoot: /sys/fs/bpf
  ## @param agent.cgroup2.autoMount Enable automatically mounting cgroup2 filesystem on the host
  ## @param agent.cgroup2.hostRoot Path to the host's cgroup2 root directory
  ##
  cgroup2:
    autoMount: true
    hostRoot: /run/cilium/cgroupv2
  ## @param agent.cniPlugin.install Enable Cilium CNI plugin installation on the host
  ## @param agent.cniPlugin.uninstall Remove the CNI plugin from the host on agent shutdown
  ## @param agent.cniPlugin.hostCNIBinDir Path to the host's CNI bin directory (default: /opt/cni/bin)
  ## @param agent.cniPlugin.hostCNINetDir Path to the host's CNI net configuration directory (default: /etc/cni/net.d)
  ##
  cniPlugin:
    install: true
    uninstall: false
    hostCNIBinDir: ""
    hostCNINetDir: ""
  ## @param agent.enableENI Elastic Network Interface (ENI) integration
  ##
  enableENI: false
  ## @param agent.byoCNI Integration with Azure clusters using Bring Your Own CNI
  ## Ref: https://learn.microsoft.com/en-us/azure/aks/use-byo-cni?tabs=azure-cli
  ##
  byoCNI: false
  ## @param agent.waitForKubeProxy Wait for kube-proxy to be ready before starting Cilium Agent
  ##
  waitForKubeProxy: false
  ## @param agent.enablePprof Enable pprof for Cilium Agent
  ##
  enablePprof: false
  ## @param agent.command Override default Cilium Agent container command (useful when using custom images)
  ##
  command: []
  ## @param agent.args Override default Cilium Agent container args (useful when using custom images)
  ##
  args: []
  ## @param agent.automountServiceAccountToken Mount Service Account token in Cilium Agent pods
  ##
  automountServiceAccountToken: true
  ## @param agent.hostAliases Cilium Agent pods host aliases
  ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
  ##
  hostAliases: []
  ## @param agent.daemonsetAnnotations Annotations for Cilium Agent daemonset
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  daemonsetAnnotations: {}
  ## @param agent.podLabels Extra labels for Cilium Agent pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  ##
  podLabels: {}
  ## @param agent.podAnnotations Annotations for Cilium Agent pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  podAnnotations: {}
  ## Node agent.affinity preset
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
  ##
  nodeAffinityPreset:
    ## @param agent.nodeAffinityPreset.type Node affinity preset type. Ignored if `agent.affinity` is set. Allowed values: `soft` or `hard`
    ##
    type: ""
    ## @param agent.nodeAffinityPreset.key Node label key to match. Ignored if `agent.affinity` is set
    ##
    key: ""
    ## @param agent.nodeAffinityPreset.values Node label values to match. Ignored if `agent.affinity` is set
    ## E.g.
    ## values:
    ##   - e2e-az1
    ##   - e2e-az2
    ##
    values: []
  ## @param agent.affinity Affinity for Cilium Agent pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ## NOTE: `agent.podAffinityPreset`, `agent.podAntiAffinityPreset`, and `agent.nodeAffinityPreset` will be ignored when it's set
  ##
  affinity: {}
  ## @param agent.nodeSelector [object] Node labels for Cilium Agent pods assignment
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
  ##
  nodeSelector:
    kubernetes.io/os: linux
  ## @param agent.tolerations Tolerations for Cilium Agent pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []
  ## @param agent.updateStrategy.type Cilium Agent daemonset update strategy type
  ## Can be set to RollingUpdate or OnDelete
  ## ref: https://kubernetes.io/docs/tasks/manage-daemon/update-daemon-set/
  ##
  updateStrategy:
    type: RollingUpdate
  ## @param agent.priorityClassName Cilium Agent pods' priorityClassName
  ##
  priorityClassName: system-node-critical
  ## @param agent.terminationGracePeriodSeconds Seconds Cilium Agent pods need to terminate gracefully
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods
  ##
  terminationGracePeriodSeconds: 1
  ## @param agent.lifecycleHooks for Cilium Agent containers to automate configuration before or after startup
  ##
  lifecycleHooks: {}
  ## @param agent.extraEnvVars Array with extra environment variables to add to Cilium Agent containers
  ## e.g:
  ## extraEnvVars:
  ##   - name: FOO
  ##     value: "bar"
  ##
  extraEnvVars: []
  ## @param agent.extraEnvVarsCM Name of existing ConfigMap containing extra env vars for Cilium Agent containers
  ##
  extraEnvVarsCM: ""
  ## @param agent.extraEnvVarsSecret Name of existing Secret containing extra env vars for Cilium Agent containers
  ##
  extraEnvVarsSecret: ""
  ## @param agent.extraVolumes Optionally specify extra list of additional volumes for the Cilium Agent pods
  ##
  extraVolumes: []
  ## @param agent.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the Cilium Agent containers
  ##
  extraVolumeMounts: []
  ## @param agent.sidecars Add additional sidecar containers to the Cilium Agent pods
  ## e.g:
  ## sidecars:
  ##   - name: your-image-name
  ##     image: your-image
  ##     imagePullPolicy: Always
  ##     ports:
  ##       - name: portname
  ##         containerPort: 1234
  ##
  sidecars: []
  ## @param agent.initContainers Add additional init containers to the Cilium Agent pods
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
  ## e.g:
  ## initContainers:
  ##  - name: your-image-name
  ##    image: your-image
  ##    imagePullPolicy: Always
  ##    command: ['sh', '-c', 'echo "hello world"']
  ##
  initContainers: []
  ## Default init Containers
  ##
  defaultInitContainers:
    ## Cilium Agent "prepare-write-dirs" init container
    ## Used to copy some dirs to an empty dir volume to make them writable
    ##
    prepareWriteDirs:
      ## Configure "prepare-write-dirs" init-container Security Context
      ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
      ## @param agent.defaultInitContainers.prepareWriteDirs.containerSecurityContext.enabled Enabled Cilium Agent init-containers' Security Context
      ## @param agent.defaultInitContainers.prepareWriteDirs.containerSecurityContext.seLinuxOptions [object,nullable] Set SELinux options in Cilium Agent init-containers
      ## @param agent.defaultInitContainers.prepareWriteDirs.containerSecurityContext.runAsUser Set runAsUser in Cilium Agent init-containers' Security Context
      ## @param agent.defaultInitContainers.prepareWriteDirs.containerSecurityContext.runAsGroup Set runAsUser in Cilium Agent init-containers' Security Context
      ## @param agent.defaultInitContainers.prepareWriteDirs.containerSecurityContext.runAsNonRoot Set runAsNonRoot in Cilium Agent init-containers' Security Context
      ## @param agent.defaultInitContainers.prepareWriteDirs.containerSecurityContext.readOnlyRootFilesystem Set readOnlyRootFilesystem in Cilium Agent init-containers' Security Context
      ## @param agent.defaultInitContainers.prepareWriteDirs.containerSecurityContext.privileged Set privileged in Cilium Agent init-containers' Security Context
      ## @param agent.defaultInitContainers.prepareWriteDirs.containerSecurityContext.allowPrivilegeEscalation Set allowPrivilegeEscalation in Cilium Agent init-containers' Security Context
      ## @param agent.defaultInitContainers.prepareWriteDirs.containerSecurityContext.capabilities.add List of capabilities to be added in Cilium Agent init-containers
      ## @param agent.defaultInitContainers.prepareWriteDirs.containerSecurityContext.capabilities.drop List of capabilities to be dropped in Cilium Agent init-containers
      ## @param agent.defaultInitContainers.prepareWriteDirs.containerSecurityContext.seccompProfile.type Set seccomp profile in Cilium Agent init-containers
      ##
      containerSecurityContext:
        enabled: true
        seLinuxOptions: {}
        runAsUser: 1001
        runAsGroup: 1001
        runAsNonRoot: true
        readOnlyRootFilesystem: true
        privileged: false
        allowPrivilegeEscalation: false
        capabilities:
          add: []
          drop: ["ALL"]
        seccompProfile:
          type: "RuntimeDefault"
      ## Cilium Agent "prepare-write-dirs" init container resource requests and limits
      ## ref: http://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
      ## @param agent.defaultInitContainers.prepareWriteDirs.resourcesPreset Set Cilium Agent "prepare-write-dirs" init container resources according to one common preset (allowed values: none, nano, small, medium, large, xlarge, 2xlarge). This is ignored if agent.resources is set (agent.initContainerResources is recommended for production).
      ## More information: https://github.com/bitnami/charts/blob/main/bitnami/common/templates/_resources.tpl#L15
      ##
      resourcesPreset: "nano"
      ## @param agent.defaultInitContainers.prepareWriteDirs.resources Set Cilium Agent "prepare-write-dirs" init container requests and limits for different resources like CPU or memory (essential for production workloads)
      ## Example:
      ## initContainerResources:
      ##   requests:
      ##     cpu: 2
      ##     memory: 512Mi
      ##   limits:
      ##     cpu: 3
      ##     memory: 1024Mi
      ##
      resources: {}
    ## Cilium Agent "build-config" init container
    ## Used to generate the Cilium configuration
    ##
    buildConfig:
      ## Configure "build-config" init-container Security Context
      ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
      ## @param agent.defaultInitContainers.buildConfig.containerSecurityContext.enabled Enabled Cilium Agent init-containers' Security Context
      ## @param agent.defaultInitContainers.buildConfig.containerSecurityContext.seLinuxOptions [object,nullable] Set SELinux options in Cilium Agent init-containers
      ## @param agent.defaultInitContainers.buildConfig.containerSecurityContext.runAsUser Set runAsUser in Cilium Agent init-containers' Security Context
      ## @param agent.defaultInitContainers.buildConfig.containerSecurityContext.runAsGroup Set runAsUser in Cilium Agent init-containers' Security Context
      ## @param agent.defaultInitContainers.buildConfig.containerSecurityContext.runAsNonRoot Set runAsNonRoot in Cilium Agent init-containers' Security Context
      ## @param agent.defaultInitContainers.buildConfig.containerSecurityContext.readOnlyRootFilesystem Set readOnlyRootFilesystem in Cilium Agent init-containers' Security Context
      ## @param agent.defaultInitContainers.buildConfig.containerSecurityContext.privileged Set privileged in Cilium Agent init-containers' Security Context
      ## @param agent.defaultInitContainers.buildConfig.containerSecurityContext.allowPrivilegeEscalation Set allowPrivilegeEscalation in Cilium Agent init-containers' Security Context
      ## @param agent.defaultInitContainers.buildConfig.containerSecurityContext.capabilities.add List of capabilities to be added in Cilium Agent init-containers
      ## @param agent.defaultInitContainers.buildConfig.containerSecurityContext.capabilities.drop List of capabilities to be dropped in Cilium Agent init-containers
      ## @param agent.defaultInitContainers.buildConfig.containerSecurityContext.seccompProfile.type Set seccomp profile in Cilium Agent init-containers
      ##
      containerSecurityContext:
        enabled: true
        seLinuxOptions: {}
        runAsUser: 1001
        runAsGroup: 1001
        runAsNonRoot: true
        readOnlyRootFilesystem: true
        privileged: false
        allowPrivilegeEscalation: false
        capabilities:
          add: []
          drop: ["ALL"]
        seccompProfile:
          type: "RuntimeDefault"
      ## Cilium Agent "build-config" init container resource requests and limits
      ## ref: http://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
      ## @param agent.defaultInitContainers.buildConfig.resourcesPreset Set Cilium Agent "build-config" init container resources according to one common preset (allowed values: none, nano, small, medium, large, xlarge, 2xlarge). This is ignored if agent.resources is set (agent.initContainerResources is recommended for production).
      ## More information: https://github.com/bitnami/charts/blob/main/bitnami/common/templates/_resources.tpl#L15
      ##
      resourcesPreset: "nano"
      ## @param agent.defaultInitContainers.buildConfig.resources Set Cilium Agent "build-config" init container requests and limits for different resources like CPU or memory (essential for production workloads)
      ## Example:
      ## initContainerResources:
      ##   requests:
      ##     cpu: 2
      ##     memory: 512Mi
      ##   limits:
      ##     cpu: 3
      ##     memory: 1024Mi
      ##
      resources: {}
    ## Cilium Agent "install-cni-plugin" init container
    ## Used to install the Cilium CNI plugin in the host
    ##
    installCniPlugin:
      ## Configure "install-cni-plugin" init-container Security Context
      ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
      ## @param agent.defaultInitContainers.installCniPlugin.containerSecurityContext.enabled Enabled Cilium Agent init-containers' Security Context
      ## @param agent.defaultInitContainers.installCniPlugin.containerSecurityContext.seLinuxOptions [object,nullable] Set SELinux options in Cilium Agent init-containers
      ## @param agent.defaultInitContainers.installCniPlugin.containerSecurityContext.runAsUser Set runAsUser in Cilium Agent init-containers' Security Context
      ## @param agent.defaultInitContainers.installCniPlugin.containerSecurityContext.runAsGroup Set runAsUser in Cilium Agent init-containers' Security Context
      ## @param agent.defaultInitContainers.installCniPlugin.containerSecurityContext.runAsNonRoot Set runAsNonRoot in Cilium Agent init-containers' Security Context
      ## @param agent.defaultInitContainers.installCniPlugin.containerSecurityContext.readOnlyRootFilesystem Set readOnlyRootFilesystem in Cilium Agent init-containers' Security Context
      ## @param agent.defaultInitContainers.installCniPlugin.containerSecurityContext.privileged Set privileged in Cilium Agent init-containers' Security Context
      ## @param agent.defaultInitContainers.installCniPlugin.containerSecurityContext.allowPrivilegeEscalation Set allowPrivilegeEscalation in Cilium Agent init-containers' Security Context
      ## @param agent.defaultInitContainers.installCniPlugin.containerSecurityContext.capabilities.add List of capabilities to be added in Cilium Agent init-containers
      ## @param agent.defaultInitContainers.installCniPlugin.containerSecurityContext.capabilities.drop List of capabilities to be dropped in Cilium Agent init-containers
      ## @param agent.defaultInitContainers.installCniPlugin.containerSecurityContext.seccompProfile.type Set seccomp profile in Cilium Agent init-containers
      ##
      containerSecurityContext:
        enabled: true
        ## Running with spc_t type (designed for privileged operations, check capabilities)
        ## since the container is not executed as a privileged container by default. This
        ## should prevent issues with SELinux policies.
        seLinuxOptions:
          level: 's0'
          type: 'spc_t'
        runAsUser: 0
        runAsGroup: 0
        runAsNonRoot: false
        readOnlyRootFilesystem: true
        privileged: false
        allowPrivilegeEscalation: false
        capabilities:
          add:
          - NET_ADMIN
          - SYS_ADMIN
          - SYS_CHROOT
          - SYS_MODULE
          - SYS_PTRACE
          - SYS_RESOURCE
          drop: ["ALL"]
        seccompProfile:
          type: "RuntimeDefault"
      ## Cilium Agent "install-cni-plugin" init container resource requests and limits
      ## ref: http://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
      ## @param agent.defaultInitContainers.installCniPlugin.resourcesPreset Set Cilium Agent "install-cni-plugin" init container resources according to one common preset (allowed values: none, nano, small, medium, large, xlarge, 2xlarge). This is ignored if agent.resources is set (agent.initContainerResources is recommended for production).
      ## More information: https://github.com/bitnami/charts/blob/main/bitnami/common/templates/_resources.tpl#L15
      ##
      resourcesPreset: "nano"
      ## @param agent.defaultInitContainers.installCniPlugin.resources Set Cilium Agent "install-cni-plugin" init container requests and limits for different resources like CPU or memory (essential for production workloads)
      ## Example:
      ## initContainerResources:
      ##   requests:
      ##     cpu: 2
      ##     memory: 512Mi
      ##   limits:
      ##     cpu: 3
      ##     memory: 1024Mi
      ##
      resources: {}
    ## Cilium Agent "host-mount-bpf" init container
    ## Used to mount bpf fs in the host
    ##
    mountBpf:
      ## Configure "host-mount-bpf" init-container Security Context
      ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
      ## @param agent.defaultInitContainers.mountBpf.containerSecurityContext.enabled Enabled Cilium Agent init-containers' Security Context
      ## @param agent.defaultInitContainers.mountBpf.containerSecurityContext.seLinuxOptions [object,nullable] Set SELinux options in Cilium Agent init-containers
      ## @param agent.defaultInitContainers.mountBpf.containerSecurityContext.runAsUser Set runAsUser in Cilium Agent init-containers' Security Context
      ## @param agent.defaultInitContainers.mountBpf.containerSecurityContext.runAsGroup Set runAsUser in Cilium Agent init-containers' Security Context
      ## @param agent.defaultInitContainers.mountBpf.containerSecurityContext.runAsNonRoot Set runAsNonRoot in Cilium Agent init-containers' Security Context
      ## @param agent.defaultInitContainers.mountBpf.containerSecurityContext.readOnlyRootFilesystem Set readOnlyRootFilesystem in Cilium Agent init-containers' Security Context
      ## @param agent.defaultInitContainers.mountBpf.containerSecurityContext.privileged Set privileged in Cilium Agent init-containers' Security Context
      ## @param agent.defaultInitContainers.mountBpf.containerSecurityContext.allowPrivilegeEscalation Set allowPrivilegeEscalation in Cilium Agent init-containers' Security Context
      ## @param agent.defaultInitContainers.mountBpf.containerSecurityContext.capabilities.add List of capabilities to be added in Cilium Agent init-containers
      ## @param agent.defaultInitContainers.mountBpf.containerSecurityContext.capabilities.drop List of capabilities to be dropped in Cilium Agent init-containers
      ## @param agent.defaultInitContainers.mountBpf.containerSecurityContext.seccompProfile.type Set seccomp profile in Cilium Agent init-containers
      ##
      containerSecurityContext:
        enabled: true
        seLinuxOptions: {}
        runAsUser: 0
        runAsGroup: 0
        runAsNonRoot: false
        readOnlyRootFilesystem: true
        privileged: true
        allowPrivilegeEscalation: true
        capabilities:
          add: []
          drop: []
        seccompProfile:
          type: "RuntimeDefault"
      ## Cilium Agent "host-mount-bpf" init container resource requests and limits
      ## ref: http://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
      ## @param agent.defaultInitContainers.mountBpf.resourcesPreset Set Cilium Agent "host-mount-bpf" init container resources according to one common preset (allowed values: none, nano, small, medium, large, xlarge, 2xlarge). This is ignored if agent.resources is set (agent.initContainerResources is recommended for production).
      ## More information: https://github.com/bitnami/charts/blob/main/bitnami/common/templates/_resources.tpl#L15
      ##
      resourcesPreset: "nano"
      ## @param agent.defaultInitContainers.mountBpf.resources Set Cilium Agent "host-mount-bpf" init container requests and limits for different resources like CPU or memory (essential for production workloads)
      ## Example:
      ## initContainerResources:
      ##   requests:
      ##     cpu: 2
      ##     memory: 512Mi
      ##   limits:
      ##     cpu: 3
      ##     memory: 1024Mi
      ##
      resources: {}
    ## Cilium Agent "host-mount-cgroup2" init container
    ## Used to mount cgroup2 filesystem in the host
    ##
    mountCgroup2:
      ## Configure "host-mount-cgroup2" init-container Security Context
      ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
      ## @param agent.defaultInitContainers.mountCgroup2.containerSecurityContext.enabled Enabled Cilium Agent init-containers' Security Context
      ## @param agent.defaultInitContainers.mountCgroup2.containerSecurityContext.seLinuxOptions [object,nullable] Set SELinux options in Cilium Agent init-containers
      ## @param agent.defaultInitContainers.mountCgroup2.containerSecurityContext.runAsUser Set runAsUser in Cilium Agent init-containers' Security Context
      ## @param agent.defaultInitContainers.mountCgroup2.containerSecurityContext.runAsGroup Set runAsUser in Cilium Agent init-containers' Security Context
      ## @param agent.defaultInitContainers.mountCgroup2.containerSecurityContext.runAsNonRoot Set runAsNonRoot in Cilium Agent init-containers' Security Context
      ## @param agent.defaultInitContainers.mountCgroup2.containerSecurityContext.readOnlyRootFilesystem Set readOnlyRootFilesystem in Cilium Agent init-containers' Security Context
      ## @param agent.defaultInitContainers.mountCgroup2.containerSecurityContext.privileged Set privileged in Cilium Agent init-containers' Security Context
      ## @param agent.defaultInitContainers.mountCgroup2.containerSecurityContext.allowPrivilegeEscalation Set allowPrivilegeEscalation in Cilium Agent init-containers' Security Context
      ## @param agent.defaultInitContainers.mountCgroup2.containerSecurityContext.capabilities.add List of capabilities to be added in Cilium Agent init-containers
      ## @param agent.defaultInitContainers.mountCgroup2.containerSecurityContext.capabilities.drop List of capabilities to be dropped in Cilium Agent init-containers
      ## @param agent.defaultInitContainers.mountCgroup2.containerSecurityContext.seccompProfile.type Set seccomp profile in Cilium Agent init-containers
      ##
      containerSecurityContext:
        enabled: true
        seLinuxOptions: {}
        runAsUser: 0
        runAsGroup: 0
        runAsNonRoot: false
        readOnlyRootFilesystem: true
        privileged: true
        allowPrivilegeEscalation: true
        capabilities:
          add: []
          drop: []
        seccompProfile:
          type: "RuntimeDefault"
      ## Cilium Agent "host-mount-cgroup2" init container resource requests and limits
      ## ref: http://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
      ## @param agent.defaultInitContainers.mountCgroup2.resourcesPreset Set Cilium Agent "host-mount-cgroup2" init container resources according to one common preset (allowed values: none, nano, small, medium, large, xlarge, 2xlarge). This is ignored if agent.resources is set (agent.initContainerResources is recommended for production).
      ## More information: https://github.com/bitnami/charts/blob/main/bitnami/common/templates/_resources.tpl#L15
      ##
      resourcesPreset: "nano"
      ## @param agent.defaultInitContainers.mountCgroup2.resources Set Cilium Agent "host-mount-cgroup2" init container requests and limits for different resources like CPU or memory (essential for production workloads)
      ## Example:
      ## initContainerResources:
      ##   requests:
      ##     cpu: 2
      ##     memory: 512Mi
      ##   limits:
      ##     cpu: 3
      ##     memory: 1024Mi
      ##
      resources: {}
    ## Cilium Agent "clean-state" init container
    ## Used to cleans up the Cilium state
    ##
    cleanState:
      ## Configure "clean-state" init-container Security Context
      ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
      ## @param agent.defaultInitContainers.cleanState.containerSecurityContext.enabled Enabled Cilium Agent init-containers' Security Context
      ## @param agent.defaultInitContainers.cleanState.containerSecurityContext.seLinuxOptions [object,nullable] Set SELinux options in Cilium Agent init-containers
      ## @param agent.defaultInitContainers.cleanState.containerSecurityContext.runAsUser Set runAsUser in Cilium Agent init-containers' Security Context
      ## @param agent.defaultInitContainers.cleanState.containerSecurityContext.runAsGroup Set runAsUser in Cilium Agent init-containers' Security Context
      ## @param agent.defaultInitContainers.cleanState.containerSecurityContext.runAsNonRoot Set runAsNonRoot in Cilium Agent init-containers' Security Context
      ## @param agent.defaultInitContainers.cleanState.containerSecurityContext.readOnlyRootFilesystem Set readOnlyRootFilesystem in Cilium Agent init-containers' Security Context
      ## @param agent.defaultInitContainers.cleanState.containerSecurityContext.privileged Set privileged in Cilium Agent init-containers' Security Context
      ## @param agent.defaultInitContainers.cleanState.containerSecurityContext.allowPrivilegeEscalation Set allowPrivilegeEscalation in Cilium Agent init-containers' Security Context
      ## @param agent.defaultInitContainers.cleanState.containerSecurityContext.capabilities.add List of capabilities to be added in Cilium Agent init-containers
      ## @param agent.defaultInitContainers.cleanState.containerSecurityContext.capabilities.drop List of capabilities to be dropped in Cilium Agent init-containers
      ## @param agent.defaultInitContainers.cleanState.containerSecurityContext.seccompProfile.type Set seccomp profile in Cilium Agent init-containers
      ##
      containerSecurityContext:
        enabled: true
        ## Running with spc_t type (designed for privileged operations, check capabilities)
        ## since the container is not executed as a privileged container by default. This
        ## should prevent issues with SELinux policies.
        seLinuxOptions:
          level: 's0'
          type: 'spc_t'
        runAsUser: 1001
        runAsGroup: 1001
        runAsNonRoot: true
        readOnlyRootFilesystem: true
        privileged: false
        allowPrivilegeEscalation: false
        capabilities:
          add:
          - NET_ADMIN
          - SYS_ADMIN
          - SYS_MODULE
          - SYS_RESOURCE
          drop: ["ALL"]
        seccompProfile:
          type: "RuntimeDefault"
      ## Cilium Agent "clean-state" init container resource requests and limits
      ## ref: http://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
      ## @param agent.defaultInitContainers.cleanState.resourcesPreset Set Cilium Agent "clean-state" init container resources according to one common preset (allowed values: none, nano, small, medium, large, xlarge, 2xlarge). This is ignored if agent.resources is set (agent.initContainerResources is recommended for production).
      ## More information: https://github.com/bitnami/charts/blob/main/bitnami/common/templates/_resources.tpl#L15
      ##
      resourcesPreset: "nano"
      ## @param agent.defaultInitContainers.cleanState.resources Set Cilium Agent "clean-state" init container requests and limits for different resources like CPU or memory (essential for production workloads)
      ## Example:
      ## initContainerResources:
      ##   requests:
      ##     cpu: 2
      ##     memory: 512Mi
      ##   limits:
      ##     cpu: 3
      ##     memory: 1024Mi
      ##
      resources: {}
    ## Cilium Agent "wait-for-kube-proxy" init container
    ## Used to waits for kube-proxy to be ready
    ##
    waitForKubeProxy:
      ## Configure "wait-for-kube-proxy" init-container Security Context
      ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
      ## @param agent.defaultInitContainers.waitForKubeProxy.containerSecurityContext.enabled Enabled Cilium Agent init-containers' Security Context
      ## @param agent.defaultInitContainers.waitForKubeProxy.containerSecurityContext.seLinuxOptions [object,nullable] Set SELinux options in Cilium Agent init-containers
      ## @param agent.defaultInitContainers.waitForKubeProxy.containerSecurityContext.runAsUser Set runAsUser in Cilium Agent init-containers' Security Context
      ## @param agent.defaultInitContainers.waitForKubeProxy.containerSecurityContext.runAsGroup Set runAsUser in Cilium Agent init-containers' Security Context
      ## @param agent.defaultInitContainers.waitForKubeProxy.containerSecurityContext.runAsNonRoot Set runAsNonRoot in Cilium Agent init-containers' Security Context
      ## @param agent.defaultInitContainers.waitForKubeProxy.containerSecurityContext.readOnlyRootFilesystem Set readOnlyRootFilesystem in Cilium Agent init-containers' Security Context
      ## @param agent.defaultInitContainers.waitForKubeProxy.containerSecurityContext.privileged Set privileged in Cilium Agent init-containers' Security Context
      ## @param agent.defaultInitContainers.waitForKubeProxy.containerSecurityContext.allowPrivilegeEscalation Set allowPrivilegeEscalation in Cilium Agent init-containers' Security Context
      ## @param agent.defaultInitContainers.waitForKubeProxy.containerSecurityContext.capabilities.add List of capabilities to be added in Cilium Agent init-containers
      ## @param agent.defaultInitContainers.waitForKubeProxy.containerSecurityContext.capabilities.drop List of capabilities to be dropped in Cilium Agent init-containers
      ## @param agent.defaultInitContainers.waitForKubeProxy.containerSecurityContext.seccompProfile.type Set seccomp profile in Cilium Agent init-containers
      ##
      containerSecurityContext:
        enabled: true
        seLinuxOptions: {}
        runAsUser: 0
        runAsGroup: 0
        runAsNonRoot: false
        readOnlyRootFilesystem: true
        privileged: true
        allowPrivilegeEscalation: true
        capabilities:
          add: []
          drop: []
        seccompProfile:
          type: "RuntimeDefault"
      ## Cilium Agent "wait-for-kube-proxy" init container resource requests and limits
      ## ref: http://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
      ## @param agent.defaultInitContainers.waitForKubeProxy.resourcesPreset Set Cilium Agent "wait-for-kube-proxy" init container resources according to one common preset (allowed values: none, nano, small, medium, large, xlarge, 2xlarge). This is ignored if agent.resources is set (agent.initContainerResources is recommended for production).
      ## More information: https://github.com/bitnami/charts/blob/main/bitnami/common/templates/_resources.tpl#L15
      ##
      resourcesPreset: "nano"
      ## @param agent.defaultInitContainers.waitForKubeProxy.resources Set Cilium Agent "wait-for-kube-proxy" init container requests and limits for different resources like CPU or memory (essential for production workloads)
      ## Example:
      ## initContainerResources:
      ##   requests:
      ##     cpu: 2
      ##     memory: 512Mi
      ##   limits:
      ##     cpu: 3
      ##     memory: 1024Mi
      ##
      resources: {}
  ## Autoscaling configuration
  ## ref: https://kubernetes.io/docs/concepts/workloads/autoscaling/
  ##
  autoscaling:
    ## @param agent.autoscaling.vpa.enabled Enable VPA for Cilium Agent
    ## @param agent.autoscaling.vpa.annotations Annotations for VPA resource
    ## @param agent.autoscaling.vpa.controlledResources List of resources that the VPA can control. Defaults to cpu and memory
    ## @param agent.autoscaling.vpa.maxAllowed VPA max allowed resources for the pod
    ## @param agent.autoscaling.vpa.minAllowed VPA min allowed resources for the pod
    ##
    vpa:
      enabled: false
      annotations: {}
      controlledResources: []
      maxAllowed: {}
      minAllowed: {}
      ## @param agent.autoscaling.vpa.updatePolicy.updateMode Autoscaling update policy
      ## Specifies whether recommended updates are applied when a Pod is started and whether recommended updates are applied during the life of a Pod
      ## Possible values are "Off", "Initial", "Recreate", and "Auto".
      ##
      updatePolicy:
        updateMode: Auto
  ## @section Cilium Agent RBAC configuration
  ##
  serviceAccount:
    ## @param agent.serviceAccount.create Specifies whether a ServiceAccount should be created for Cilium Agent
    ##
    create: true
    ## @param agent.serviceAccount.name The name of the ServiceAccount to use for Cilium Agent
    ## If not set and create is true, a name is generated using the cilium.agent.fullname template
    ##
    name: ""
    ## @param agent.serviceAccount.annotations Additional Service Account annotations (evaluated as a template)
    ##
    annotations: {}
    ## @param agent.serviceAccount.automountServiceAccountToken Automount ServiceAccount token
    ##
    automountServiceAccountToken: false
  rbac:
    ## @param agent.rbac.create Specifies whether RBAC resources should be created for Cilium Agent
    ##
    create: true
    ## @param agent.rbac.rules Custom RBAC rules to set for Cilium Agent
    ## e.g:
    ## rules:
    ##   - apiGroups:
    ##       - ""
    ##     resources:
    ##       - pods
    ##     verbs:
    ##       - get
    ##       - list
    ##
    rules: []

  ## @section Cilium Agent Network Policies Parameters
  ## ref: https://kubernetes.io/docs/concepts/services-networking/network-policies/
  ##
  networkPolicy:
    ## @param agent.networkPolicy.enabled Specifies whether a NetworkPolicy should be created for Cilium Agent
    ##
    enabled: true
    ## @param agent.networkPolicy.allowExternal Don't require server label for connections
    ## The Policy model to apply. When set to false, only pods with the correct
    ## server label will have network access to the ports server is listening
    ## on. When true, server will accept connections from any source
    ## (with the correct destination port).
    ##
    allowExternal: true
    ## @param agent.networkPolicy.allowExternalEgress Allow the Cilium Agent pods to access any range of port and all destinations.
    ##
    allowExternalEgress: true
    ## @param agent.networkPolicy.addExternalClientAccess Allow access from pods with client label set to "true". Ignored if `agent.networkPolicy.allowExternal` is true.
    ##
    addExternalClientAccess: true
    ## @param agent.networkPolicy.kubeAPIServerPorts [array] List of possible endpoints to kube-apiserver (limit to your cluster settings to increase security)
    ##
    kubeAPIServerPorts: [443, 6443, 8443]
    ## @param agent.networkPolicy.extraIngress [array] Add extra ingress rules to the NetworkPolicy
    ## e.g:
    ## extraIngress:
    ##   - ports:
    ##       - port: 1234
    ##     from:
    ##       - podSelector:
    ##           - matchLabels:
    ##               - role: frontend
    ##       - podSelector:
    ##           - matchExpressions:
    ##               - key: role
    ##                 operator: In
    ##                 values:
    ##                   - frontend
    extraIngress: []
    ## @param agent.networkPolicy.extraEgress [array] Add extra ingress rules to the NetworkPolicy (ignored if allowExternalEgress=true)
    ## e.g:
    ## extraEgress:
    ##   - ports:
    ##       - port: 1234
    ##     to:
    ##       - podSelector:
    ##           - matchLabels:
    ##               - role: frontend
    ##       - podSelector:
    ##           - matchExpressions:
    ##               - key: role
    ##                 operator: In
    ##                 values:
    ##                   - frontend
    ##
    extraEgress: []
    ## @param agent.networkPolicy.ingressPodMatchLabels [object] Labels to match to allow traffic from other pods. Ignored if `agent.networkPolicy.allowExternal` is true.
    ## e.g:
    ## ingressPodMatchLabels:
    ##   my-client: "true"
    #
    ingressPodMatchLabels: {}
    ## @param agent.networkPolicy.ingressNSMatchLabels [object] Labels to match to allow traffic from other namespaces
    ## @param agent.networkPolicy.ingressNSPodMatchLabels [object] Pod labels to match to allow traffic from other namespaces
    ##
    ingressNSMatchLabels: {}
    ingressNSPodMatchLabels: {}

  ## @section Cilium Agent Metrics Parameters
  ##
  metrics:
    ## @param agent.metrics.enabled Enable the export of Prometheus metrics for Cilium Agent
    ##
    enabled: false
    ## Metrics service properties
    ##
    service:
      ## @param agent.metrics.service.port Cilium Agent metrics service port
      ##
      port: 9962
      ## @param agent.metrics.service.annotations [object] Annotations for the Cilium Agent metrics service.
      ##
      annotations: {}
    ## Prometheus Operator ServiceMonitor configuration
    ##
    serviceMonitor:
      ## @param agent.metrics.serviceMonitor.enabled if `true`, creates a Prometheus Operator ServiceMonitor (also requires `metrics.enabled` to be `true`)
      ##
      enabled: false
      ## @param agent.metrics.serviceMonitor.namespace Namespace in which Prometheus is running
      ##
      namespace: ""
      ## @param agent.metrics.serviceMonitor.annotations Additional custom annotations for the ServiceMonitor
      ##
      annotations: {}
      ## @param agent.metrics.serviceMonitor.labels Extra labels for the ServiceMonitor
      ##
      labels: {}
      ## @param agent.metrics.serviceMonitor.jobLabel The name of the label on the target service to use as the job name in Prometheus
      ##
      jobLabel: ""
      ## @param agent.metrics.serviceMonitor.honorLabels honorLabels chooses the metric's labels on collisions with target labels
      ##
      honorLabels: false
      ## @param agent.metrics.serviceMonitor.interval Interval at which metrics should be scraped.
      ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint
      ## e.g:
      ## interval: 10s
      ##
      interval: ""
      ## @param agent.metrics.serviceMonitor.scrapeTimeout Timeout after which the scrape is ended
      ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint
      ## e.g:
      ## scrapeTimeout: 10s
      ##
      scrapeTimeout: ""
      ## @param agent.metrics.serviceMonitor.metricRelabelings Specify additional relabeling of metrics
      ##
      metricRelabelings: []
      ## @param agent.metrics.serviceMonitor.relabelings Specify general relabeling
      ##
      relabelings: []
      ## @param agent.metrics.serviceMonitor.selector Prometheus instance selector labels
      ## ref: https://github.com/bitnami/charts/tree/main/bitnami/prometheus-operator#prometheus-configuration
      ## selector:
      ##   prometheus: my-prometheus
      ##
      selector: {}
## @section Cilium Operator Parameters
##
operator:
  ## Bitnami Cilium Operator image
  ## ref: https://hub.docker.com/r/bitnami/cilium/tags/
  ## @param operator.image.registry [default: REGISTRY_NAME] Cilium Operator image registry
  ## @param operator.image.repository [default: REPOSITORY_NAME/cilium] Cilium Operator image repository
  ## @skip operator.image.tag Cilium Operator image tag (immutable tags are recommended)
  ## @param operator.image.digest Cilium Operator image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag image tag (immutable tags are recommended)
  ## @param operator.image.pullPolicy Cilium Operator image pull policy
  ## @param operator.image.pullSecrets Cilium Operator image pull secrets
  ## @param operator.image.debug Enable Cilium Operator image debug mode
  ##
  image:
    registry: docker.io
    repository: bitnami/cilium-operator
    tag: 1.16.5-debian-12-r0
    digest: ""
    ## Specify a imagePullPolicy
    ## ref: https://kubernetes.io/docs/concepts/containers/images/#pre-pulled-images
    ##
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
    debug: false
  ## @param operator.replicaCount Number of Cilium Operator replicas to deploy
  ##
  replicaCount: 1
  ## @param operator.containerPorts.api Cilium Operator API container port
  ## @param operator.containerPorts.pprof Cilium Operator pprof container port
  ## @param operator.containerPorts.metrics Cilium Operator metrics container port
  ##
  containerPorts:
    api: 9234
    pprof: 6061
    metrics: 9963
  ## @param operator.extraContainerPorts Optionally specify extra list of additional ports for Cilium Operator containers
  ## e.g:
  ## extraContainerPorts:
  ##   - name: myservice
  ##     containerPort: 9090
  ##
  extraContainerPorts: []
  ## @param operator.hostNetwork Enable Host Network
  ## If hostNetwork true -> dnsPolicy is set to ClusterFirstWithHostNet
  ## true by default as upstream does
  ##
  hostNetwork: true
  ## Configure extra options for Cilium Operator containers' liveness and readiness probes
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
  ## @param operator.livenessProbe.enabled Enable livenessProbe on Cilium Operator containers
  ## @param operator.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
  ## @param operator.livenessProbe.periodSeconds Period seconds for livenessProbe
  ## @param operator.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
  ## @param operator.livenessProbe.failureThreshold Failure threshold for livenessProbe
  ## @param operator.livenessProbe.successThreshold Success threshold for livenessProbe
  ##
  livenessProbe:
    enabled: true
    initialDelaySeconds: 10
    periodSeconds: 30
    timeoutSeconds: 5
    failureThreshold: 10
    successThreshold: 1
  ## @param operator.readinessProbe.enabled Enable readinessProbe on Cilium Operator containers
  ## @param operator.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
  ## @param operator.readinessProbe.periodSeconds Period seconds for readinessProbe
  ## @param operator.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
  ## @param operator.readinessProbe.failureThreshold Failure threshold for readinessProbe
  ## @param operator.readinessProbe.successThreshold Success threshold for readinessProbe
  ##
  readinessProbe:
    enabled: true
    initialDelaySeconds: 10
    periodSeconds: 30
    timeoutSeconds: 5
    failureThreshold: 3
    successThreshold: 1
  ## @param operator.startupProbe.enabled Enable startupProbe on Cilium Operator containers
  ## @param operator.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
  ## @param operator.startupProbe.periodSeconds Period seconds for startupProbe
  ## @param operator.startupProbe.timeoutSeconds Timeout seconds for startupProbe
  ## @param operator.startupProbe.failureThreshold Failure threshold for startupProbe
  ## @param operator.startupProbe.successThreshold Success threshold for startupProbe
  ##
  startupProbe:
    enabled: false
    initialDelaySeconds: 5
    periodSeconds: 2
    timeoutSeconds: 1
    failureThreshold: 100
    successThreshold: 1
  ## @param operator.customLivenessProbe Custom livenessProbe that overrides the default one
  ##
  customLivenessProbe: {}
  ## @param operator.customReadinessProbe Custom readinessProbe that overrides the default one
  ##
  customReadinessProbe: {}
  ## @param operator.customStartupProbe Custom startupProbe that overrides the default one
  ##
  customStartupProbe: {}
  ## Cilium Operator resource requests and limits
  ## ref: http://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
  ## @param operator.resourcesPreset Set Cilium Operator container resources according to one common preset (allowed values: none, nano, small, medium, large, xlarge, 2xlarge). This is ignored if operator.resources is set (operator.resources is recommended for production).
  ## More information: https://github.com/bitnami/charts/blob/main/bitnami/common/templates/_resources.tpl#L15
  ##
  resourcesPreset: "micro"
  ## @param operator.resources Set Cilium Operator container requests and limits for different resources like CPU or memory (essential for production workloads)
  ## Example:
  ## resources:
  ##   requests:
  ##     cpu: 2
  ##     memory: 512Mi
  ##   limits:
  ##     cpu: 3
  ##     memory: 1024Mi
  ##
  resources: {}
  ## Configure Pods Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param operator.podSecurityContext.enabled Enable Cilium Operator pods' Security Context
  ## @param operator.podSecurityContext.fsGroupChangePolicy Set filesystem group change policy for Cilium Operator pods
  ## @param operator.podSecurityContext.sysctls Set kernel settings using the sysctl interface for Cilium Operator pods
  ## @param operator.podSecurityContext.supplementalGroups Set filesystem extra groups for Cilium Operator pods
  ## @param operator.podSecurityContext.fsGroup Set fsGroup in Cilium Operator pods' Security Context
  ##
  podSecurityContext:
    enabled: true
    fsGroupChangePolicy: Always
    sysctls: []
    supplementalGroups: []
    fsGroup: 1001
  ## Configure Container Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
  ## @param operator.containerSecurityContext.enabled Enabled Cilium Operator container' Security Context
  ## @param operator.containerSecurityContext.seLinuxOptions [object,nullable] Set SELinux options in Cilium Operator container
  ## @param operator.containerSecurityContext.runAsUser Set runAsUser in Cilium Operator container' Security Context
  ## @param operator.containerSecurityContext.runAsGroup Set runAsUser in Cilium Operator container' Security Context
  ## @param operator.containerSecurityContext.runAsNonRoot Set runAsNonRoot in Cilium Operator container' Security Context
  ## @param operator.containerSecurityContext.readOnlyRootFilesystem Set readOnlyRootFilesystem in Cilium Operator container' Security Context
  ## @param operator.containerSecurityContext.privileged Set privileged in Cilium Operator container' Security Context
  ## @param operator.containerSecurityContext.allowPrivilegeEscalation Set allowPrivilegeEscalation in Cilium Operator container' Security Context
  ## @param operator.containerSecurityContext.capabilities.drop List of capabilities to be dropped in Cilium Operator container
  ## @param operator.containerSecurityContext.seccompProfile.type Set seccomp profile in Cilium Operator container
  ##
  containerSecurityContext:
    enabled: true
    seLinuxOptions: {}
    runAsUser: 1001
    runAsGroup: 1001
    runAsNonRoot: true
    readOnlyRootFilesystem: true
    privileged: false
    allowPrivilegeEscalation: false
    capabilities:
      drop: ["ALL"]
    seccompProfile:
      type: "RuntimeDefault"
  ## @param operator.enablePprof Enable pprof for Cilium Operator
  ##
  enablePprof: false
  ## @param operator.command Override default Cilium Operator container command (useful when using custom images)
  ##
  command: []
  ## @param operator.args Override default Cilium Operator container args (useful when using custom images)
  ##
  args: []
  ## @param operator.automountServiceAccountToken Mount Service Account token in Cilium Operator pods
  ##
  automountServiceAccountToken: true
  ## @param operator.hostAliases Cilium Operator pods host aliases
  ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
  ##
  hostAliases: []
  ## @param operator.deploymentAnnotations Annotations for Cilium Operator deployment
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  deploymentAnnotations: {}
  ## @param operator.podLabels Extra labels for Cilium Operator pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  ##
  podLabels: {}
  ## @param operator.podAnnotations Annotations for Cilium Operator pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  podAnnotations: {}
  ## @param operator.podAffinityPreset Pod affinity preset. Ignored if `operator.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAffinityPreset: ""
  ## @param operator.podAntiAffinityPreset Pod anti-affinity preset. Ignored if `operator.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAntiAffinityPreset: soft
  ## Node operator.affinity preset
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
  ##
  nodeAffinityPreset:
    ## @param operator.nodeAffinityPreset.type Node affinity preset type. Ignored if `operator.affinity` is set. Allowed values: `soft` or `hard`
    ##
    type: ""
    ## @param operator.nodeAffinityPreset.key Node label key to match. Ignored if `operator.affinity` is set
    ##
    key: ""
    ## @param operator.nodeAffinityPreset.values Node label values to match. Ignored if `operator.affinity` is set
    ## E.g.
    ## values:
    ##   - e2e-az1
    ##   - e2e-az2
    ##
    values: []
  ## @param operator.affinity Affinity for Cilium Operator pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ## NOTE: `operator.podAffinityPreset`, `operator.podAntiAffinityPreset`, and `operator.nodeAffinityPreset` will be ignored when it's set
  ##
  affinity: {}
  ## @param operator.nodeSelector [object] Node labels for Cilium Operator pods assignment
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
  ##
  nodeSelector:
    kubernetes.io/os: linux
  ## @param operator.tolerations Tolerations for Cilium Operator pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []
  ## @param operator.updateStrategy.type Cilium Operator deployment update strategy type
  ## Can be set to RollingUpdate or Recreate
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
  ##
  updateStrategy:
    type: RollingUpdate
  ## @param operator.priorityClassName Cilium Operator pods' priorityClassName
  ##
  priorityClassName: ""
  ## @param operator.topologySpreadConstraints Topology Spread Constraints for Cilium Operator pod assignment spread across your cluster among failure-domains
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/#spread-constraints-for-pods
  ##
  topologySpreadConstraints: []
  ## @param operator.schedulerName Name of the k8s scheduler (other than default) for Cilium Operator pods
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  schedulerName: ""
  ## @param operator.terminationGracePeriodSeconds Seconds Cilium Operator pods need to terminate gracefully
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods
  ##
  terminationGracePeriodSeconds: 1
  ## @param operator.lifecycleHooks for Cilium Operator containers to automate configuration before or after startup
  ##
  lifecycleHooks: {}
  ## @param operator.extraEnvVars Array with extra environment variables to add to Cilium Operator containers
  ## e.g:
  ## extraEnvVars:
  ##   - name: FOO
  ##     value: "bar"
  ##
  extraEnvVars: []
  ## @param operator.extraEnvVarsCM Name of existing ConfigMap containing extra env vars for Cilium Operator containers
  ##
  extraEnvVarsCM: ""
  ## @param operator.extraEnvVarsSecret Name of existing Secret containing extra env vars for Cilium Operator containers
  ##
  extraEnvVarsSecret: ""
  ## @param operator.extraVolumes Optionally specify extra list of additional volumes for the Cilium Operator pods
  ##
  extraVolumes: []
  ## @param operator.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the Cilium Operator containers
  ##
  extraVolumeMounts: []
  ## @param operator.sidecars Add additional sidecar containers to the Cilium Operator pods
  ## e.g:
  ## sidecars:
  ##   - name: your-image-name
  ##     image: your-image
  ##     imagePullPolicy: Always
  ##     ports:
  ##       - name: portname
  ##         containerPort: 1234
  ##
  sidecars: []
  ## @param operator.initContainers Add additional init containers to the Cilium Operator pods
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
  ## e.g:
  ## initContainers:
  ##  - name: your-image-name
  ##    image: your-image
  ##    imagePullPolicy: Always
  ##    command: ['sh', '-c', 'echo "hello world"']
  ##
  initContainers: []
  ## Pod Disruption Budget configuration
  ## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb
  ## @param operator.pdb.create Enable/disable a Pod Disruption Budget creation
  ## @param operator.pdb.minAvailable Minimum number/percentage of pods that should remain scheduled
  ## @param operator.pdb.maxUnavailable Maximum number/percentage of pods that may be made unavailable. Defaults to `1` if both `operator.pdb.minAvailable` and `operator.pdb.maxUnavailable` are empty.
  ##
  pdb:
    create: true
    minAvailable: ""
    maxUnavailable: ""
  ## Autoscaling configuration
  ## ref: https://kubernetes.io/docs/concepts/workloads/autoscaling/
  ##
  autoscaling:
    ## @param operator.autoscaling.vpa.enabled Enable VPA for Cilium Operator
    ## @param operator.autoscaling.vpa.annotations Annotations for VPA resource
    ## @param operator.autoscaling.vpa.controlledResources List of resources that the VPA can control. Defaults to cpu and memory
    ## @param operator.autoscaling.vpa.maxAllowed VPA max allowed resources for the pod
    ## @param operator.autoscaling.vpa.minAllowed VPA min allowed resources for the pod
    ##
    vpa:
      enabled: false
      annotations: {}
      controlledResources: []
      maxAllowed: {}
      minAllowed: {}
      ## @param operator.autoscaling.vpa.updatePolicy.updateMode Autoscaling update policy
      ## Specifies whether recommended updates are applied when a Pod is started and whether recommended updates are applied during the life of a Pod
      ## Possible values are "Off", "Initial", "Recreate", and "Auto".
      ##
      updatePolicy:
        updateMode: Auto
    ## @param operator.autoscaling.hpa.enabled Enable HPA
    ## @param operator.autoscaling.hpa.minReplicas Minimum number of replicas
    ## @param operator.autoscaling.hpa.maxReplicas Maximum number of replicas
    ## @param operator.autoscaling.hpa.targetCPU Target CPU utilization percentage
    ## @param operator.autoscaling.hpa.targetMemory Target Memory utilization percentage
    ##
    hpa:
      enabled: false
      minReplicas: ""
      maxReplicas: ""
      targetCPU: ""
      targetMemory: ""
  ## @section Cilium Operator RBAC configuration
  ##
  serviceAccount:
    ## @param operator.serviceAccount.create Specifies whether a ServiceAccount should be created for Cilium Operator
    ##
    create: true
    ## @param operator.serviceAccount.name The name of the ServiceAccount to use for Cilium Operator
    ## If not set and create is true, a name is generated using the cilium.operator.fullname template
    ##
    name: ""
    ## @param operator.serviceAccount.annotations Additional Service Account annotations (evaluated as a template)
    ##
    annotations: {}
    ## @param operator.serviceAccount.automountServiceAccountToken Automount ServiceAccount token
    ##
    automountServiceAccountToken: false
  rbac:
    ## @param operator.rbac.create Specifies whether RBAC resources should be created for Cilium Operator
    ##
    create: true
    ## @param operator.rbac.rules Custom RBAC rules to set for Cilium Operator
    ## e.g:
    ## rules:
    ##   - apiGroups:
    ##       - ""
    ##     resources:
    ##       - pods
    ##     verbs:
    ##       - get
    ##       - list
    ##
    rules: []
  ## @section Cilium Operator Network Policies Parameters
  ## ref: https://kubernetes.io/docs/concepts/services-networking/network-policies/
  ##
  networkPolicy:
    ## @param operator.networkPolicy.enabled Specifies whether a NetworkPolicy should be created for Cilium Operator
    ##
    enabled: true
    ## @param operator.networkPolicy.allowExternal Don't require server label for connections
    ## The Policy model to apply. When set to false, only pods with the correct
    ## server label will have network access to the ports server is listening
    ## on. When true, server will accept connections from any source
    ## (with the correct destination port).
    ##
    allowExternal: true
    ## @param operator.networkPolicy.allowExternalEgress Allow the Cilium Operator pods to access any range of port and all destinations.
    ##
    allowExternalEgress: true
    ## @param operator.networkPolicy.addExternalClientAccess Allow access from pods with client label set to "true". Ignored if `operator.networkPolicy.allowExternal` is true.
    ##
    addExternalClientAccess: true
    ## @param operator.networkPolicy.kubeAPIServerPorts [array] List of possible endpoints to kube-apiserver (limit to your cluster settings to increase security)
    ##
    kubeAPIServerPorts: [443, 6443, 8443]
    ## @param operator.networkPolicy.extraIngress [array] Add extra ingress rules to the NetworkPolicy
    ## e.g:
    ## extraIngress:
    ##   - ports:
    ##       - port: 1234
    ##     from:
    ##       - podSelector:
    ##           - matchLabels:
    ##               - role: frontend
    ##       - podSelector:
    ##           - matchExpressions:
    ##               - key: role
    ##                 operator: In
    ##                 values:
    ##                   - frontend
    extraIngress: []
    ## @param operator.networkPolicy.extraEgress [array] Add extra ingress rules to the NetworkPolicy (ignored if allowExternalEgress=true)
    ## e.g:
    ## extraEgress:
    ##   - ports:
    ##       - port: 1234
    ##     to:
    ##       - podSelector:
    ##           - matchLabels:
    ##               - role: frontend
    ##       - podSelector:
    ##           - matchExpressions:
    ##               - key: role
    ##                 operator: In
    ##                 values:
    ##                   - frontend
    ##
    extraEgress: []
    ## @param operator.networkPolicy.ingressPodMatchLabels [object] Labels to match to allow traffic from other pods. Ignored if `operator.networkPolicy.allowExternal` is true.
    ## e.g:
    ## ingressPodMatchLabels:
    ##   my-client: "true"
    #
    ingressPodMatchLabels: {}
    ## @param operator.networkPolicy.ingressNSMatchLabels [object] Labels to match to allow traffic from other namespaces
    ## @param operator.networkPolicy.ingressNSPodMatchLabels [object] Pod labels to match to allow traffic from other namespaces
    ##
    ingressNSMatchLabels: {}
    ingressNSPodMatchLabels: {}

  ## @section Cilium Operator Metrics Parameters
  ##
  metrics:
    ## @param operator.metrics.enabled Enable the export of Prometheus metrics
    ##
    enabled: false
    ## Metrics service properties
    ##
    service:
      ## @param operator.metrics.service.port Metrics service port
      ##
      port: 9963
      ## @param operator.metrics.service.annotations [object] Annotations for the metrics service.
      ##
      annotations: {}
    ## Prometheus Operator ServiceMonitor configuration
    ##
    serviceMonitor:
      ## @param operator.metrics.serviceMonitor.enabled if `true`, creates a Prometheus Operator ServiceMonitor (also requires `metrics.enabled` to be `true`)
      ##
      enabled: false
      ## @param operator.metrics.serviceMonitor.namespace Namespace in which Prometheus is running
      ##
      namespace: ""
      ## @param operator.metrics.serviceMonitor.annotations Additional custom annotations for the ServiceMonitor
      ##
      annotations: {}
      ## @param operator.metrics.serviceMonitor.labels Extra labels for the ServiceMonitor
      ##
      labels: {}
      ## @param operator.metrics.serviceMonitor.jobLabel The name of the label on the target service to use as the job name in Prometheus
      ##
      jobLabel: ""
      ## @param operator.metrics.serviceMonitor.honorLabels honorLabels chooses the metric's labels on collisions with target labels
      ##
      honorLabels: false
      ## @param operator.metrics.serviceMonitor.interval Interval at which metrics should be scraped.
      ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint
      ## e.g:
      ## interval: 10s
      ##
      interval: ""
      ## @param operator.metrics.serviceMonitor.scrapeTimeout Timeout after which the scrape is ended
      ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint
      ## e.g:
      ## scrapeTimeout: 10s
      ##
      scrapeTimeout: ""
      ## @param operator.metrics.serviceMonitor.metricRelabelings Specify additional relabeling of metrics
      ##
      metricRelabelings: []
      ## @param operator.metrics.serviceMonitor.relabelings Specify general relabeling
      ##
      relabelings: []
      ## @param operator.metrics.serviceMonitor.selector Prometheus instance selector labels
      ## ref: https://github.com/bitnami/charts/tree/main/bitnami/prometheus-operator#prometheus-configuration
      ## selector:
      ##   prometheus: my-prometheus
      ##
      selector: {}

## @section Cilium Envoy Parameters
##
envoy:
  ## @param envoy.useDaemonSet Run Cilium Envoy as an independent DaemonSet instead of a sidecar in the Cilium Agent
  ##
  useDaemonSet: false
  ## Bitnami Cilium Proxy image
  ## ref: https://hub.docker.com/r/bitnami/cilium-proxy/tags/
  ## @param envoy.image.registry [default: REGISTRY_NAME] Cilium Proxy image registry
  ## @param envoy.image.repository [default: REPOSITORY_NAME/cilium] Cilium Proxy image repository
  ## @skip envoy.image.tag Cilium Proxy image tag (immutable tags are recommended)
  ## @param envoy.image.digest Cilium Proxy image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag image tag (immutable tags are recommended)
  ## @param envoy.image.pullPolicy Cilium Proxy image pull policy
  ## @param envoy.image.pullSecrets Cilium Proxy image pull secrets
  ## @param envoy.image.debug Enable Cilium Proxy image debug mode
  ##
  image:
    registry: docker.io
    repository: bitnami/cilium-proxy
    tag: 1.29.10-debian-12-r4
    digest: ""
    ## Specify a imagePullPolicy
    ## ref: https://kubernetes.io/docs/concepts/containers/images/#pre-pulled-images
    ##
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
    debug: false
  ## @param envoy.containerPorts.health Cilium Envoy health container port
  ## @param envoy.containerPorts.metrics Cilium Envoy metrics container port
  ##
  containerPorts:
    health: 9878
    metrics: 9964
  ## @param envoy.extraContainerPorts Optionally specify extra list of additional ports for Cilium Envoy containers
  ## e.g:
  ## extraContainerPorts:
  ##   - name: myservice
  ##     containerPort: 9090
  ##
  extraContainerPorts: []
  ## Configure extra options for Cilium Envoy containers' liveness and readiness probes
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
  ## @param envoy.livenessProbe.enabled Enable livenessProbe on Cilium Envoy containers
  ## @param envoy.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
  ## @param envoy.livenessProbe.periodSeconds Period seconds for livenessProbe
  ## @param envoy.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
  ## @param envoy.livenessProbe.failureThreshold Failure threshold for livenessProbe
  ## @param envoy.livenessProbe.successThreshold Success threshold for livenessProbe
  ##
  livenessProbe:
    enabled: true
    initialDelaySeconds: 10
    periodSeconds: 30
    timeoutSeconds: 5
    failureThreshold: 10
    successThreshold: 1
  ## @param envoy.readinessProbe.enabled Enable readinessProbe on Cilium Envoy containers
  ## @param envoy.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
  ## @param envoy.readinessProbe.periodSeconds Period seconds for readinessProbe
  ## @param envoy.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
  ## @param envoy.readinessProbe.failureThreshold Failure threshold for readinessProbe
  ## @param envoy.readinessProbe.successThreshold Success threshold for readinessProbe
  ##
  readinessProbe:
    enabled: true
    initialDelaySeconds: 10
    periodSeconds: 30
    timeoutSeconds: 5
    failureThreshold: 3
    successThreshold: 1
  ## @param envoy.startupProbe.enabled Enable startupProbe on Cilium Envoy containers
  ## @param envoy.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
  ## @param envoy.startupProbe.periodSeconds Period seconds for startupProbe
  ## @param envoy.startupProbe.timeoutSeconds Timeout seconds for startupProbe
  ## @param envoy.startupProbe.failureThreshold Failure threshold for startupProbe
  ## @param envoy.startupProbe.successThreshold Success threshold for startupProbe
  ##
  startupProbe:
    enabled: false
    initialDelaySeconds: 5
    periodSeconds: 2
    timeoutSeconds: 1
    failureThreshold: 100
    successThreshold: 1
  ## @param envoy.customLivenessProbe Custom livenessProbe that overrides the default one
  ##
  customLivenessProbe: {}
  ## @param envoy.customReadinessProbe Custom readinessProbe that overrides the default one
  ##
  customReadinessProbe: {}
  ## @param envoy.customStartupProbe Custom startupProbe that overrides the default one
  ##
  customStartupProbe: {}
  ## Cilium Envoy resource requests and limits
  ## ref: http://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
  ## @param envoy.resourcesPreset Set Cilium Envoy container resources according to one common preset (allowed values: none, nano, small, medium, large, xlarge, 2xlarge). This is ignored if envoy.resources is set (envoy.resources is recommended for production).
  ## More information: https://github.com/bitnami/charts/blob/main/bitnami/common/templates/_resources.tpl#L15
  ##
  resourcesPreset: "micro"
  ## @param envoy.resources Set Cilium Envoy container requests and limits for different resources like CPU or memory (essential for production workloads)
  ## Example:
  ## resources:
  ##   requests:
  ##     cpu: 2
  ##     memory: 512Mi
  ##   limits:
  ##     cpu: 3
  ##     memory: 1024Mi
  ##
  resources: {}
  ## Configure Pods Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param envoy.podSecurityContext.enabled Enable Cilium Envoy pods' Security Context (only applies when `envoy.useDaemonSet` is set to `true`)
  ## @param envoy.podSecurityContext.fsGroupChangePolicy Set filesystem group change policy for Cilium Envoy pods
  ## @param envoy.podSecurityContext.sysctls Set kernel settings using the sysctl interface for Cilium Envoy pods
  ## @param envoy.podSecurityContext.supplementalGroups Set filesystem extra groups for Cilium Envoy pods
  ## @param envoy.podSecurityContext.fsGroup Set fsGroup in Cilium Envoy pods' Security Context
  ##
  podSecurityContext:
    enabled: true
    fsGroupChangePolicy: Always
    sysctls: []
    supplementalGroups: []
    fsGroup: 0
  ## Configure Container Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
  ## @param envoy.containerSecurityContext.enabled Enabled Cilium Envoy container' Security Context
  ## @param envoy.containerSecurityContext.seLinuxOptions [object,nullable] Set SELinux options in Cilium Envoy container
  ## @param envoy.containerSecurityContext.runAsUser Set runAsUser in Cilium Envoy container' Security Context
  ## @param envoy.containerSecurityContext.runAsGroup Set runAsUser in Cilium Envoy container' Security Context
  ## @param envoy.containerSecurityContext.runAsNonRoot Set runAsNonRoot in Cilium Envoy container' Security Context
  ## @param envoy.containerSecurityContext.readOnlyRootFilesystem Set readOnlyRootFilesystem in Cilium Envoy container' Security Context
  ## @param envoy.containerSecurityContext.privileged Set privileged in Cilium Envoy container' Security Context
  ## @param envoy.containerSecurityContext.allowPrivilegeEscalation Set allowPrivilegeEscalation in Cilium Envoy container' Security Context
  ## @param envoy.containerSecurityContext.capabilities.add List of capabilities to be added in Cilium Envoy container
  ## @param envoy.containerSecurityContext.capabilities.drop List of capabilities to be dropped in Cilium Envoy container
  ## @param envoy.containerSecurityContext.seccompProfile.type Set seccomp profile in Cilium Envoy container
  ##
  containerSecurityContext:
    enabled: true
    ## Running with spc_t type (designed for privileged operations, check capabilities)
    ## since the container is not executed as a privileged container by default. This
    ## should prevent issues with SELinux policies.
    seLinuxOptions:
      level: 's0'
      type: 'spc_t'
    runAsUser: 0
    runAsGroup: 0
    runAsNonRoot: false
    readOnlyRootFilesystem: true
    privileged: false
    allowPrivilegeEscalation: false
    capabilities:
      add:
      - BPF
      - NET_ADMIN
      - PERFMON
      - SYS_ADMIN
      drop: ["ALL"]
    seccompProfile:
      type: "RuntimeDefault"
  ## @param envoy.configuration Specify content for Cilium Envoy configuration (basic one auto-generated based on other values otherwise)
  ##
  configuration: {}
  ## @param envoy.overrideConfiguration Cilium Envoy configuration override. Values defined here takes precedence over the ones defined at `envoy.configuration`
  ##
  overrideConfiguration: {}
  ## @param envoy.existingConfigmap The name of an existing ConfigMap with your custom Cilium Envoy configuration
  ##
  existingConfigmap: ""
  ## @param envoy.logLevel Cilium Envoy log level
  ##
  logLevel: info
  ## @param envoy.command Override default Cilium Envoy container command (useful when using custom images)
  ##
  command: []
  ## @param envoy.args Override default Cilium Envoy container args (useful when using custom images)
  ##
  args: []
  ## @param envoy.extraArgs [array] Extra args passed to Cilium Envoy container
  ##
  extraArgs: []
  ## @param envoy.automountServiceAccountToken Mount Service Account token in Cilium Envoy pods (only applies when `envoy.useDaemonSet` is set to `true`)
  ##
  automountServiceAccountToken: true
  ## @param envoy.hostAliases Cilium Envoy pods host aliases (only applies when `envoy.useDaemonSet` is set to `true`)
  ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
  ##
  hostAliases: []
  ## @param envoy.daemonsetAnnotations Annotations for Cilium Envoy daemonset (only applies when `envoy.useDaemonSet` is set to `true`)
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  daemonsetAnnotations: {}
  ## @param envoy.podLabels Extra labels for Cilium Envoy pods (only applies when `envoy.useDaemonSet` is set to `true`)
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  ##
  podLabels: {}
  ## @param envoy.podAnnotations Annotations for Cilium Envoy pods (only applies when `envoy.useDaemonSet` is set to `true`)
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  podAnnotations: {}
  ## Node envoy.affinity preset
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
  ##
  nodeAffinityPreset:
    ## @param envoy.nodeAffinityPreset.type Node affinity preset type. Ignored if `envoy.affinity` is set. Allowed values: `soft` or `hard`
    ##
    type: ""
    ## @param envoy.nodeAffinityPreset.key Node label key to match. Ignored if `envoy.affinity` is set
    ##
    key: ""
    ## @param envoy.nodeAffinityPreset.values Node label values to match. Ignored if `envoy.affinity` is set
    ## E.g.
    ## values:
    ##   - e2e-az1
    ##   - e2e-az2
    ##
    values: []
  ## @param envoy.affinity Affinity for Cilium Envoy pods assignment (only applies when `envoy.useDaemonSet` is set to `true`)
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ## NOTE: `envoy.podAffinityPreset`, `envoy.podAntiAffinityPreset`, and `envoy.nodeAffinityPreset` will be ignored when it's set
  ##
  affinity: {}
  ## @param envoy.nodeSelector [object] Node labels for Cilium Envoy pods assignment (only applies when `envoy.useDaemonSet` is set to `true`)
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
  ##
  nodeSelector:
    kubernetes.io/os: linux
  ## @param envoy.tolerations Tolerations for Cilium Envoy pods assignment (only applies when `envoy.useDaemonSet` is set to `true`)
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []
  ## @param envoy.updateStrategy.type Cilium Envoy daemonset update strategy type (only applies when `envoy.useDaemonSet` is set to `true`)
  ## Can be set to RollingUpdate or OnDelete
  ## ref: https://kubernetes.io/docs/tasks/manage-daemon/update-daemon-set/
  ##
  updateStrategy:
    type: RollingUpdate
  ## @param envoy.priorityClassName Cilium Envoy pods' priorityClassName (only applies when `envoy.useDaemonSet` is set to `true`)
  ##
  priorityClassName: ""
  ## @param envoy.terminationGracePeriodSeconds Seconds Cilium Envoy pods need to terminate gracefully (only applies when `envoy.useDaemonSet` is set to `true`)
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods
  ##
  terminationGracePeriodSeconds: 1
  ## @param envoy.lifecycleHooks for Cilium Envoy containers to automate configuration before or after startup
  ##
  lifecycleHooks: {}
  ## @param envoy.extraEnvVars Array with extra environment variables to add to Cilium Envoy containers
  ## e.g:
  ## extraEnvVars:
  ##   - name: FOO
  ##     value: "bar"
  ##
  extraEnvVars: []
  ## @param envoy.extraEnvVarsCM Name of existing ConfigMap containing extra env vars for Cilium Envoy containers
  ##
  extraEnvVarsCM: ""
  ## @param envoy.extraEnvVarsSecret Name of existing Secret containing extra env vars for Cilium Envoy containers
  ##
  extraEnvVarsSecret: ""
  ## @param envoy.extraVolumes Optionally specify extra list of additional volumes for the Cilium Envoy pods (only applies when `envoy.useDaemonSet` is set to `true`)
  ##
  extraVolumes: []
  ## @param envoy.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the Cilium Envoy containers
  ##
  extraVolumeMounts: []
  ## @param envoy.sidecars Add additional sidecar containers to the Cilium Envoy pods (only applies when `envoy.useDaemonSet` is set to `true`)
  ## e.g:
  ## sidecars:
  ##   - name: your-image-name
  ##     image: your-image
  ##     imagePullPolicy: Always
  ##     ports:
  ##       - name: portname
  ##         containerPort: 1234
  ##
  sidecars: []
  ## @param envoy.initContainers Add additional init containers to the Cilium Envoy pods (only applies when `envoy.useDaemonSet` is set to `true`)
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
  ## e.g:
  ## initContainers:
  ##  - name: your-image-name
  ##    image: your-image
  ##    imagePullPolicy: Always
  ##    command: ['sh', '-c', 'echo "hello world"']
  ##
  initContainers: []
  ## Autoscaling configuration (only applies when `envoy.useDaemonSet` is set to `true`)
  ## ref: https://kubernetes.io/docs/concepts/workloads/autoscaling/
  ##
  autoscaling:
    ## @param envoy.autoscaling.vpa.enabled Enable VPA for Cilium Envoy
    ## @param envoy.autoscaling.vpa.annotations Annotations for VPA resource
    ## @param envoy.autoscaling.vpa.controlledResources List of resources that the VPA can control. Defaults to cpu and memory
    ## @param envoy.autoscaling.vpa.maxAllowed VPA max allowed resources for the pod
    ## @param envoy.autoscaling.vpa.minAllowed VPA min allowed resources for the pod
    ##
    vpa:
      enabled: false
      annotations: {}
      controlledResources: []
      maxAllowed: {}
      minAllowed: {}
      ## @param envoy.autoscaling.vpa.updatePolicy.updateMode Autoscaling update policy
      ## Specifies whether recommended updates are applied when a Pod is started and whether recommended updates are applied during the life of a Pod
      ## Possible values are "Off", "Initial", "Recreate", and "Auto".
      ##
      updatePolicy:
        updateMode: Auto
  ## @section Cilium Envoy ServiceAccount configuration
  ##
  serviceAccount:
    ## @param envoy.serviceAccount.create Specifies whether a ServiceAccount should be created for Cilium Envoy (only applies when `envoy.useDaemonSet` is set to `true`)
    ##
    create: true
    ## @param envoy.serviceAccount.name The name of the ServiceAccount to use for Cilium Envoy
    ## If not set and create is true, a name is generated using the cilium.envoy.fullname template
    ##
    name: ""
    ## @param envoy.serviceAccount.annotations Additional Service Account annotations (evaluated as a template)
    ##
    annotations: {}
    ## @param envoy.serviceAccount.automountServiceAccountToken Automount ServiceAccount token
    ##
    automountServiceAccountToken: false

  ## @section Cilium Envoy Network Policies Parameters
  ## ref: https://kubernetes.io/docs/concepts/services-networking/network-policies/
  ##
  networkPolicy:
    ## @param envoy.networkPolicy.enabled Specifies whether a NetworkPolicy should be created for Cilium Envoy (only applies when `envoy.useDaemonSet` is set to `true`)
    ##
    enabled: true
    ## @param envoy.networkPolicy.allowExternal Don't require server label for connections
    ## The Policy model to apply. When set to false, only pods with the correct
    ## server label will have network access to the ports server is listening
    ## on. When true, server will accept connections from any source
    ## (with the correct destination port).
    ##
    allowExternal: true
    ## @param envoy.networkPolicy.allowExternalEgress Allow the Cilium Envoy pods to access any range of port and all destinations.
    ##
    allowExternalEgress: true
    ## @param envoy.networkPolicy.addExternalClientAccess Allow access from pods with client label set to "true". Ignored if `envoy.networkPolicy.allowExternal` is true.
    ##
    addExternalClientAccess: true
    ## @param envoy.networkPolicy.extraIngress [array] Add extra ingress rules to the NetworkPolicy
    ## e.g:
    ## extraIngress:
    ##   - ports:
    ##       - port: 1234
    ##     from:
    ##       - podSelector:
    ##           - matchLabels:
    ##               - role: frontend
    ##       - podSelector:
    ##           - matchExpressions:
    ##               - key: role
    ##                 operator: In
    ##                 values:
    ##                   - frontend
    extraIngress: []
    ## @param envoy.networkPolicy.extraEgress [array] Add extra ingress rules to the NetworkPolicy (ignored if allowExternalEgress=true)
    ## e.g:
    ## extraEgress:
    ##   - ports:
    ##       - port: 1234
    ##     to:
    ##       - podSelector:
    ##           - matchLabels:
    ##               - role: frontend
    ##       - podSelector:
    ##           - matchExpressions:
    ##               - key: role
    ##                 operator: In
    ##                 values:
    ##                   - frontend
    ##
    extraEgress: []
    ## @param envoy.networkPolicy.ingressPodMatchLabels [object] Labels to match to allow traffic from other pods. Ignored if `envoy.networkPolicy.allowExternal` is true.
    ## e.g:
    ## ingressPodMatchLabels:
    ##   my-client: "true"
    #
    ingressPodMatchLabels: {}
    ## @param envoy.networkPolicy.ingressNSMatchLabels [object] Labels to match to allow traffic from other namespaces
    ## @param envoy.networkPolicy.ingressNSPodMatchLabels [object] Pod labels to match to allow traffic from other namespaces
    ##
    ingressNSMatchLabels: {}
    ingressNSPodMatchLabels: {}

  ## @section Cilium Envoy Metrics Parameters
  ##
  metrics:
    ## @param envoy.metrics.enabled Enable the export of Prometheus metrics for Cilium Envoy
    ##
    enabled: false
    ## Metrics service properties
    ##
    service:
      ## @param envoy.metrics.service.port Cilium Envoy metrics service port
      ##
      port: 9964
      ## @param envoy.metrics.service.annotations [object] Annotations for the Cilium Envoy metrics service.
      ##
      annotations: {}
    ## Prometheus Operator ServiceMonitor configuration
    ##
    serviceMonitor:
      ## @param envoy.metrics.serviceMonitor.enabled if `true`, creates a Prometheus Operator ServiceMonitor (also requires `metrics.enabled` to be `true`)
      ##
      enabled: false
      ## @param envoy.metrics.serviceMonitor.namespace Namespace in which Prometheus is running
      ##
      namespace: ""
      ## @param envoy.metrics.serviceMonitor.annotations Additional custom annotations for the ServiceMonitor
      ##
      annotations: {}
      ## @param envoy.metrics.serviceMonitor.labels Extra labels for the ServiceMonitor
      ##
      labels: {}
      ## @param envoy.metrics.serviceMonitor.jobLabel The name of the label on the target service to use as the job name in Prometheus
      ##
      jobLabel: ""
      ## @param envoy.metrics.serviceMonitor.honorLabels honorLabels chooses the metric's labels on collisions with target labels
      ##
      honorLabels: false
      ## @param envoy.metrics.serviceMonitor.interval Interval at which metrics should be scraped.
      ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint
      ## e.g:
      ## interval: 10s
      ##
      interval: ""
      ## @param envoy.metrics.serviceMonitor.scrapeTimeout Timeout after which the scrape is ended
      ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint
      ## e.g:
      ## scrapeTimeout: 10s
      ##
      scrapeTimeout: ""
      ## @param envoy.metrics.serviceMonitor.metricRelabelings Specify additional relabeling of metrics
      ##
      metricRelabelings: []
      ## @param envoy.metrics.serviceMonitor.relabelings Specify general relabeling
      ##
      relabelings: []
      ## @param envoy.metrics.serviceMonitor.selector Prometheus instance selector labels
      ## ref: https://github.com/bitnami/charts/tree/main/bitnami/prometheus-operator#prometheus-configuration
      ## selector:
      ##   prometheus: my-prometheus
      ##
      selector: {}

## @section Hubble Common Parameters
##
hubble:
  ## TLS configuration
  ##
  tls:
    ## @param hubble.tls.enabled Enable TLS for communications for Hubble components
    ##
    enabled: true
    ## @param hubble.tls.autoGenerated.enabled Enable automatic generation of certificates for TLS
    ## @param hubble.tls.autoGenerated.engine Mechanism to generate the certificates (allowed values: helm, cert-manager)
    autoGenerated:
      enabled: true
      engine: helm
      ## @param hubble.tls.autoGenerated.certManager.existingIssuer The name of an existing Issuer to use for generating the certificates (only for `cert-manager` engine)
      ## @param hubble.tls.autoGenerated.certManager.existingIssuerKind Existing Issuer kind, defaults to Issuer (only for `cert-manager` engine)
      ## @param hubble.tls.autoGenerated.certManager.keyAlgorithm Key algorithm for the certificates (only for `cert-manager` engine)
      ## @param hubble.tls.autoGenerated.certManager.keySize Key size for the certificates (only for `cert-manager` engine)
      ## @param hubble.tls.autoGenerated.certManager.duration Duration for the certificates (only for `cert-manager` engine)
      ## @param hubble.tls.autoGenerated.certManager.renewBefore Renewal period for the certificates (only for `cert-manager` engine)
      certManager:
        existingIssuer: ""
        existingIssuerKind: ""
        keySize: 2048
        keyAlgorithm: RSA
        duration: 2160h
        renewBefore: 360h
    ## @param hubble.tls.ca CA certificate for TLS. Ignored if `hubble.tls.existingCASecret` is set
    ## @param hubble.tls.existingCASecret The name of an existing Secret containing the CA certificate for TLS
    ## @param hubble.tls.peers.cert TLS certificate for Hubble peers. Ignored if `hubble.tls.peers.existingSecret` is set
    ## @param hubble.tls.peers.key TLS key for Hubble peers. Ignored if `hubble.tls.peers.existingSecret` is set
    ## @param hubble.tls.peers.existingSecret The name of an existing Secret containing the Hubble peers certificates for TLS
    ## @param hubble.tls.relay.cert TLS certificate for Hubble relay. Ignored if `hubble.tls.relay.existingSecret` is set
    ## @param hubble.tls.relay.key TLS key for Hubble relay. Ignored if `hubble.tls.relay.existingSecret` is set
    ## @param hubble.tls.relay.existingSecret The name of an existing Secret containing the Hubble relay certificates for TLS
    ## @param hubble.tls.relayClient.cert TLS certificate for Hubble Relay client(s). Ignored if `hubble.tls.relayClient.existingSecret` is set
    ## @param hubble.tls.relayClient.key TLS key for Hubble Relay client(s). Ignored if `hubble.tls.relayClient.existingSecret` is set
    ## @param hubble.tls.relayClient.existingSecret The name of an existing Secret containing the Hubble Relay client(s) certificates for TLS
    ##
    ca: ""
    existingCASecret: ""
    peers:
      cert: ""
      key: ""
      existingSecret: ""
    relay:
      cert: ""
      key: ""
      existingSecret: ""
    relayClient:
      cert: ""
      key: ""
      existingSecret: ""
  ## Hubble Peers Parameters
  ##
  peers:
    ## @section Hubble Peers Service Parameters
    ##
    service:
      ## @param hubble.peers.service.port Hubble Peers service port
      ##
      port: 4244
      ## @param hubble.peers.service.extraPorts Extra ports to expose in the service (normally used with the `agent.sidecars` value)
      ##
      extraPorts: []
      ## @param hubble.peers.service.clusterIP Hubble Peers service Cluster IP
      ## e.g.:
      ## clusterIP: None
      ##
      clusterIP: ""
      ## @param hubble.peers.service.internalTrafficPolicy Hubble Peers service internal traffic policy
      ##
      internalTrafficPolicy: Cluster
      ## @param hubble.peers.service.annotations Annotations for the Hubble Peers service.
      ##
      annotations: {}
    ## @section Hubble Peers Metrics Parameters
    ##
    metrics:
      ## @param hubble.peers.metrics.enabled Enable the export of Prometheus metrics for Hubble peers
      ##
      enabled: false
      ## Metrics service properties
      ##
      service:
        ## @param hubble.peers.metrics.service.port Hubble peers metrics service port
        ##
        port: 9965
        ## @param hubble.peers.metrics.service.annotations [object] Annotations for the Hubble peers metrics service.
        ##
        annotations: {}
      ## Prometheus Operator ServiceMonitor configuration
      ##
      serviceMonitor:
        ## @param hubble.peers.metrics.serviceMonitor.enabled if `true`, creates a Prometheus Operator ServiceMonitor (also requires `hubble.peers.metrics.enabled` to be `true`)
        ##
        enabled: false
        ## @param hubble.peers.metrics.serviceMonitor.namespace Namespace in which Prometheus is running
        ##
        namespace: ""
        ## @param hubble.peers.metrics.serviceMonitor.annotations Additional custom annotations for the ServiceMonitor
        ##
        annotations: {}
        ## @param hubble.peers.metrics.serviceMonitor.labels Extra labels for the ServiceMonitor
        ##
        labels: {}
        ## @param hubble.peers.metrics.serviceMonitor.jobLabel The name of the label on the target service to use as the job name in Prometheus
        ##
        jobLabel: ""
        ## @param hubble.peers.metrics.serviceMonitor.honorLabels honorLabels chooses the metric's labels on collisions with target labels
        ##
        honorLabels: false
        ## @param hubble.peers.metrics.serviceMonitor.interval Interval at which metrics should be scraped.
        ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint
        ## e.g:
        ## interval: 10s
        ##
        interval: ""
        ## @param hubble.peers.metrics.serviceMonitor.scrapeTimeout Timeout after which the scrape is ended
        ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint
        ## e.g:
        ## scrapeTimeout: 10s
        ##
        scrapeTimeout: ""
        ## @param hubble.peers.metrics.serviceMonitor.metricRelabelings Specify additional relabeling of metrics
        ##
        metricRelabelings: []
        ## @param hubble.peers.metrics.serviceMonitor.relabelings Specify general relabeling
        ##
        relabelings: []
        ## @param hubble.peers.metrics.serviceMonitor.selector Prometheus instance selector labels
        ## ref: https://github.com/bitnami/charts/tree/main/bitnami/prometheus-operator#prometheus-configuration
        ## selector:
        ##   prometheus: my-prometheus
        ##
        selector: {}

  ## @section Hubble Relay Parameters
  ##
  relay:
    ## @param hubble.relay.enabled Enable Hubble Relay
    ##
    enabled: false
    ## Bitnami Hubble Relay image
    ## ref: https://hub.docker.com/r/bitnami/hubble-relay/tags/
    ## @param hubble.relay.image.registry [default: REGISTRY_NAME] Hubble Relay image registry
    ## @param hubble.relay.image.repository [default: REPOSITORY_NAME/hubble-relay] Hubble Relay image repository
    ## @skip hubble.relay.image.tag Hubble Relay image tag (immutable tags are recommended)
    ## @param hubble.relay.image.digest Hubble Relay image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag image tag (immutable tags are recommended)
    ## @param hubble.relay.image.pullPolicy Hubble Relay image pull policy
    ## @param hubble.relay.image.pullSecrets Hubble Relay image pull secrets
    ## @param hubble.relay.image.debug Enable Hubble Relay image debug mode
    ##
    image:
      registry: docker.io
      repository: bitnami/hubble-relay
      tag: 1.16.5-debian-12-r0
      digest: ""
      ## Specify a imagePullPolicy
      ## ref: https://kubernetes.io/docs/concepts/containers/images/#pre-pulled-images
      ##
      pullPolicy: IfNotPresent
      ## Optionally specify an array of imagePullSecrets.
      ## Secrets must be manually created in the namespace.
      ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
      ## e.g:
      ## pullSecrets:
      ##   - myRegistryKeySecretName
      ##
      pullSecrets: []
      debug: false
    ## @param hubble.relay.replicaCount Number of Hubble Relay replicas to deploy
    ##
    replicaCount: 1
    ## @param hubble.relay.containerPorts.grpc Hubble Relay gRPC container port
    ## @param hubble.relay.containerPorts.pprof Hubble Relay pprof container port
    ## @param hubble.relay.containerPorts.gops Hubble Relay gops container port
    ## @param hubble.relay.containerPorts.metrics Hubble Relay metrics container port
    ##
    containerPorts:
      grpc: 4245
      pprof: 6062
      gops: 9893
      metrics: 9966
    ## @param hubble.relay.extraContainerPorts Optionally specify extra list of additional ports for Hubble Relay containers
    ## e.g:
    ## extraContainerPorts:
    ##   - name: myservice
    ##     containerPort: 9090
    ##
    extraContainerPorts: []
    ## Configure extra options for Hubble Relay containers' liveness and readiness probes
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
    ## @param hubble.relay.livenessProbe.enabled Enable livenessProbe on Hubble Relay containers
    ## @param hubble.relay.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
    ## @param hubble.relay.livenessProbe.periodSeconds Period seconds for livenessProbe
    ## @param hubble.relay.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
    ## @param hubble.relay.livenessProbe.failureThreshold Failure threshold for livenessProbe
    ## @param hubble.relay.livenessProbe.successThreshold Success threshold for livenessProbe
    ##
    livenessProbe:
      enabled: true
      initialDelaySeconds: 5
      periodSeconds: 10
      timeoutSeconds: 3
      failureThreshold: 3
      successThreshold: 1
    ## @param hubble.relay.readinessProbe.enabled Enable readinessProbe on Hubble Relay containers
    ## @param hubble.relay.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
    ## @param hubble.relay.readinessProbe.periodSeconds Period seconds for readinessProbe
    ## @param hubble.relay.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
    ## @param hubble.relay.readinessProbe.failureThreshold Failure threshold for readinessProbe
    ## @param hubble.relay.readinessProbe.successThreshold Success threshold for readinessProbe
    ##
    readinessProbe:
      enabled: true
      initialDelaySeconds: 5
      periodSeconds: 10
      timeoutSeconds: 3
      failureThreshold: 3
      successThreshold: 1
    ## @param hubble.relay.startupProbe.enabled Enable startupProbe on Hubble Relay containers
    ## @param hubble.relay.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
    ## @param hubble.relay.startupProbe.periodSeconds Period seconds for startupProbe
    ## @param hubble.relay.startupProbe.timeoutSeconds Timeout seconds for startupProbe
    ## @param hubble.relay.startupProbe.failureThreshold Failure threshold for startupProbe
    ## @param hubble.relay.startupProbe.successThreshold Success threshold for startupProbe
    ##
    startupProbe:
      enabled: false
      initialDelaySeconds: 0
      periodSeconds: 3
      timeoutSeconds: 1
      failureThreshold: 20
      successThreshold: 1
    ## @param hubble.relay.customLivenessProbe Custom livenessProbe that overrides the default one
    ##
    customLivenessProbe: {}
    ## @param hubble.relay.customReadinessProbe Custom readinessProbe that overrides the default one
    ##
    customReadinessProbe: {}
    ## @param hubble.relay.customStartupProbe Custom startupProbe that overrides the default one
    ##
    customStartupProbe: {}
    ## Hubble Relay resource requests and limits
    ## ref: http://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
    ## @param hubble.relay.resourcesPreset Set Hubble Relay container resources according to one common preset (allowed values: none, nano, small, medium, large, xlarge, 2xlarge). This is ignored if hubble.relay.resources is set (hubble.relay.resources is recommended for production).
    ## More information: https://github.com/bitnami/charts/blob/main/bitnami/common/templates/_resources.tpl#L15
    ##
    resourcesPreset: "nano"
    ## @param hubble.relay.resources Set Hubble Relay container requests and limits for different resources like CPU or memory (essential for production workloads)
    ## Example:
    ## resources:
    ##   requests:
    ##     cpu: 2
    ##     memory: 512Mi
    ##   limits:
    ##     cpu: 3
    ##     memory: 1024Mi
    ##
    resources: {}
    ## Configure Pods Security Context
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
    ## @param hubble.relay.podSecurityContext.enabled Enable Hubble Relay pods' Security Context
    ## @param hubble.relay.podSecurityContext.fsGroupChangePolicy Set filesystem group change policy for Hubble Relay pods
    ## @param hubble.relay.podSecurityContext.sysctls Set kernel settings using the sysctl interface for Hubble Relay pods
    ## @param hubble.relay.podSecurityContext.supplementalGroups Set filesystem extra groups for Hubble Relay pods
    ## @param hubble.relay.podSecurityContext.fsGroup Set fsGroup in Hubble Relay pods' Security Context
    ##
    podSecurityContext:
      enabled: true
      fsGroupChangePolicy: Always
      sysctls: []
      supplementalGroups: []
      fsGroup: 1001
    ## Configure Container Security Context
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
    ## @param hubble.relay.containerSecurityContext.enabled Enabled Hubble Relay container' Security Context
    ## @param hubble.relay.containerSecurityContext.seLinuxOptions [object,nullable] Set SELinux options in Hubble Relay container
    ## @param hubble.relay.containerSecurityContext.runAsUser Set runAsUser in Hubble Relay container' Security Context
    ## @param hubble.relay.containerSecurityContext.runAsGroup Set runAsGroup in Hubble Relay container' Security Context
    ## @param hubble.relay.containerSecurityContext.runAsNonRoot Set runAsNonRoot in Hubble Relay container' Security Context
    ## @param hubble.relay.containerSecurityContext.readOnlyRootFilesystem Set readOnlyRootFilesystem in Hubble Relay container' Security Context
    ## @param hubble.relay.containerSecurityContext.privileged Set privileged in Hubble Relay container' Security Context
    ## @param hubble.relay.containerSecurityContext.allowPrivilegeEscalation Set allowPrivilegeEscalation in Hubble Relay container' Security Context
    ## @param hubble.relay.containerSecurityContext.capabilities.drop List of capabilities to be dropped in Hubble Relay container
    ## @param hubble.relay.containerSecurityContext.seccompProfile.type Set seccomp profile in Hubble Relay container
    ##
    containerSecurityContext:
      enabled: true
      seLinuxOptions: {}
      runAsUser: 1001
      runAsGroup: 1001
      runAsNonRoot: true
      readOnlyRootFilesystem: true
      privileged: false
      allowPrivilegeEscalation: false
      capabilities:
        drop: ["ALL"]
      seccompProfile:
        type: "RuntimeDefault"
    ## @param hubble.relay.configuration Specify content for Hubble Relay configuration (basic one auto-generated based on other values otherwise)
    ##
    configuration: {}
    ## @param hubble.relay.overrideConfiguration Hubble Relay configuration override. Values defined here takes precedence over the ones defined at `hubble.relay.configuration`
    ##
    overrideConfiguration: {}
    ## @param hubble.relay.existingConfigmap The name of an existing ConfigMap with your custom configuration for Hubble Relay
    ##
    existingConfigmap: ""
    ## @param hubble.relay.enableGops Enable gops for Hubble Relay
    ##
    enableGops: false
    ## @param hubble.relay.enablePprof Enable pprof for Hubble Relay
    ##
    enablePprof: false
    ## @param hubble.relay.command Override default Hubble Relay container command (useful when using custom images)
    ##
    command: []
    ## @param hubble.relay.args Override default Hubble Relay container args (useful when using custom images)
    ##
    args: []
    ## @param hubble.relay.automountServiceAccountToken Mount Service Account token in Hubble Relay pods
    ##
    automountServiceAccountToken: false
    ## @param hubble.relay.hostAliases Hubble Relay pods host aliases
    ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
    ##
    hostAliases: []
    ## @param hubble.relay.deploymentAnnotations Annotations for Hubble Relay deployment
    ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
    ##
    deploymentAnnotations: {}
    ## @param hubble.relay.podLabels Extra labels for Hubble Relay pods
    ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
    ##
    podLabels: {}
    ## @param hubble.relay.podAnnotations Annotations for Hubble Relay pods
    ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
    ##
    podAnnotations: {}
    ## @param hubble.relay.podAffinityPreset Pod affinity preset. Ignored if `hubble.relay.affinity` is set. Allowed values: `soft` or `hard`
    ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
    ##
    podAffinityPreset: ""
    ## @param hubble.relay.podAntiAffinityPreset Pod anti-affinity preset. Ignored if `hubble.relay.affinity` is set. Allowed values: `soft` or `hard`
    ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
    ##
    podAntiAffinityPreset: soft
    ## Node hubble.relay.affinity preset
    ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
    ##
    nodeAffinityPreset:
      ## @param hubble.relay.nodeAffinityPreset.type Node affinity preset type. Ignored if `hubble.relay.affinity` is set. Allowed values: `soft` or `hard`
      ##
      type: ""
      ## @param hubble.relay.nodeAffinityPreset.key Node label key to match. Ignored if `hubble.relay.affinity` is set
      ##
      key: ""
      ## @param hubble.relay.nodeAffinityPreset.values Node label values to match. Ignored if `hubble.relay.affinity` is set
      ## E.g.
      ## values:
      ##   - e2e-az1
      ##   - e2e-az2
      ##
      values: []
    ## @param hubble.relay.affinity Affinity for Hubble Relay pods assignment
    ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
    ## NOTE: `hubble.relay.podAffinityPreset`, `hubble.relay.podAntiAffinityPreset`, and `hubble.relay.nodeAffinityPreset` will be ignored when it's set
    ##
    affinity: {}
    ## @param hubble.relay.nodeSelector Node labels for Hubble Relay pods assignment
    ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
    ##
    nodeSelector: {}
    ## @param hubble.relay.tolerations Tolerations for Hubble Relay pods assignment
    ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
    ##
    tolerations: []
    ## @param hubble.relay.updateStrategy.type Hubble Relay deployment strategy type
    ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
    updateStrategy:
      ## Can be set to RollingUpdate or Recreate
      ##
      type: RollingUpdate
    ## @param hubble.relay.priorityClassName Hubble Relay pods' priorityClassName
    ##
    priorityClassName: ""
    ## @param hubble.relay.topologySpreadConstraints Topology Spread Constraints for Hubble Relay pod assignment spread across your cluster among failure-domains
    ## Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/#spread-constraints-for-pods
    ##
    topologySpreadConstraints: []
    ## @param hubble.relay.schedulerName Name of the k8s scheduler (other than default) for Hubble Relay pods
    ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
    ##
    schedulerName: ""
    ## @param hubble.relay.terminationGracePeriodSeconds Seconds Hubble Relay pods need to terminate gracefully
    ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods
    ##
    terminationGracePeriodSeconds: ""
    ## @param hubble.relay.lifecycleHooks for Hubble Relay containers to automate configuration before or after startup
    ##
    lifecycleHooks: {}
    ## @param hubble.relay.extraEnvVars Array with extra environment variables to add to Hubble Relay containers
    ## e.g:
    ## extraEnvVars:
    ##   - name: FOO
    ##     value: "bar"
    ##
    extraEnvVars: []
    ## @param hubble.relay.extraEnvVarsCM Name of existing ConfigMap containing extra env vars for Hubble Relay containers
    ##
    extraEnvVarsCM: ""
    ## @param hubble.relay.extraEnvVarsSecret Name of existing Secret containing extra env vars for Hubble Relay containers
    ##
    extraEnvVarsSecret: ""
    ## @param hubble.relay.extraVolumes Optionally specify extra list of additional volumes for the Hubble Relay pods
    ##
    extraVolumes: []
    ## @param hubble.relay.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the Hubble Relay containers
    ##
    extraVolumeMounts: []
    ## @param hubble.relay.sidecars Add additional sidecar containers to the Hubble Relay pods
    ## e.g:
    ## sidecars:
    ##   - name: your-image-name
    ##     image: your-image
    ##     imagePullPolicy: Always
    ##     ports:
    ##       - name: portname
    ##         containerPort: 1234
    ##
    sidecars: []
    ## @param hubble.relay.initContainers Add additional init containers to the Hubble Relay pods
    ## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
    ## e.g:
    ## initContainers:
    ##  - name: your-image-name
    ##    image: your-image
    ##    imagePullPolicy: Always
    ##    command: ['sh', '-c', 'echo "hello world"']
    ##
    initContainers: []
    ## Default init Containers
    ##
    defaultInitContainers:
      ## Hubble Relay "wait-for-hubble-peers" init container
      ## Used to waits for kube-proxy to be ready
      ##
      waitForHubble:
        ## Configure "wait-for-hubble-peers" init-container Security Context
        ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
        ## @param hubble.relay.defaultInitContainers.waitForHubble.containerSecurityContext.enabled Enabled Hubble Relay init-containers' Security Context
        ## @param hubble.relay.defaultInitContainers.waitForHubble.containerSecurityContext.seLinuxOptions [object,nullable] Set SELinux options in Hubble Relay init-containers
        ## @param hubble.relay.defaultInitContainers.waitForHubble.containerSecurityContext.runAsUser Set runAsUser in Hubble Relay init-containers' Security Context
        ## @param hubble.relay.defaultInitContainers.waitForHubble.containerSecurityContext.runAsGroup Set runAsUser in Hubble Relay init-containers' Security Context
        ## @param hubble.relay.defaultInitContainers.waitForHubble.containerSecurityContext.runAsNonRoot Set runAsNonRoot in Hubble Relay init-containers' Security Context
        ## @param hubble.relay.defaultInitContainers.waitForHubble.containerSecurityContext.readOnlyRootFilesystem Set readOnlyRootFilesystem in Hubble Relay init-containers' Security Context
        ## @param hubble.relay.defaultInitContainers.waitForHubble.containerSecurityContext.privileged Set privileged in Hubble Relay init-containers' Security Context
        ## @param hubble.relay.defaultInitContainers.waitForHubble.containerSecurityContext.allowPrivilegeEscalation Set allowPrivilegeEscalation in Hubble Relay init-containers' Security Context
        ## @param hubble.relay.defaultInitContainers.waitForHubble.containerSecurityContext.capabilities.drop List of capabilities to be dropped in Hubble Relay init-containers
        ## @param hubble.relay.defaultInitContainers.waitForHubble.containerSecurityContext.seccompProfile.type Set seccomp profile in Hubble Relay init-containers
        ##
        containerSecurityContext:
          enabled: true
          seLinuxOptions: {}
          runAsUser: 1001
          runAsGroup: 1001
          runAsNonRoot: true
          readOnlyRootFilesystem: true
          privileged: false
          allowPrivilegeEscalation: false
          capabilities:
            drop: ["ALL"]
          seccompProfile:
            type: "RuntimeDefault"
        ## Hubble Relay "wait-for-hubble-peers" init container resource requests and limits
        ## ref: http://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
        ## @param hubble.relay.defaultInitContainers.waitForHubble.resourcesPreset Set Hubble Relay "wait-for-hubble-peers" init container resources according to one common preset (allowed values: none, nano, small, medium, large, xlarge, 2xlarge). This is ignored if hubble.relay.resources is set (hubble.relay.defaultInitContainers.waitForHubble.resources is recommended for production).
        ## More information: https://github.com/bitnami/charts/blob/main/bitnami/common/templates/_resources.tpl#L15
        ##
        resourcesPreset: "nano"
        ## @param hubble.relay.defaultInitContainers.waitForHubble.resources Set Hubble Relay "wait-for-hubble-peers" init container requests and limits for different resources like CPU or memory (essential for production workloads)
        ## Example:
        ## resources:
        ##   requests:
        ##     cpu: 2
        ##     memory: 512Mi
        ##   limits:
        ##     cpu: 3
        ##     memory: 1024Mi
        ##
        resources: {}
    ## Pod Disruption Budget configuration
    ## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb
    ## @param hubble.relay.pdb.create Enable/disable a Pod Disruption Budget creation
    ## @param hubble.relay.pdb.minAvailable Minimum number/percentage of pods that should remain scheduled
    ## @param hubble.relay.pdb.maxUnavailable Maximum number/percentage of pods that may be made unavailable. Defaults to `1` if both `hubble.relay.pdb.minAvailable` and `hubble.relay.pdb.maxUnavailable` are empty.
    ##
    pdb:
      create: true
      minAvailable: ""
      maxUnavailable: ""
    ## Autoscaling configuration
    ## ref: https://kubernetes.io/docs/concepts/workloads/autoscaling/
    ##
    autoscaling:
      ## @param hubble.relay.autoscaling.vpa.enabled Enable VPA for Hubble Relay pods
      ## @param hubble.relay.autoscaling.vpa.annotations Annotations for VPA resource
      ## @param hubble.relay.autoscaling.vpa.controlledResources VPA List of resources that the vertical pod autoscaler can control. Defaults to cpu and memory
      ## @param hubble.relay.autoscaling.vpa.maxAllowed VPA Max allowed resources for the pod
      ## @param hubble.relay.autoscaling.vpa.minAllowed VPA Min allowed resources for the pod
      ##
      vpa:
        enabled: false
        annotations: {}
        controlledResources: []
        maxAllowed: {}
        minAllowed: {}
        ## @param hubble.relay.autoscaling.vpa.updatePolicy.updateMode Autoscaling update policy
        ## Specifies whether recommended updates are applied when a Pod is started and whether recommended updates are applied during the life of a Pod
        ## Possible values are "Off", "Initial", "Recreate", and "Auto".
        ##
        updatePolicy:
          updateMode: Auto
      ## @param hubble.relay.autoscaling.hpa.enabled Enable HPA for Hubble Relay pods
      ## @param hubble.relay.autoscaling.hpa.minReplicas Minimum number of replicas
      ## @param hubble.relay.autoscaling.hpa.maxReplicas Maximum number of replicas
      ## @param hubble.relay.autoscaling.hpa.targetCPU Target CPU utilization percentage
      ## @param hubble.relay.autoscaling.hpa.targetMemory Target Memory utilization percentage
      ##
      hpa:
        enabled: false
        minReplicas: ""
        maxReplicas: ""
        targetCPU: ""
        targetMemory: ""
    ## Hubble Relay ServiceAccount configuration
    ##
    serviceAccount:
      ## @param hubble.relay.serviceAccount.create Specifies whether a ServiceAccount should be created for Hubble Relay
      ##
      create: true
      ## @param hubble.relay.serviceAccount.name The name of the ServiceAccount to use for Hubble Relay
      ## If not set and create is true, a name is generated using the hubble.hubble.relay.fullname template
      ##
      name: ""
      ## @param hubble.relay.serviceAccount.annotations Additional Service Account annotations (evaluated as a template)
      ##
      annotations: {}
      ## @param hubble.relay.serviceAccount.automountServiceAccountToken Automount service account token for the server service account
      ##
      automountServiceAccountToken: false
    ## @section Hubble Relay Traffic Exposure Parameters
    ## Hubble Relay service parameters
    ##
    service:
      ## @param hubble.relay.service.type Hubble Relay service type
      ##
      type: ClusterIP
      ## @param hubble.relay.service.ports.grpc Hubble Relay service gRPC port
      ## @param hubble.relay.service.ports.metrics Hubble Relay service metrics port
      ##
      ports:
        grpc: 4245
        metrics: 9966
      ## Node ports to expose
      ## @param hubble.relay.service.nodePorts.grpc Node port for gRPC
      ## @param hubble.relay.service.nodePorts.metrics Node port for metrics
      ## NOTE: choose port between <30000-32767>
      ##
      nodePorts:
        grpc: ""
        metrics: ""
      ## @param hubble.relay.service.clusterIP Hubble Relay service Cluster IP
      ## e.g.:
      ## clusterIP: None
      ##
      clusterIP: ""
      ## @param hubble.relay.service.loadBalancerIP Hubble Relay service Load Balancer IP
      ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-loadbalancer
      ##
      loadBalancerIP: ""
      ## @param hubble.relay.service.loadBalancerSourceRanges Hubble Relay service Load Balancer sources
      ## ref: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
      ## e.g:
      ## loadBalancerSourceRanges:
      ##   - 10.10.10.0/24
      ##
      loadBalancerSourceRanges: []
      ## @param hubble.relay.service.externalTrafficPolicy Hubble Relay service external traffic policy
      ## ref http://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
      ##
      externalTrafficPolicy: Cluster
      ## @param hubble.relay.service.annotations Additional custom annotations for Hubble Relay service
      ##
      annotations: {}
      ## @param hubble.relay.service.extraPorts Extra ports to expose in Hubble Relay service (normally used with the `sidecars` value)
      ##
      extraPorts: []
      ## @param hubble.relay.service.sessionAffinity Control where client requests go, to the same pod or round-robin
      ## Values: ClientIP or None
      ## ref: https://kubernetes.io/docs/concepts/services-networking/service/
      ##
      sessionAffinity: None
      ## @param hubble.relay.service.sessionAffinityConfig Additional settings for the sessionAffinity
      ## sessionAffinityConfig:
      ##   clientIP:
      ##     timeoutSeconds: 300
      ##
      sessionAffinityConfig: {}
    ## Network Policies
    ## Ref: https://kubernetes.io/docs/concepts/services-networking/network-policies/
    ##
    networkPolicy:
      ## @param hubble.relay.networkPolicy.enabled Specifies whether a NetworkPolicy should be created for Hubble Relay
      ##
      enabled: true
      ## @param hubble.relay.networkPolicy.allowExternal Don't require server label for connections
      ## The Policy model to apply. When set to false, only pods with the correct
      ## server label will have network access to the ports server is listening
      ## on. When true, server will accept connections from any source
      ## (with the correct destination port).
      ##
      allowExternal: true
      ## @param hubble.relay.networkPolicy.allowExternalEgress Allow the pod to access any range of port and all destinations.
      ##
      allowExternalEgress: true
      ## @param hubble.relay.networkPolicy.addExternalClientAccess Allow access from pods with client label set to "true". Ignored if `hubble.relay.networkPolicy.allowExternal` is true.
      ##
      addExternalClientAccess: true
      ## @param hubble.relay.networkPolicy.extraIngress [array] Add extra ingress rules to the NetworkPolicy
      ## e.g:
      ## extraIngress:
      ##   - ports:
      ##       - port: 1234
      ##     from:
      ##       - podSelector:
      ##           - matchLabels:
      ##               - role: frontend
      ##       - podSelector:
      ##           - matchExpressions:
      ##               - key: role
      ##                 operator: In
      ##                 values:
      ##                   - frontend
      extraIngress: []
      ## @param hubble.relay.networkPolicy.extraEgress [array] Add extra ingress rules to the NetworkPolicy (ignored if allowExternalEgress=true)
      ## e.g:
      ## extraEgress:
      ##   - ports:
      ##       - port: 1234
      ##     to:
      ##       - podSelector:
      ##           - matchLabels:
      ##               - role: frontend
      ##       - podSelector:
      ##           - matchExpressions:
      ##               - key: role
      ##                 operator: In
      ##                 values:
      ##                   - frontend
      ##
      extraEgress: []
      ## @param hubble.relay.networkPolicy.ingressPodMatchLabels [object] Labels to match to allow traffic from other pods. Ignored if `hubble.relay.networkPolicy.allowExternal` is true.
      ## e.g:
      ## ingressPodMatchLabels:
      ##   my-client: "true"
      #
      ingressPodMatchLabels: {}
      ## @param hubble.relay.networkPolicy.ingressNSMatchLabels [object] Labels to match to allow traffic from other namespaces
      ## @param hubble.relay.networkPolicy.ingressNSPodMatchLabels [object] Pod labels to match to allow traffic from other namespaces
      ##
      ingressNSMatchLabels: {}
      ingressNSPodMatchLabels: {}
    ## @section Hubble Relay Metrics Parameters
    ##
    metrics:
      ## @param hubble.relay.metrics.enabled Enable the export of Prometheus metrics on Hubble Relay
      ##
      enabled: false
      ## Prometheus Operator ServiceMonitor configuration
      ##
      serviceMonitor:
        ## @param hubble.relay.metrics.serviceMonitor.enabled if `true`, creates a Prometheus Operator ServiceMonitor (also requires `hubble.relay.metrics.enabled` to be `true`)
        ##
        enabled: false
        ## @param hubble.relay.metrics.serviceMonitor.namespace Namespace in which Prometheus is running
        ##
        namespace: ""
        ## @param hubble.relay.metrics.serviceMonitor.annotations Additional custom annotations for the ServiceMonitor
        ##
        annotations: {}
        ## @param hubble.relay.metrics.serviceMonitor.labels Extra labels for the ServiceMonitor
        ##
        labels: {}
        ## @param hubble.relay.metrics.serviceMonitor.jobLabel The name of the label on the target service to use as the job name in Prometheus
        ##
        jobLabel: ""
        ## @param hubble.relay.metrics.serviceMonitor.honorLabels honorLabels chooses the metric's labels on collisions with target labels
        ##
        honorLabels: false
        ## @param hubble.relay.metrics.serviceMonitor.interval Interval at which metrics should be scraped.
        ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint
        ## e.g:
        ## interval: 10s
        ##
        interval: ""
        ## @param hubble.relay.metrics.serviceMonitor.scrapeTimeout Timeout after which the scrape is ended
        ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint
        ## e.g:
        ## scrapeTimeout: 10s
        ##
        scrapeTimeout: ""
        ## @param hubble.relay.metrics.serviceMonitor.metricRelabelings Specify additional relabeling of metrics
        ##
        metricRelabelings: []
        ## @param hubble.relay.metrics.serviceMonitor.relabelings Specify general relabeling
        ##
        relabelings: []
        ## @param hubble.relay.metrics.serviceMonitor.selector Prometheus instance selector labels
        ## ref: https://github.com/bitnami/charts/tree/main/bitnami/prometheus-operator#prometheus-configuration
        ## selector:
        ##   prometheus: my-prometheus
        ##
        selector: {}

  ## @section Hubble UI Parameters
  ##
  ui:
    ## @param hubble.ui.enabled Enable Hubble UI
    ##
    enabled: false
    ## Frontend specific parameters
    ##
    frontend:
      ## Bitnami Hubble UI image
      ## ref: https://hub.docker.com/r/bitnami/hubble-ui/tags/
      ## @param hubble.ui.frontend.image.registry [default: REGISTRY_NAME] Hubble UI image registry
      ## @param hubble.ui.frontend.image.repository [default: REPOSITORY_NAME/hubble-ui] Hubble UI image repository
      ## @skip hubble.ui.frontend.image.tag Hubble UI image tag (immutable tags are recommended)
      ## @param hubble.ui.frontend.image.digest Hubble UI image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag image tag (immutable tags are recommended)
      ## @param hubble.ui.frontend.image.pullPolicy Hubble UI image pull policy
      ## @param hubble.ui.frontend.image.pullSecrets Hubble UI image pull secrets
      ## @param hubble.ui.frontend.image.debug Enable Hubble UI image debug mode
      ##
      image:
        registry: docker.io
        repository: bitnami/hubble-ui
        tag: 0.13.1-debian-12-r11
        digest: ""
        ## Specify a imagePullPolicy
        ## ref: https://kubernetes.io/docs/concepts/containers/images/#pre-pulled-images
        ##
        pullPolicy: IfNotPresent
        ## Optionally specify an array of imagePullSecrets.
        ## Secrets must be manually created in the namespace.
        ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
        ## e.g:
        ## pullSecrets:
        ##   - myRegistryKeySecretName
        ##
        pullSecrets: []
        debug: false
      ## @param hubble.ui.frontend.containerPorts.http Hubble UI frontend HTTP container port
      ##
      containerPorts:
        http: 8081
      ## @param hubble.ui.frontend.extraContainerPorts Optionally specify extra list of additional ports for Hubble UI frontend containers
      ## e.g:
      ## extraContainerPorts:
      ##   - name: myservice
      ##     containerPort: 9090
      ##
      extraContainerPorts: []
      ## Configure extra options for Hubble UI frontend containers' liveness and readiness probes
      ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
      ## @param hubble.ui.frontend.livenessProbe.enabled Enable livenessProbe on Hubble UI frontend containers
      ## @param hubble.ui.frontend.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
      ## @param hubble.ui.frontend.livenessProbe.periodSeconds Period seconds for livenessProbe
      ## @param hubble.ui.frontend.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
      ## @param hubble.ui.frontend.livenessProbe.failureThreshold Failure threshold for livenessProbe
      ## @param hubble.ui.frontend.livenessProbe.successThreshold Success threshold for livenessProbe
      ##
      livenessProbe:
        enabled: true
        initialDelaySeconds: 5
        periodSeconds: 10
        timeoutSeconds: 3
        failureThreshold: 3
        successThreshold: 1
      ## @param hubble.ui.frontend.readinessProbe.enabled Enable readinessProbe on Hubble UI frontend containers
      ## @param hubble.ui.frontend.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
      ## @param hubble.ui.frontend.readinessProbe.periodSeconds Period seconds for readinessProbe
      ## @param hubble.ui.frontend.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
      ## @param hubble.ui.frontend.readinessProbe.failureThreshold Failure threshold for readinessProbe
      ## @param hubble.ui.frontend.readinessProbe.successThreshold Success threshold for readinessProbe
      ##
      readinessProbe:
        enabled: true
        initialDelaySeconds: 5
        periodSeconds: 10
        timeoutSeconds: 3
        failureThreshold: 3
        successThreshold: 1
      ## @param hubble.ui.frontend.startupProbe.enabled Enable startupProbe on Hubble UI frontend containers
      ## @param hubble.ui.frontend.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
      ## @param hubble.ui.frontend.startupProbe.periodSeconds Period seconds for startupProbe
      ## @param hubble.ui.frontend.startupProbe.timeoutSeconds Timeout seconds for startupProbe
      ## @param hubble.ui.frontend.startupProbe.failureThreshold Failure threshold for startupProbe
      ## @param hubble.ui.frontend.startupProbe.successThreshold Success threshold for startupProbe
      ##
      startupProbe:
        enabled: false
        initialDelaySeconds: 0
        periodSeconds: 3
        timeoutSeconds: 1
        failureThreshold: 20
        successThreshold: 1
      ## @param hubble.ui.frontend.customLivenessProbe Custom livenessProbe that overrides the default one
      ##
      customLivenessProbe: {}
      ## @param hubble.ui.frontend.customReadinessProbe Custom readinessProbe that overrides the default one
      ##
      customReadinessProbe: {}
      ## @param hubble.ui.frontend.customStartupProbe Custom startupProbe that overrides the default one
      ##
      customStartupProbe: {}
      ## Hubble UI frontend resource requests and limits
      ## ref: http://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
      ## @param hubble.ui.frontend.resourcesPreset Set Hubble UI frontend container resources according to one common preset (allowed values: none, nano, small, medium, large, xlarge, 2xlarge). This is ignored if hubble.ui.frontend.resources is set (hubble.ui.frontend.resources is recommended for production).
      ## More information: https://github.com/bitnami/charts/blob/main/bitnami/common/templates/_resources.tpl#L15
      ##
      resourcesPreset: "nano"
      ## @param hubble.ui.frontend.resources Set Hubble UI frontend container requests and limits for different resources like CPU or memory (essential for production workloads)
      ## Example:
      ## resources:
      ##   requests:
      ##     cpu: 2
      ##     memory: 512Mi
      ##   limits:
      ##     cpu: 3
      ##     memory: 1024Mi
      ##
      resources: {}
      ## Configure Container Security Context
      ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
      ## @param hubble.ui.frontend.containerSecurityContext.enabled Enabled Hubble UI frontend container' Security Context
      ## @param hubble.ui.frontend.containerSecurityContext.seLinuxOptions [object,nullable] Set SELinux options in Hubble UI frontend container
      ## @param hubble.ui.frontend.containerSecurityContext.runAsUser Set runAsUser in Hubble UI frontend container' Security Context
      ## @param hubble.ui.frontend.containerSecurityContext.runAsGroup Set runAsGroup in Hubble UI frontend container' Security Context
      ## @param hubble.ui.frontend.containerSecurityContext.runAsNonRoot Set runAsNonRoot in Hubble UI frontend container' Security Context
      ## @param hubble.ui.frontend.containerSecurityContext.readOnlyRootFilesystem Set readOnlyRootFilesystem in Hubble UI frontend container' Security Context
      ## @param hubble.ui.frontend.containerSecurityContext.privileged Set privileged in Hubble UI frontend container' Security Context
      ## @param hubble.ui.frontend.containerSecurityContext.allowPrivilegeEscalation Set allowPrivilegeEscalation in Hubble UI frontend container' Security Context
      ## @param hubble.ui.frontend.containerSecurityContext.capabilities.drop List of capabilities to be dropped in Hubble UI frontend container
      ## @param hubble.ui.frontend.containerSecurityContext.seccompProfile.type Set seccomp profile in Hubble UI frontend container
      ##
      containerSecurityContext:
        enabled: true
        seLinuxOptions: {}
        runAsUser: 1001
        runAsGroup: 1001
        runAsNonRoot: true
        readOnlyRootFilesystem: true
        privileged: false
        allowPrivilegeEscalation: false
        capabilities:
          drop: ["ALL"]
        seccompProfile:
          type: "RuntimeDefault"
      ## @param hubble.ui.frontend.enableIPv6 Enable IPv6 for Hubble UI frontend
      ##
      enableIPv6: false
      ## @param hubble.ui.frontend.serverBlock Custom server block to be used to configure NGINX (ignored if existingServerBlockConfigmap is set)
      ## Example:
      ## serverBlock: |-
      ##   server {
      ##     listen 0.0.0.0:8080;
      ##     root /app;
      ##     location / {
      ##       index index.html index.php;
      ##     }
      ##   }
      ##
      serverBlock: ""
      ## @param hubble.ui.frontend.existingServerBlockConfigmap ConfigMap with custom server block to be used to configure NGINX
      ##
      existingServerBlockConfigmap: ""
      ## @param hubble.ui.frontend.command Override default Hubble UI frontend container command (useful when using custom images)
      ##
      command: []
      ## @param hubble.ui.frontend.args Override default Hubble UI frontend container args (useful when using custom images)
      ##
      args: []
      ## @param hubble.ui.frontend.lifecycleHooks for Hubble UI frontend containers to automate configuration before or after startup
      ##
      lifecycleHooks: {}
      ## @param hubble.ui.frontend.extraEnvVars Array with extra environment variables to add to Hubble UI frontend containers
      ## e.g:
      ## extraEnvVars:
      ##   - name: FOO
      ##     value: "bar"
      ##
      extraEnvVars: []
      ## @param hubble.ui.frontend.extraEnvVarsCM Name of existing ConfigMap containing extra env vars for Hubble UI frontend containers
      ##
      extraEnvVarsCM: ""
      ## @param hubble.ui.frontend.extraEnvVarsSecret Name of existing Secret containing extra env vars for Hubble UI frontend containers
      ##
      extraEnvVarsSecret: ""
      ## @param hubble.ui.frontend.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the Hubble UI frontend containers
      ##
      extraVolumeMounts: []
    ## Backend specific parameters
    ##
    backend:
      ## Bitnami Hubble UI Backend image
      ## ref: https://hub.docker.com/r/bitnami/hubble-ui-backend/tags/
      ## @param hubble.ui.backend.image.registry [default: REGISTRY_NAME] Hubble UI Backend image registry
      ## @param hubble.ui.backend.image.repository [default: REPOSITORY_NAME/hubble-ui-backend] Hubble UI Backend image repository
      ## @skip hubble.ui.backend.image.tag Hubble UI Backend image tag (immutable tags are recommended)
      ## @param hubble.ui.backend.image.digest Hubble UI Backend image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag image tag (immutable tags are recommended)
      ## @param hubble.ui.backend.image.pullPolicy Hubble UI Backend image pull policy
      ## @param hubble.ui.backend.image.pullSecrets Hubble UI Backend image pull secrets
      ##
      image:
        registry: docker.io
        repository: bitnami/hubble-ui-backend
        tag: 0.13.1-debian-12-r17
        digest: ""
        ## Specify a imagePullPolicy
        ## ref: https://kubernetes.io/docs/concepts/containers/images/#pre-pulled-images
        ##
        pullPolicy: IfNotPresent
        ## Optionally specify an array of imagePullSecrets.
        ## Secrets must be manually created in the namespace.
        ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
        ## e.g:
        ## pullSecrets:
        ##   - myRegistryKeySecretName
        ##
        pullSecrets: []
      ## @param hubble.ui.backend.containerPorts.http Hubble UI backend HTTP container port
      ##
      containerPorts:
        http: 8090
      ## @param hubble.ui.backend.extraContainerPorts Optionally specify extra list of additional ports for Hubble UI backend containers
      ## e.g:
      ## extraContainerPorts:
      ##   - name: myservice
      ##     containerPort: 9090
      ##
      extraContainerPorts: []
      ## Configure extra options for Hubble UI backend containers' liveness and readiness probes
      ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
      ## @param hubble.ui.backend.livenessProbe.enabled Enable livenessProbe on Hubble UI backend containers
      ## @param hubble.ui.backend.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
      ## @param hubble.ui.backend.livenessProbe.periodSeconds Period seconds for livenessProbe
      ## @param hubble.ui.backend.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
      ## @param hubble.ui.backend.livenessProbe.failureThreshold Failure threshold for livenessProbe
      ## @param hubble.ui.backend.livenessProbe.successThreshold Success threshold for livenessProbe
      ##
      livenessProbe:
        enabled: true
        initialDelaySeconds: 5
        periodSeconds: 10
        timeoutSeconds: 3
        failureThreshold: 3
        successThreshold: 1
      ## @param hubble.ui.backend.readinessProbe.enabled Enable readinessProbe on Hubble UI backend containers
      ## @param hubble.ui.backend.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
      ## @param hubble.ui.backend.readinessProbe.periodSeconds Period seconds for readinessProbe
      ## @param hubble.ui.backend.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
      ## @param hubble.ui.backend.readinessProbe.failureThreshold Failure threshold for readinessProbe
      ## @param hubble.ui.backend.readinessProbe.successThreshold Success threshold for readinessProbe
      ##
      readinessProbe:
        enabled: true
        initialDelaySeconds: 5
        periodSeconds: 10
        timeoutSeconds: 3
        failureThreshold: 3
        successThreshold: 1
      ## @param hubble.ui.backend.startupProbe.enabled Enable startupProbe on Hubble UI backend containers
      ## @param hubble.ui.backend.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
      ## @param hubble.ui.backend.startupProbe.periodSeconds Period seconds for startupProbe
      ## @param hubble.ui.backend.startupProbe.timeoutSeconds Timeout seconds for startupProbe
      ## @param hubble.ui.backend.startupProbe.failureThreshold Failure threshold for startupProbe
      ## @param hubble.ui.backend.startupProbe.successThreshold Success threshold for startupProbe
      ##
      startupProbe:
        enabled: false
        initialDelaySeconds: 0
        periodSeconds: 3
        timeoutSeconds: 1
        failureThreshold: 20
        successThreshold: 1
      ## @param hubble.ui.backend.customLivenessProbe Custom livenessProbe that overrides the default one
      ##
      customLivenessProbe: {}
      ## @param hubble.ui.backend.customReadinessProbe Custom readinessProbe that overrides the default one
      ##
      customReadinessProbe: {}
      ## @param hubble.ui.backend.customStartupProbe Custom startupProbe that overrides the default one
      ##
      customStartupProbe: {}
      ## Hubble UI backend resource requests and limits
      ## ref: http://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
      ## @param hubble.ui.backend.resourcesPreset Set Hubble UI backend container resources according to one common preset (allowed values: none, nano, small, medium, large, xlarge, 2xlarge). This is ignored if hubble.ui.backend.resources is set (hubble.ui.backend.resources is recommended for production).
      ## More information: https://github.com/bitnami/charts/blob/main/bitnami/common/templates/_resources.tpl#L15
      ##
      resourcesPreset: "nano"
      ## @param hubble.ui.backend.resources Set Hubble UI backend container requests and limits for different resources like CPU or memory (essential for production workloads)
      ## Example:
      ## resources:
      ##   requests:
      ##     cpu: 2
      ##     memory: 512Mi
      ##   limits:
      ##     cpu: 3
      ##     memory: 1024Mi
      ##
      resources: {}
      ## Configure Container Security Context
      ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
      ## @param hubble.ui.backend.containerSecurityContext.enabled Enabled Hubble UI backend container' Security Context
      ## @param hubble.ui.backend.containerSecurityContext.seLinuxOptions [object,nullable] Set SELinux options in Hubble UI backend container
      ## @param hubble.ui.backend.containerSecurityContext.runAsUser Set runAsUser in Hubble UI backend container' Security Context
      ## @param hubble.ui.backend.containerSecurityContext.runAsGroup Set runAsGroup in Hubble UI backend container' Security Context
      ## @param hubble.ui.backend.containerSecurityContext.runAsNonRoot Set runAsNonRoot in Hubble UI backend container' Security Context
      ## @param hubble.ui.backend.containerSecurityContext.readOnlyRootFilesystem Set readOnlyRootFilesystem in Hubble UI backend container' Security Context
      ## @param hubble.ui.backend.containerSecurityContext.privileged Set privileged in Hubble UI backend container' Security Context
      ## @param hubble.ui.backend.containerSecurityContext.allowPrivilegeEscalation Set allowPrivilegeEscalation in Hubble UI backend container' Security Context
      ## @param hubble.ui.backend.containerSecurityContext.capabilities.drop List of capabilities to be dropped in Hubble UI backend container
      ## @param hubble.ui.backend.containerSecurityContext.seccompProfile.type Set seccomp profile in Hubble UI backend container
      ##
      containerSecurityContext:
        enabled: true
        seLinuxOptions: {}
        runAsUser: 1001
        runAsGroup: 1001
        runAsNonRoot: true
        readOnlyRootFilesystem: true
        privileged: false
        allowPrivilegeEscalation: false
        capabilities:
          drop: ["ALL"]
        seccompProfile:
          type: "RuntimeDefault"
      ## @param hubble.ui.backend.command Override default Hubble UI backend container command (useful when using custom images)
      ##
      command: []
      ## @param hubble.ui.backend.args Override default Hubble UI backend container args (useful when using custom images)
      ##
      args: []
      ## @param hubble.ui.backend.lifecycleHooks for Hubble UI backend containers to automate configuration before or after startup
      ##
      lifecycleHooks: {}
      ## @param hubble.ui.backend.extraEnvVars Array with extra environment variables to add to Hubble UI backend containers
      ## e.g:
      ## extraEnvVars:
      ##   - name: FOO
      ##     value: "bar"
      ##
      extraEnvVars: []
      ## @param hubble.ui.backend.extraEnvVarsCM Name of existing ConfigMap containing extra env vars for Hubble UI backend containers
      ##
      extraEnvVarsCM: ""
      ## @param hubble.ui.backend.extraEnvVarsSecret Name of existing Secret containing extra env vars for Hubble UI backend containers
      ##
      extraEnvVarsSecret: ""
      ## @param hubble.ui.backend.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the Hubble UI backend containers
      ##
      extraVolumeMounts: []
    ## @param hubble.ui.replicaCount Number of Hubble UI replicas to deploy
    ##
    replicaCount: 1
    ## Configure Pods Security Context
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
    ## @param hubble.ui.podSecurityContext.enabled Enable Hubble UI pods' Security Context
    ## @param hubble.ui.podSecurityContext.fsGroupChangePolicy Set filesystem group change policy for Hubble UI pods
    ## @param hubble.ui.podSecurityContext.sysctls Set kernel settings using the sysctl interface for Hubble UI pods
    ## @param hubble.ui.podSecurityContext.supplementalGroups Set filesystem extra groups for Hubble UI pods
    ## @param hubble.ui.podSecurityContext.fsGroup Set fsGroup in Hubble UI pods' Security Context
    ##
    podSecurityContext:
      enabled: true
      fsGroupChangePolicy: Always
      sysctls: []
      supplementalGroups: []
      fsGroup: 1001
    ## @param hubble.ui.automountServiceAccountToken Mount Service Account token in Hubble UI pods
    ##
    automountServiceAccountToken: true
    ## @param hubble.ui.hostAliases Hubble UI pods host aliases
    ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
    ##
    hostAliases: []
    ## @param hubble.ui.deploymentAnnotations Annotations for Hubble UI deployment
    ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
    ##
    deploymentAnnotations: {}
    ## @param hubble.ui.podLabels Extra labels for Hubble UI pods
    ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
    ##
    podLabels: {}
    ## @param hubble.ui.podAnnotations Annotations for Hubble UI pods
    ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
    ##
    podAnnotations: {}
    ## @param hubble.ui.podAffinityPreset Pod affinity preset. Ignored if `hubble.ui.affinity` is set. Allowed values: `soft` or `hard`
    ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
    ##
    podAffinityPreset: ""
    ## @param hubble.ui.podAntiAffinityPreset Pod anti-affinity preset. Ignored if `hubble.ui.affinity` is set. Allowed values: `soft` or `hard`
    ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
    ##
    podAntiAffinityPreset: soft
    ## Node hubble.ui.affinity preset
    ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
    ##
    nodeAffinityPreset:
      ## @param hubble.ui.nodeAffinityPreset.type Node affinity preset type. Ignored if `hubble.ui.affinity` is set. Allowed values: `soft` or `hard`
      ##
      type: ""
      ## @param hubble.ui.nodeAffinityPreset.key Node label key to match. Ignored if `hubble.ui.affinity` is set
      ##
      key: ""
      ## @param hubble.ui.nodeAffinityPreset.values Node label values to match. Ignored if `hubble.ui.affinity` is set
      ## E.g.
      ## values:
      ##   - e2e-az1
      ##   - e2e-az2
      ##
      values: []
    ## @param hubble.ui.affinity Affinity for Hubble UI pods assignment
    ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
    ## NOTE: `hubble.ui.podAffinityPreset`, `hubble.ui.podAntiAffinityPreset`, and `hubble.ui.nodeAffinityPreset` will be ignored when it's set
    ##
    affinity: {}
    ## @param hubble.ui.nodeSelector Node labels for Hubble UI pods assignment
    ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
    ##
    nodeSelector: {}
    ## @param hubble.ui.tolerations Tolerations for Hubble UI pods assignment
    ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
    ##
    tolerations: []
    ## @param hubble.ui.updateStrategy.type Hubble UI deployment strategy type
    ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
    updateStrategy:
      ## Can be set to RollingUpdate or Recreate
      ##
      type: RollingUpdate
    ## @param hubble.ui.priorityClassName Hubble UI pods' priorityClassName
    ##
    priorityClassName: ""
    ## @param hubble.ui.topologySpreadConstraints Topology Spread Constraints for Hubble UI pod assignment spread across your cluster among failure-domains
    ## Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/#spread-constraints-for-pods
    ##
    topologySpreadConstraints: []
    ## @param hubble.ui.schedulerName Name of the k8s scheduler (other than default) for Hubble UI pods
    ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
    ##
    schedulerName: ""
    ## @param hubble.ui.terminationGracePeriodSeconds Seconds Hubble UI pods need to terminate gracefully
    ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods
    ##
    terminationGracePeriodSeconds: ""
    ## @param hubble.ui.extraVolumes Optionally specify extra list of additional volumes for the Hubble UI pods
    ##
    extraVolumes: []
    ## @param hubble.ui.sidecars Add additional sidecar containers to the Hubble UI pods
    ## e.g:
    ## sidecars:
    ##   - name: your-image-name
    ##     image: your-image
    ##     imagePullPolicy: Always
    ##     ports:
    ##       - name: portname
    ##         containerPort: 1234
    ##
    sidecars: []
    ## @param hubble.ui.initContainers Add additional init containers to the Hubble UI pods
    ## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
    ## e.g:
    ## initContainers:
    ##  - name: your-image-name
    ##    image: your-image
    ##    imagePullPolicy: Always
    ##    command: ['sh', '-c', 'echo "hello world"']
    ##
    initContainers: []
    ## Default init Containers
    ##
    defaultInitContainers:
      ## Hubble UI "wait-for-hubble-relay" init container
      ## Used to waits for kube-proxy to be ready
      ##
      waitForHubbleRelay:
        ## Configure "wait-for-hubble-relay" init-container Security Context
        ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
        ## @param hubble.ui.defaultInitContainers.waitForHubbleRelay.containerSecurityContext.enabled Enabled Hubble UI init-containers' Security Context
        ## @param hubble.ui.defaultInitContainers.waitForHubbleRelay.containerSecurityContext.seLinuxOptions [object,nullable] Set SELinux options in Hubble UI init-containers
        ## @param hubble.ui.defaultInitContainers.waitForHubbleRelay.containerSecurityContext.runAsUser Set runAsUser in Hubble UI init-containers' Security Context
        ## @param hubble.ui.defaultInitContainers.waitForHubbleRelay.containerSecurityContext.runAsGroup Set runAsUser in Hubble UI init-containers' Security Context
        ## @param hubble.ui.defaultInitContainers.waitForHubbleRelay.containerSecurityContext.runAsNonRoot Set runAsNonRoot in Hubble UI init-containers' Security Context
        ## @param hubble.ui.defaultInitContainers.waitForHubbleRelay.containerSecurityContext.readOnlyRootFilesystem Set readOnlyRootFilesystem in Hubble UI init-containers' Security Context
        ## @param hubble.ui.defaultInitContainers.waitForHubbleRelay.containerSecurityContext.privileged Set privileged in Hubble UI init-containers' Security Context
        ## @param hubble.ui.defaultInitContainers.waitForHubbleRelay.containerSecurityContext.allowPrivilegeEscalation Set allowPrivilegeEscalation in Hubble UI init-containers' Security Context
        ## @param hubble.ui.defaultInitContainers.waitForHubbleRelay.containerSecurityContext.capabilities.drop List of capabilities to be dropped in Hubble UI init-containers
        ## @param hubble.ui.defaultInitContainers.waitForHubbleRelay.containerSecurityContext.seccompProfile.type Set seccomp profile in Hubble UI init-containers
        ##
        containerSecurityContext:
          enabled: true
          seLinuxOptions: {}
          runAsUser: 1001
          runAsGroup: 1001
          runAsNonRoot: true
          readOnlyRootFilesystem: true
          privileged: false
          allowPrivilegeEscalation: false
          capabilities:
            drop: ["ALL"]
          seccompProfile:
            type: "RuntimeDefault"
        ## Hubble UI "wait-for-hubble-relay" init container resource requests and limits
        ## ref: http://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
        ## @param hubble.ui.defaultInitContainers.waitForHubbleRelay.resourcesPreset Set Hubble UI "wait-for-hubble-relay" init container resources according to one common preset (allowed values: none, nano, small, medium, large, xlarge, 2xlarge). This is ignored if hubble.ui.resources is set (hubble.ui.defaultInitContainers.waitForHubbleRelay.resources is recommended for production).
        ## More information: https://github.com/bitnami/charts/blob/main/bitnami/common/templates/_resources.tpl#L15
        ##
        resourcesPreset: "nano"
        ## @param hubble.ui.defaultInitContainers.waitForHubbleRelay.resources Set Hubble UI "wait-for-hubble-relay" init container requests and limits for different resources like CPU or memory (essential for production workloads)
        ## Example:
        ## resources:
        ##   requests:
        ##     cpu: 2
        ##     memory: 512Mi
        ##   limits:
        ##     cpu: 3
        ##     memory: 1024Mi
        ##
        resources: {}
    ## Pod Disruption Budget configuration
    ## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb
    ## @param hubble.ui.pdb.create Enable/disable a Pod Disruption Budget creation
    ## @param hubble.ui.pdb.minAvailable Minimum number/percentage of pods that should remain scheduled
    ## @param hubble.ui.pdb.maxUnavailable Maximum number/percentage of pods that may be made unavailable. Defaults to `1` if both `hubble.ui.pdb.minAvailable` and `hubble.ui.pdb.maxUnavailable` are empty.
    ##
    pdb:
      create: true
      minAvailable: ""
      maxUnavailable: ""
    ## Autoscaling configuration
    ## ref: https://kubernetes.io/docs/concepts/workloads/autoscaling/
    ##
    autoscaling:
      ## @param hubble.ui.autoscaling.vpa.enabled Enable VPA for Hubble UI pods
      ## @param hubble.ui.autoscaling.vpa.annotations Annotations for VPA resource
      ## @param hubble.ui.autoscaling.vpa.controlledResources VPA List of resources that the vertical pod autoscaler can control. Defaults to cpu and memory
      ## @param hubble.ui.autoscaling.vpa.maxAllowed VPA Max allowed resources for the pod
      ## @param hubble.ui.autoscaling.vpa.minAllowed VPA Min allowed resources for the pod
      ##
      vpa:
        enabled: false
        annotations: {}
        controlledResources: []
        maxAllowed: {}
        minAllowed: {}
        ## @param hubble.ui.autoscaling.vpa.updatePolicy.updateMode Autoscaling update policy
        ## Specifies whether recommended updates are applied when a Pod is started and whether recommended updates are applied during the life of a Pod
        ## Possible values are "Off", "Initial", "Recreate", and "Auto".
        ##
        updatePolicy:
          updateMode: Auto
      ## @param hubble.ui.autoscaling.hpa.enabled Enable HPA for Hubble UI pods
      ## @param hubble.ui.autoscaling.hpa.minReplicas Minimum number of replicas
      ## @param hubble.ui.autoscaling.hpa.maxReplicas Maximum number of replicas
      ## @param hubble.ui.autoscaling.hpa.targetCPU Target CPU utilization percentage
      ## @param hubble.ui.autoscaling.hpa.targetMemory Target Memory utilization percentage
      ##
      hpa:
        enabled: false
        minReplicas: ""
        maxReplicas: ""
        targetCPU: ""
        targetMemory: ""
    ## @section Hubble UI Traffic Exposure Parameters
    ## Hubble UI service parameters
    ##
    service:
      ## @param hubble.ui.service.type Hubble UI service type
      ##
      type: LoadBalancer
      ## @param hubble.ui.service.ports.http Hubble UI service HTTP port
      ##
      ports:
        http: 80
      ## Node ports to expose
      ## @param hubble.ui.service.nodePorts.http Node port for HTTP
      ## NOTE: choose port between <30000-32767>
      ##
      nodePorts:
        http: ""
      ## @param hubble.ui.service.clusterIP Hubble UI service Cluster IP
      ## e.g.:
      ## clusterIP: None
      ##
      clusterIP: ""
      ## @param hubble.ui.service.loadBalancerIP Hubble UI service Load Balancer IP
      ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-loadbalancer
      ##
      loadBalancerIP: ""
      ## @param hubble.ui.service.loadBalancerSourceRanges Hubble UI service Load Balancer sources
      ## ref: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
      ## e.g:
      ## loadBalancerSourceRanges:
      ##   - 10.10.10.0/24
      ##
      loadBalancerSourceRanges: []
      ## @param hubble.ui.service.externalTrafficPolicy Hubble UI service external traffic policy
      ## ref http://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
      ##
      externalTrafficPolicy: Cluster
      ## @param hubble.ui.service.annotations Additional custom annotations for Hubble UI service
      ##
      annotations: {}
      ## @param hubble.ui.service.extraPorts Extra ports to expose in Hubble UI service (normally used with the `sidecars` value)
      ##
      extraPorts: []
      ## @param hubble.ui.service.sessionAffinity Control where client requests go, to the same pod or round-robin
      ## Values: ClientIP or None
      ## ref: https://kubernetes.io/docs/concepts/services-networking/service/
      ##
      sessionAffinity: None
      ## @param hubble.ui.service.sessionAffinityConfig Additional settings for the sessionAffinity
      ## sessionAffinityConfig:
      ##   clientIP:
      ##     timeoutSeconds: 300
      ##
      sessionAffinityConfig: {}
    ## Hubble UI ingress parameters
    ## ref: http://kubernetes.io/docs/concepts/services-networking/ingress/
    ##
    ingress:
      ## @param hubble.ui.ingress.enabled Enable ingress record generation for Hubble UI
      ##
      enabled: false
      ## @param hubble.ui.ingress.pathType Ingress path type
      ##
      pathType: ImplementationSpecific
      ## @param hubble.ui.ingress.hostname Default host for the ingress record
      ##
      hostname: hubble.local
      ## @param hubble.ui.ingress.ingressClassName IngressClass that will be be used to implement the Ingress (Kubernetes 1.18+)
      ## This is supported in Kubernetes 1.18+ and required if you have more than one IngressClass marked as the default for your cluster .
      ## ref: https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/
      ##
      ingressClassName: ""
      ## @param hubble.ui.ingress.path Default path for the ingress record
      ## NOTE: You may need to set this to '/*' in order to use this with ALB ingress controllers
      ##
      path: /
      ## @param hubble.ui.ingress.annotations Additional annotations for the Ingress resource. To enable certificate autogeneration, place here your cert-manager annotations.
      ## Use this parameter to set the required annotations for cert-manager, see
      ## ref: https://cert-manager.io/docs/usage/ingress/#supported-annotations
      ## e.g:
      ## annotations:
      ##   kubernetes.io/ingress.class: nginx
      ##   cert-manager.io/cluster-issuer: cluster-issuer-name
      ##
      annotations: {}
      ## @param hubble.ui.ingress.tls Enable TLS configuration for the host defined at `hubble.ui.ingress.hostname` parameter
      ## TLS certificates will be retrieved from a TLS secret with name: `{{- printf "%s-tls" .Values.hubble.ui.ingress.hostname }}`
      ## You can:
      ##   - Use the `hubble.ui.ingress.secrets` parameter to create this TLS secret
      ##   - Rely on cert-manager to create it by setting the corresponding annotations
      ##   - Rely on Helm to create self-signed certificates by setting `hubble.ui.ingress.selfSigned=true`
      ##
      tls: false
      ## @param hubble.ui.ingress.selfSigned Create a TLS secret for this ingress record using self-signed certificates generated by Helm
      ##
      selfSigned: false
      ## @param hubble.ui.ingress.extraHosts An array with additional hostname(s) to be covered with the ingress record
      ## e.g:
      ## extraHosts:
      ##   - name: hubble.local
      ##     path: /
      ##
      extraHosts: []
      ## @param hubble.ui.ingress.extraPaths An array with additional arbitrary paths that may need to be added to the ingress under the main host
      ## e.g:
      ## extraPaths:
      ## - path: /*
      ##   backend:
      ##     serviceName: ssl-redirect
      ##     servicePort: use-annotation
      ##
      extraPaths: []
      ## @param hubble.ui.ingress.extraTls TLS configuration for additional hostname(s) to be covered with this ingress record
      ## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/#tls
      ## e.g:
      ## extraTls:
      ## - hosts:
      ##     - hubble.local
      ##   secretName: hubble.local-tls
      ##
      extraTls: []
      ## @param hubble.ui.ingress.secrets Custom TLS certificates as secrets
      ## NOTE: 'key' and 'certificate' are expected in PEM format
      ## NOTE: 'name' should line up with a 'secretName' set further up
      ## If it is not set and you're using cert-manager, this is unneeded, as it will create a secret for you with valid certificates
      ## If it is not set and you're NOT using cert-manager either, self-signed certificates will be created valid for 365 days
      ## It is also possible to create and manage the certificates outside of this helm chart
      ## Please see README.md for more information
      ## e.g:
      ## secrets:
      ##   - name: hubble.local-tls
      ##     key: |-
      ##       -----BEGIN RSA PRIVATE KEY-----
      ##       ...
      ##       -----END RSA PRIVATE KEY-----
      ##     certificate: |-
      ##       -----BEGIN CERTIFICATE-----
      ##       ...
      ##       -----END CERTIFICATE-----
      ##
      secrets: []
      ## @param hubble.ui.ingress.extraRules Additional rules to be covered with this ingress record
      ## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/#ingress-rules
      ## e.g:
      ## extraRules:
      ## - host: example.local
      ##     http:
      ##       path: /
      ##       backend:
      ##         service:
      ##           name: example-svc
      ##           port:
      ##             name: http
      ##
      extraRules: []
    ## Network Policies
    ## Ref: https://kubernetes.io/docs/concepts/services-networking/network-policies/
    ##
    networkPolicy:
      ## @param hubble.ui.networkPolicy.enabled Specifies whether a NetworkPolicy should be created for Hubble UI
      ##
      enabled: true
      ## @param hubble.ui.networkPolicy.allowExternal Don't require server label for connections
      ## The Policy model to apply. When set to false, only pods with the correct
      ## server label will have network access to the ports server is listening
      ## on. When true, server will accept connections from any source
      ## (with the correct destination port).
      ##
      allowExternal: true
      ## @param hubble.ui.networkPolicy.allowExternalEgress Allow the pod to access any range of port and all destinations.
      ##
      allowExternalEgress: true
      ## @param hubble.ui.networkPolicy.addExternalClientAccess Allow access from pods with client label set to "true". Ignored if `hubble.ui.networkPolicy.allowExternal` is true.
      ##
      addExternalClientAccess: true
      ## @param hubble.ui.networkPolicy.extraIngress [array] Add extra ingress rules to the NetworkPolicy
      ## e.g:
      ## extraIngress:
      ##   - ports:
      ##       - port: 1234
      ##     from:
      ##       - podSelector:
      ##           - matchLabels:
      ##               - role: frontend
      ##       - podSelector:
      ##           - matchExpressions:
      ##               - key: role
      ##                 operator: In
      ##                 values:
      ##                   - frontend
      extraIngress: []
      ## @param hubble.ui.networkPolicy.extraEgress [array] Add extra ingress rules to the NetworkPolicy (ignored if allowExternalEgress=true)
      ## e.g:
      ## extraEgress:
      ##   - ports:
      ##       - port: 1234
      ##     to:
      ##       - podSelector:
      ##           - matchLabels:
      ##               - role: frontend
      ##       - podSelector:
      ##           - matchExpressions:
      ##               - key: role
      ##                 operator: In
      ##                 values:
      ##                   - frontend
      ##
      extraEgress: []
      ## @param hubble.ui.networkPolicy.ingressPodMatchLabels [object] Labels to match to allow traffic from other pods. Ignored if `hubble.ui.networkPolicy.allowExternal` is true.
      ## e.g:
      ## ingressPodMatchLabels:
      ##   my-client: "true"
      #
      ingressPodMatchLabels: {}
      ## @param hubble.ui.networkPolicy.ingressNSMatchLabels [object] Labels to match to allow traffic from other namespaces
      ## @param hubble.ui.networkPolicy.ingressNSPodMatchLabels [object] Pod labels to match to allow traffic from other namespaces
      ##
      ingressNSMatchLabels: {}
      ingressNSPodMatchLabels: {}
    ## @section Hubble UI RBAC configuration
    ##
    serviceAccount:
      ## @param hubble.ui.serviceAccount.create Specifies whether a ServiceAccount should be created for Hubble UI
      ##
      create: true
      ## @param hubble.ui.serviceAccount.name The name of the ServiceAccount to use for Hubble UI
      ## If not set and create is true, a name is generated using the hubble.hubble.ui.fullname template
      ##
      name: ""
      ## @param hubble.ui.serviceAccount.annotations Additional Service Account annotations (evaluated as a template)
      ##
      annotations: {}
      ## @param hubble.ui.serviceAccount.automountServiceAccountToken Automount service account token for the server service account
      ##
      automountServiceAccountToken: false
    rbac:
      ## @param hubble.ui.rbac.create Specifies whether RBAC resources should be created for Hubble UI
      ##
      create: true
      ## @param hubble.ui.rbac.rules Custom RBAC rules to set for Hubble UI
      ## e.g:
      ## rules:
      ##   - apiGroups:
      ##       - ""
      ##     resources:
      ##       - pods
      ##     verbs:
      ##       - get
      ##       - list
      ##
      rules: []
## @section Key-Value Store Parameters
##

## etcd chart configuration
## ref: https://github.com/bitnami/charts/blob/main/bitnami/etcd/values.yaml
##
etcd:
  ## @param etcd.enabled Deploy etcd to satisfy the key-value store requirements
  ## To use an external kvstore set this to false and configure the `externalKvstore.*` parameters
  ##
  enabled: false
  ## @param etcd.replicaCount Number of etcd replicas
  ##
  replicaCount: 1
  ## @param etcd.auth.rbac.create Switch to enable RBAC authentication
  ##
  auth:
    rbac:
      create: false
  ## @param etcd.resourcesPreset Set container resources according to one common preset (allowed values: none, nano, small, medium, large, xlarge, 2xlarge). This is ignored if resources is set (resources is recommended for production).
  ## More information: https://github.com/bitnami/charts/blob/main/bitnami/common/templates/_resources.tpl#L15
  ##
  resourcesPreset: "micro"
  ## @param etcd.resources Set container requests and limits for different resources like CPU or memory (essential for production workloads)
  ## Example:
  ## resources:
  ##   requests:
  ##     cpu: 2
  ##     memory: 512Mi
  ##   limits:
  ##     cpu: 3
  ##     memory: 1024Mi
  ##
  resources: {}
  ## @param etcd.service.ports.client etcd client port
  ##
  service:
    ports:
      client: 2379
## External Key-Value Store Configuration
##
externalKvstore:
  ## @param externalKvstore.enabled Use an externally managed kvstore
  ##
  enabled: false
  ## @param externalKvstore.endpoints List of endpoints to connect to the external kvstore
  ##
  endpoints: []
