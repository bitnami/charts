CHART NAME: {{ .Chart.Name }}
CHART VERSION: {{ .Chart.Version }}
APP VERSION: {{ .Chart.AppVersion }}

Did you know there are enterprise versions of the Bitnami catalog? For enhanced secure software supply chain features, unlimited pulls from Docker, LTS support, or application customization, see Bitnami Premium or Tanzu Application Catalog. See https://www.arrow.com/globalecs/na/vendors/bitnami for more information.

** Please be patient while the chart is being deployed **

{{- if .Values.diagnosticMode.enabled }}
The chart has been deployed in diagnostic mode. All probes have been disabled and the command has been overwritten with:

  command: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.command "context" $) | nindent 4 }}
  args: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.args "context" $) | nindent 4 }}

Get the list of pods by executing:

  kubectl get pods --namespace {{ include "common.names.namespace" . }} -l app.kubernetes.io/instance={{ .Release.Name }}

Access the pod you want to debug by executing

  kubectl exec --namespace {{ include "common.names.namespace" . }} -ti <NAME OF THE POD> -- bash

In order to replicate the container startup scripts execute these commands in their respective pods:

    speaker --port={{ .Values.speaker.containerPorts.metrics }}
    controller --port={{ .Values.controller.containerPorts.metrics }} --cert-service-name=metallb-webhook-service

{{- else }}

MetalLB is now running in the cluster

MetalLB can be configured using CRDs. Please refer to the README.md file or the MetalLB official documentation on how to use them

https://metallb.universe.tf/configuration/

LoadBalancer Services in your cluster are now available on the IPs you
defined in MetalLB's configuration. To see IP assignments,

    kubectl get services -o wide --all-namespaces | grep --color=never -E 'LoadBalancer|NAMESPACE'

should be executed.

{{- if .Values.speaker.secretName }}
WARNING: you specified a secretName that isn't managed by
Helm. The MetalLB speakers will not join without the secret in place.

    kubectl get secrets --namespace {{ include "common.names.namespace" . }} | grep --color=never -E "{{ include "metallb.speaker.secretName" . }}|NAME"

If it is missing create it with:

    kubectl create secret {{ include "metallb.speaker.secretName" . }} --from-file={{ include "metallb.speaker.secretKey" . }}
{{- end }}
{{- end }}
{{- include "common.warnings.resources" (dict "sections" (list "controller" "speaker") "context" $) }}
{{- include "common.warnings.modifiedImages" (dict "images" (list .Values.controller.image .Values.speaker.image .Values.speaker.frr.image) "context" $) }}
{{- include "common.errors.insecureImages" (dict "images" (list .Values.controller.image .Values.speaker.image .Values.speaker.frr.image) "context" $) }}
