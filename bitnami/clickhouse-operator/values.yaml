# Copyright Broadcom, Inc. All Rights Reserved.
# SPDX-License-Identifier: APACHE-2.0

## @section Global parameters
## Global Docker image parameters
## Please, note that this will override the image parameters, including dependencies, configured to use the global value
## Current available global Docker image parameters: imageRegistry, imagePullSecrets and storageClass
##

## @param global.imageRegistry Global Docker image registry
## @param global.imagePullSecrets Global Docker registry secret names as an array
## @param global.defaultStorageClass Global default StorageClass for Persistent Volume(s)
##
global:
  imageRegistry: ""
  ## e.g:
  ## imagePullSecrets:
  ##   - myRegistryKeySecretName
  ##
  imagePullSecrets: []
  defaultStorageClass: ""
  ## Security parameters
  ##
  security:
    ## @param global.security.allowInsecureImages Allows skipping image verification
    allowInsecureImages: false
  ## Compatibility adaptations for Kubernetes platforms
  ##
  compatibility:
    ## Compatibility adaptations for Openshift
    ##
    openshift:
      ## @param global.compatibility.openshift.adaptSecurityContext Adapt the securityContext sections of the deployment to make them compatible with Openshift restricted-v2 SCC: remove runAsUser, runAsGroup and fsGroup and let the platform use their allowed default IDs. Possible values: auto (apply if the detected running cluster is Openshift), force (perform the adaptation always), disabled (do not perform adaptation)
      ##
      adaptSecurityContext: auto
    ## @param global.compatibility.omitEmptySeLinuxOptions If set to true, removes the seLinuxOptions from the securityContexts when it is set to an empty object
    ##
    omitEmptySeLinuxOptions: false

## @section Common parameters
##

## @param kubeVersion Override Kubernetes version
##
kubeVersion: ""
## @param apiVersions Override Kubernetes API versions reported by .Capabilities
##
apiVersions: []
## @param nameOverride String to partially override common.names.name
##
nameOverride: ""
## @param fullnameOverride String to fully override common.names.fullname
##
fullnameOverride: ""
## @param namespaceOverride String to fully override common.names.namespace
##
namespaceOverride: ""
## @param commonLabels Labels to add to all deployed objects
##
commonLabels: {}
## @param commonAnnotations Annotations to add to all deployed objects
##
commonAnnotations: {}
## @param clusterDomain Kubernetes cluster domain name
##
clusterDomain: cluster.local
## @param extraDeploy Array of extra objects to deploy with the release
##
extraDeploy: []

## @section ClickHouse Operator Parameters

## Bitnami ClickHouse Operator image
## ref: https://hub.docker.com/r/bitnami/clickhouse-operator/tags/
## @param image.registry [default: REGISTRY_NAME] ClickHouse Operator image registry
## @param image.repository [default: REPOSITORY_NAME/clickhouse-operator] ClickHouse Operator image repository
## @skip image.tag ClickHouse Operator image tag (immutable tags are recommended)
## @param image.digest ClickHouse Operator image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag image tag (immutable tags are recommended)
## @param image.pullPolicy ClickHouse Operator image pull policy
## @param image.pullSecrets ClickHouse Operator image pull secrets
##
image:
  registry: docker.io
  repository: bitnami/clickhouse-operator
  tag: 0.24.5-debian-12-r3
  digest: ""
  ## Specify a imagePullPolicy
  ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
  ## ref: https://kubernetes.io/docs/concepts/containers/images/#pre-pulled-images
  ##
  pullPolicy: IfNotPresent
  ## Optionally specify an array of imagePullSecrets.
  ## Secrets must be manually created in the namespace.
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  ## e.g:
  ## pullSecrets:
  ##   - myRegistryKeySecretName
  ##
  pullSecrets: []
## Bitnami ClickHouse image
## ref: https://hub.docker.com/r/bitnami/clickhouse/tags/
## @param clickHouseImage.registry [default: REGISTRY_NAME] ClickHouse image registry
## @param clickHouseImage.repository [default: REPOSITORY_NAME/clickhouse] ClickHouse image repository
## @skip clickHouseImage.tag ClickHouse image tag (immutable tags are recommended)
## @param clickHouseImage.digest ClickHouse image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag image tag (immutable tags are recommended)
## @param clickHouseImage.pullPolicy ClickHouse image pull policy
## @param clickHouseImage.pullSecrets ClickHouse image pull secrets
##
clickHouseImage:
  registry: docker.io
  repository: bitnami/clickhouse
  tag: 25.3.2-debian-12-r3
  digest: ""
  ## Specify a imagePullPolicy
  ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
  ## ref: https://kubernetes.io/docs/concepts/containers/images/#pre-pulled-images
  ##
  pullPolicy: IfNotPresent
  ## Optionally specify an array of imagePullSecrets.
  ## Secrets must be manually created in the namespace.
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  ## e.g:
  ## pullSecrets:
  ##   - myRegistryKeySecretName
  ##
  pullSecrets: []
## Bitnami ClickHouse Keeper image
## ref: https://hub.docker.com/r/bitnami/clickhouse-keeper/tags/
## @param keeperImage.registry [default: REGISTRY_NAME] ClickHouse Keeper image registry
## @param keeperImage.repository [default: REPOSITORY_NAME/clickhouse-keeper] ClickHouse Keeper image repository
## @skip keeperImage.tag ClickHouse Keeper image tag (immutable tags are recommended)
## @param keeperImage.digest ClickHouse Keeper image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag image tag (immutable tags are recommended)
## @param keeperImage.pullPolicy ClickHouse Keeper image pull policy
## @param keeperImage.pullSecrets ClickHouse Keeper image pull secrets
##
keeperImage:
  registry: docker.io
  repository: bitnami/clickhouse-keeper
  tag: 25.3.2-debian-12-r6
  digest: ""
  ## Specify a imagePullPolicy
  ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
  ## ref: https://kubernetes.io/docs/concepts/containers/images/#pre-pulled-images
  ##
  pullPolicy: IfNotPresent
  ## Optionally specify an array of imagePullSecrets.
  ## Secrets must be manually created in the namespace.
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  ## e.g:
  ## pullSecrets:
  ##   - myRegistryKeySecretName
  ##
  pullSecrets: []
## Authentication
## @param auth.username ClickHouse Admin username
## @param auth.password ClickHouse Admin password
## @param auth.existingSecret Name of a secret containing the Admin credentials
## @param auth.existingSecretUsernameKey Name of the key inside the existing secret containing the Admin username
## @param auth.existingSecretPasswordKey Name of the key inside the existing secret containing the Admin password
##
auth:
  username: clickhouse_operator
  password: ""
  existingSecret: ""
  existingSecretUsernameKey: ""
  existingSecretPasswordKey: ""
## @param replicaCount Number of ClickHouse Operator replicas to deploy
##
replicaCount: 1
## @param containerPorts.metrics ClickHouse Operator Metrics container port
##
containerPorts:
  metrics: 9999
## @param extraContainerPorts Optionally specify extra list of additional ports for ClickHouse Operator containers
## e.g:
## extraContainerPorts:
##   - name: myservice
##     containerPort: 9090
##
extraContainerPorts: []
## Configure extra options for ClickHouse Operator containers' liveness and readiness probes
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
## @param livenessProbe.enabled Enable livenessProbe on ClickHouse Operator containers
## @param livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
## @param livenessProbe.periodSeconds Period seconds for livenessProbe
## @param livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
## @param livenessProbe.failureThreshold Failure threshold for livenessProbe
## @param livenessProbe.successThreshold Success threshold for livenessProbe
##
livenessProbe:
  enabled: true
  initialDelaySeconds: 5
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 5
  successThreshold: 1
  ## @param readinessProbe.enabled Enable readinessProbe on ClickHouse Operator containers
  ## @param readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
  ## @param readinessProbe.periodSeconds Period seconds for readinessProbe
  ## @param readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
  ## @param readinessProbe.failureThreshold Failure threshold for readinessProbe
  ## @param readinessProbe.successThreshold Success threshold for readinessProbe
  ##
readinessProbe:
  enabled: true
  initialDelaySeconds: 5
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 5
  successThreshold: 1
  ## @param startupProbe.enabled Enable startupProbe on ClickHouse Operator containers
  ## @param startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
  ## @param startupProbe.periodSeconds Period seconds for startupProbe
  ## @param startupProbe.timeoutSeconds Timeout seconds for startupProbe
  ## @param startupProbe.failureThreshold Failure threshold for startupProbe
  ## @param startupProbe.successThreshold Success threshold for startupProbe
  ##
startupProbe:
  enabled: false
  initialDelaySeconds: 5
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 5
  successThreshold: 1
## @param customLivenessProbe Custom livenessProbe that overrides the default one
##
customLivenessProbe: {}
## @param customReadinessProbe Custom readinessProbe that overrides the default one
##
customReadinessProbe: {}
## @param customStartupProbe Custom startupProbe that overrides the default one
##
customStartupProbe: {}
## ClickHouse Operator resource requests and limits
## ref: http://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
## @param resourcesPreset Set ClickHouse Operator container resources according to one common preset (allowed values: none, nano, small, medium, large, xlarge, 2xlarge). This is ignored if resources is set (resources is recommended for production).
## More information: https://github.com/bitnami/charts/blob/main/bitnami/common/templates/_resources.tpl#L15
##
resourcesPreset: "nano"
## @param resources Set ClickHouse Operator container requests and limits for different resources like CPU or memory (essential for production workloads)
## Example:
## resources:
##   requests:
##     cpu: 2
##     memory: 512Mi
##   limits:
##     cpu: 3
##     memory: 1024Mi
##
resources: {}
## Configure Pods Security Context
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
## @param podSecurityContext.enabled Enable ClickHouse Operator pods' Security Context
## @param podSecurityContext.fsGroupChangePolicy Set filesystem group change policy for ClickHouse Operator pods
## @param podSecurityContext.sysctls Set kernel settings using the sysctl interface for ClickHouse Operator pods
## @param podSecurityContext.supplementalGroups Set filesystem extra groups for ClickHouse Operator pods
## @param podSecurityContext.fsGroup Set fsGroup in ClickHouse Operator pods' Security Context
##
podSecurityContext:
  enabled: true
  fsGroupChangePolicy: Always
  sysctls: []
  supplementalGroups: []
  fsGroup: 1001
## Configure Container Security Context
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
## @param containerSecurityContext.enabled Enabled ClickHouse Operator container' Security Context
## @param containerSecurityContext.seLinuxOptions [object,nullable] Set SELinux options in ClickHouse Operator container
## @param containerSecurityContext.runAsUser Set runAsUser in ClickHouse Operator container' Security Context
## @param containerSecurityContext.runAsGroup Set runAsGroup in ClickHouse Operator container' Security Context
## @param containerSecurityContext.runAsNonRoot Set runAsNonRoot in ClickHouse Operator container' Security Context
## @param containerSecurityContext.readOnlyRootFilesystem Set readOnlyRootFilesystem in ClickHouse Operator container' Security Context
## @param containerSecurityContext.privileged Set privileged in ClickHouse Operator container' Security Context
## @param containerSecurityContext.allowPrivilegeEscalation Set allowPrivilegeEscalation in ClickHouse Operator container' Security Context
## @param containerSecurityContext.capabilities.drop List of capabilities to be dropped in ClickHouse Operator container
## @param containerSecurityContext.seccompProfile.type Set seccomp profile in ClickHouse Operator container
##
containerSecurityContext:
  enabled: true
  seLinuxOptions: {}
  runAsUser: 1001
  runAsGroup: 1001
  runAsNonRoot: true
  readOnlyRootFilesystem: true
  privileged: false
  allowPrivilegeEscalation: false
  capabilities:
    drop: ["ALL"]
  seccompProfile:
    type: "RuntimeDefault"
## @param configuration Specify content for ClickHouse Operator configuration (basic one auto-generated based on other values otherwise)
##
configuration: {}
## @param overrideConfiguration ClickHouse Operator configuration override. Values defined here takes precedence over the ones defined at `configuration`
##
overrideConfiguration: {}
## @param existingConfigmap The name of an existing ConfigMap with your custom configuration for ClickHouse Operator
##
existingConfigmap: ""
## @param chiTemplate ClickHouse Installation default template (basic one auto-generated based on other values otherwise)
##
chiTemplate: {}
## @param existingChiTemplatesConfigmap The name of an existing ConfigMap with your custom ClickHouse Installation templates
##
existingChiTemplatesConfigmap: ""
## @param chiConfigd Configuration files for ClickHouse (basic ones auto-generated based on other values otherwise)
##
chiConfigd: []
## @param existingChiConfigdConfigmap The name of an existing ConfigMap with your custom configuration files for ClickHouse
##
existingChiConfigdConfigmap: ""
## @param chiUsersd Users configuration files for ClickHouse (basic ones auto-generated based on other values otherwise)
##
chiUsersd: []
## @param existingChiUsersdConfigmap The name of an existing ConfigMap with your custom users configuration files for ClickHouse
##
existingChiUsersdConfigmap: ""
## @param chkTemplate ClickHouse Keeper Installation default template (basic one auto-generated based on other values otherwise)
##
chkTemplate: {}
## @param existingChkTemplatesConfigmap The name of an existing ConfigMap with your custom ClickHouse Keeper Installation templates
##
existingChkTemplatesConfigmap: ""
## @param chkConfigd Configuration files for ClickHouse Keeper (basic ones auto-generated based on other values otherwise)
##
chkConfigd: []
## @param existingChkConfigdConfigmap The name of an existing ConfigMap with your custom configuration files for ClickHouse Keeper
##
existingChkConfigdConfigmap: ""
## @param chkUsersd Users configuration files for ClickHouse Keeper (basic ones auto-generated based on other values otherwise)
##
chkUsersd: []
## @param existingChkUsersdConfigmap The name of an existing ConfigMap with your custom users configuration files for ClickHouse Keeper
##
existingChkUsersdConfigmap: ""
## @param watchAllNamespaces Watch for ClickHouse Operator resources in all namespaces
##
watchAllNamespaces: false
## @param watchNamespaces [array] Watch for ClickHouse Operator resources in the given namespaces
##
watchNamespaces: []
## @param command Override default ClickHouse Operator container command (useful when using custom images)
##
command: []
## @param args Override default ClickHouse Operator container args (useful when using custom images)
##
args: []
## @param automountServiceAccountToken Mount Service Account token in ClickHouse Operator pods
##
automountServiceAccountToken: true
## @param hostAliases ClickHouse Operator pods host aliases
## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
##
hostAliases: []
## @param deploymentAnnotations Annotations for ClickHouse Operator deployment
## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
##
deploymentAnnotations: {}
## @param podLabels Extra labels for ClickHouse Operator pods
## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
##
podLabels: {}
## @param podAnnotations Annotations for ClickHouse Operator pods
## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
##
podAnnotations: {}
## @param podAffinityPreset Pod affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
##
podAffinityPreset: ""
## @param podAntiAffinityPreset Pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
##
podAntiAffinityPreset: soft
## Node affinity preset
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
##
nodeAffinityPreset:
  ## @param nodeAffinityPreset.type Node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
  ##
  type: ""
  ## @param nodeAffinityPreset.key Node label key to match. Ignored if `affinity` is set
  ##
  key: ""
  ## @param nodeAffinityPreset.values Node label values to match. Ignored if `affinity` is set
  ## E.g.
  ## values:
  ##   - e2e-az1
  ##   - e2e-az2
  ##
  values: []
## @param affinity Affinity for ClickHouse Operator pods assignment
## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
## NOTE: `podAffinityPreset`, `podAntiAffinityPreset`, and `nodeAffinityPreset` will be ignored when it's set
##
affinity: {}
## @param nodeSelector Node labels for ClickHouse Operator pods assignment
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
##
nodeSelector: {}
## @param tolerations Tolerations for ClickHouse Operator pods assignment
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
##
tolerations: []
## @param updateStrategy.type ClickHouse Operator deployment strategy type
## ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
##
updateStrategy:
  ## Can be set to RollingUpdate or Recreate
  ##
  type: RollingUpdate
## @param priorityClassName ClickHouse Operator pods' priorityClassName
##
priorityClassName: ""
## @param topologySpreadConstraints Topology Spread Constraints for ClickHouse Operator pod assignment spread across your cluster among failure-domains
## Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/#spread-constraints-for-pods
##
topologySpreadConstraints: []
## @param schedulerName Name of the k8s scheduler (other than default) for ClickHouse Operator pods
## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
##
schedulerName: ""
## @param terminationGracePeriodSeconds Seconds ClickHouse Operator pods need to terminate gracefully
## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods
##
terminationGracePeriodSeconds: ""
## @param lifecycleHooks for ClickHouse Operator containers to automate configuration before or after startup
##
lifecycleHooks: {}
## @param extraEnvVars Array with extra environment variables to add to ClickHouse Operator containers
## e.g:
## extraEnvVars:
##   - name: FOO
##     value: "bar"
##
extraEnvVars: []
## @param extraEnvVarsCM Name of existing ConfigMap containing extra env vars for ClickHouse Operator containers
##
extraEnvVarsCM: ""
## @param extraEnvVarsSecret Name of existing Secret containing extra env vars for ClickHouse Operator containers
##
extraEnvVarsSecret: ""
## @param extraVolumes Optionally specify extra list of additional volumes for the ClickHouse Operator pods
##
extraVolumes: []
## @param extraVolumeMounts Optionally specify extra list of additional volumeMounts for the ClickHouse Operator containers
##
extraVolumeMounts: []
## @param sidecars Add additional sidecar containers to the ClickHouse Operator pods
## e.g:
## sidecars:
##   - name: your-image-name
##     image: your-image
##     imagePullPolicy: Always
##     ports:
##       - name: portname
##         containerPort: 1234
##
sidecars: []
## @param initContainers Add additional init containers to the ClickHouse Operator pods
## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
## e.g:
## initContainers:
##  - name: your-image-name
##    image: your-image
##    imagePullPolicy: Always
##    command: ['sh', '-c', 'echo "hello world"']
##
initContainers: []
## Pod Disruption Budget configuration
## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb
## @param pdb.create Enable/disable a Pod Disruption Budget creation
## @param pdb.minAvailable Minimum number/percentage of pods that should remain scheduled
## @param pdb.maxUnavailable Maximum number/percentage of pods that may be made unavailable. Defaults to `1` if both `pdb.minAvailable` and `pdb.maxUnavailable` are empty.
##
pdb:
  create: true
  minAvailable: ""
  maxUnavailable: ""
## Autoscaling configuration
## ref: https://kubernetes.io/docs/concepts/workloads/autoscaling/
##
autoscaling:
  ## @param autoscaling.vpa.enabled Enable VPA for ClickHouse Operator pods
  ## @param autoscaling.vpa.annotations Annotations for VPA resource
  ## @param autoscaling.vpa.controlledResources VPA List of resources that the vertical pod autoscaler can control. Defaults to cpu and memory
  ## @param autoscaling.vpa.maxAllowed VPA Max allowed resources for the pod
  ## @param autoscaling.vpa.minAllowed VPA Min allowed resources for the pod
  ##
  vpa:
    enabled: false
    annotations: {}
    controlledResources: []
    maxAllowed: {}
    minAllowed: {}
    ## @param autoscaling.vpa.updatePolicy.updateMode Autoscaling update policy
    ## Specifies whether recommended updates are applied when a Pod is started and whether recommended updates are applied during the life of a Pod
    ## Possible values are "Off", "Initial", "Recreate", and "Auto".
    ##
    updatePolicy:
      updateMode: Auto
  ## @param autoscaling.hpa.enabled Enable HPA for ClickHouse Operator pods
  ## @param autoscaling.hpa.minReplicas Minimum number of replicas
  ## @param autoscaling.hpa.maxReplicas Maximum number of replicas
  ## @param autoscaling.hpa.targetCPU Target CPU utilization percentage
  ## @param autoscaling.hpa.targetMemory Target Memory utilization percentage
  ##
  hpa:
    enabled: false
    minReplicas: ""
    maxReplicas: ""
    targetCPU: ""
    targetMemory: ""

## @section Traffic Exposure Parameters

## ClickHouse Operator service parameters
##
service:
  ## @param service.ports.metrics ClickHouse Operator service metrics port
  ## @param service.ports.metricsExporter ClickHouse Operator service metrics exporter port
  ##
  ports:
    metrics: 9999
    metricsExporter: 8888
  ## @param service.clusterIP ClickHouse Operator service Cluster IP
  ## e.g.:
  ## clusterIP: None
  ##
  clusterIP: ""
  ## @param service.annotations Additional custom annotations for ClickHouse Operator service
  ##
  annotations: {}
  ## @param service.extraPorts Extra ports to expose in ClickHouse Operator service (normally used with the `sidecars` value)
  ##
  extraPorts: []
## Network Policies
## Ref: https://kubernetes.io/docs/concepts/services-networking/network-policies/
##
networkPolicy:
  ## @param networkPolicy.enabled Specifies whether a NetworkPolicy should be created
  ##
  enabled: true
  ## @param networkPolicy.kubeAPIServerPorts [array] List of possible endpoints to kube-apiserver (limit to your cluster settings to increase security)
  ##
  kubeAPIServerPorts: [443, 6443, 8443]
  ## @param networkPolicy.allowExternal Don't require server label for connections
  ## The Policy model to apply. When set to false, only pods with the correct
  ## server label will have network access to the ports server is listening
  ## on. When true, server will accept connections from any source
  ## (with the correct destination port).
  ##
  allowExternal: true
  ## @param networkPolicy.allowExternalEgress Allow the pod to access any range of port and all destinations.
  ##
  allowExternalEgress: true
  ## @param networkPolicy.addExternalClientAccess Allow access from pods with client label set to "true". Ignored if `networkPolicy.allowExternal` is true.
  ##
  addExternalClientAccess: true
  ## @param networkPolicy.extraIngress [array] Add extra ingress rules to the NetworkPolicy
  ## e.g:
  ## extraIngress:
  ##   - ports:
  ##       - port: 1234
  ##     from:
  ##       - podSelector:
  ##           - matchLabels:
  ##               - role: frontend
  ##       - podSelector:
  ##           - matchExpressions:
  ##               - key: role
  ##                 operator: In
  ##                 values:
  ##                   - frontend
  extraIngress: []
  ## @param networkPolicy.extraEgress [array] Add extra ingress rules to the NetworkPolicy (ignored if allowExternalEgress=true)
  ## e.g:
  ## extraEgress:
  ##   - ports:
  ##       - port: 1234
  ##     to:
  ##       - podSelector:
  ##           - matchLabels:
  ##               - role: frontend
  ##       - podSelector:
  ##           - matchExpressions:
  ##               - key: role
  ##                 operator: In
  ##                 values:
  ##                   - frontend
  ##
  extraEgress: []
  ## @param networkPolicy.ingressPodMatchLabels [object] Labels to match to allow traffic from other pods. Ignored if `networkPolicy.allowExternal` is true.
  ## e.g:
  ## ingressPodMatchLabels:
  ##   my-client: "true"
  #
  ingressPodMatchLabels: {}
  ## @param networkPolicy.ingressNSMatchLabels [object] Labels to match to allow traffic from other namespaces. Ignored if `networkPolicy.allowExternal` is true.
  ## @param networkPolicy.ingressNSPodMatchLabels [object] Pod labels to match to allow traffic from other namespaces. Ignored if `networkPolicy.allowExternal` is true.
  ##
  ingressNSMatchLabels: {}
  ingressNSPodMatchLabels: {}

## @section Other Parameters

## RBAC configuration
##
rbac:
  ## @param rbac.create Specifies whether RBAC resources should be created
  ##
  create: true
  ## @param rbac.rules Custom RBAC rules to set
  ## e.g:
  ## rules:
  ##   - apiGroups:
  ##       - ""
  ##     resources:
  ##       - pods
  ##     verbs:
  ##       - get
  ##       - list
  ##
  rules: []
## ServiceAccount configuration
##
serviceAccount:
  ## @param serviceAccount.create Specifies whether a ServiceAccount should be created
  ##
  create: true
  ## @param serviceAccount.name The name of the ServiceAccount to use.
  ## If not set and create is true, a name is generated using the common.names.fullname template
  ##
  name: ""
  ## @param serviceAccount.annotations Additional Service Account annotations (evaluated as a template)
  ##
  annotations: {}
  ## @param serviceAccount.automountServiceAccountToken Automount service account token for the server service account
  ##
  automountServiceAccountToken: true

## Prometheus metrics
##
metrics:
  ## @param metrics.enabled Enable the export of Prometheus metrics using a exporter sidecar
  ##
  enabled: false
  ## Bitnami ClickHouse Operator Metrics exporter image
  ## ref: https://hub.docker.com/r/bitnami/clickhouse-operator/tags/
  ## @param metrics.image.registry [default: REGISTRY_NAME] ClickHouse Operator Metrics exporter image registry
  ## @param metrics.image.repository [default: REPOSITORY_NAME/clickhouse-operator] ClickHouse Operator Metrics exporter image repository
  ## @skip metrics.image.tag ClickHouse Operator Metrics exporter image tag (immutable tags are recommended)
  ## @param metrics.image.digest ClickHouse Operator Metrics exporter image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag image tag (immutable tags are recommended)
  ## @param metrics.image.pullPolicy ClickHouse Operator Metrics exporter image pull policy
  ## @param metrics.image.pullSecrets ClickHouse Operator Metrics exporter image pull secrets
  ##
  image:
    registry: docker.io
    repository: bitnami/clickhouse-operator-metrics-exporter
    tag: 0.24.5-debian-12-r1
    digest: ""
    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: https://kubernetes.io/docs/concepts/containers/images/#pre-pulled-images
    ##
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
  ## @param metrics.containerPorts.metrics ClickHouse Operator Metrics exporter container port
  ##
  containerPorts:
    metrics: 8888
  ## @param metrics.extraContainerPorts Optionally specify extra list of additional ports for ClickHouse Operator Metrics exporter containers
  ## e.g:
  ## extraContainerPorts:
  ##   - name: myservice
  ##     containerPort: 9090
  ##
  extraContainerPorts: []
  ## Configure extra options for ClickHouse Operator Metrics exporter containers' liveness and readiness probes
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
  ## @param metrics.livenessProbe.enabled Enable livenessProbe on ClickHouse Operator Metrics exporter containers
  ## @param metrics.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
  ## @param metrics.livenessProbe.periodSeconds Period seconds for livenessProbe
  ## @param metrics.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
  ## @param metrics.livenessProbe.failureThreshold Failure threshold for livenessProbe
  ## @param metrics.livenessProbe.successThreshold Success threshold for livenessProbe
  ##
  livenessProbe:
    enabled: true
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 5
    successThreshold: 1
    ## @param metrics.readinessProbe.enabled Enable readinessProbe on ClickHouse Operator Metrics exporter containers
    ## @param metrics.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
    ## @param metrics.readinessProbe.periodSeconds Period seconds for readinessProbe
    ## @param metrics.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
    ## @param metrics.readinessProbe.failureThreshold Failure threshold for readinessProbe
    ## @param metrics.readinessProbe.successThreshold Success threshold for readinessProbe
    ##
  readinessProbe:
    enabled: true
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 5
    successThreshold: 1
    ## @param metrics.startupProbe.enabled Enable startupProbe on ClickHouse Operator Metrics exporter containers
    ## @param metrics.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
    ## @param metrics.startupProbe.periodSeconds Period seconds for startupProbe
    ## @param metrics.startupProbe.timeoutSeconds Timeout seconds for startupProbe
    ## @param metrics.startupProbe.failureThreshold Failure threshold for startupProbe
    ## @param metrics.startupProbe.successThreshold Success threshold for startupProbe
    ##
  startupProbe:
    enabled: false
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 5
    successThreshold: 1
  ## @param metrics.customLivenessProbe Custom livenessProbe that overrides the default one
  ##
  customLivenessProbe: {}
  ## @param metrics.customReadinessProbe Custom readinessProbe that overrides the default one
  ##
  customReadinessProbe: {}
  ## @param metrics.customStartupProbe Custom startupProbe that overrides the default one
  ##
  customStartupProbe: {}
  ## ClickHouse Operator Metrics exporter resource requests and limits
  ## ref: http://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
  ## @param metrics.resourcesPreset Set ClickHouse Operator Metrics exporter container resources according to one common preset (allowed values: none, nano, small, medium, large, xlarge, 2xlarge). This is ignored if metrics.resources is set (metrics.resources is recommended for production).
  ## More information: https://github.com/bitnami/charts/blob/main/bitnami/common/templates/_resources.tpl#L15
  ##
  resourcesPreset: "nano"
  ## @param metrics.resources Set ClickHouse Operator Metrics exporter container requests and limits for different resources like CPU or memory (essential for production workloads)
  ## Example:
  ## resources:
  ##   requests:
  ##     cpu: 2
  ##     memory: 512Mi
  ##   limits:
  ##     cpu: 3
  ##     memory: 1024Mi
  ##
  resources: {}
  ## Configure Container Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
  ## @param metrics.containerSecurityContext.enabled Enabled ClickHouse Operator Metrics exporter container' Security Context
  ## @param metrics.containerSecurityContext.seLinuxOptions [object,nullable] Set SELinux options in ClickHouse Operator Metrics exporter container
  ## @param metrics.containerSecurityContext.runAsUser Set runAsUser in ClickHouse Operator Metrics exporter container' Security Context
  ## @param metrics.containerSecurityContext.runAsGroup Set runAsGroup in ClickHouse Operator Metrics exporter container' Security Context
  ## @param metrics.containerSecurityContext.runAsNonRoot Set runAsNonRoot in ClickHouse Operator Metrics exporter container' Security Context
  ## @param metrics.containerSecurityContext.readOnlyRootFilesystem Set readOnlyRootFilesystem in ClickHouse Operator Metrics exporter container' Security Context
  ## @param metrics.containerSecurityContext.privileged Set privileged in ClickHouse Operator Metrics exporter container' Security Context
  ## @param metrics.containerSecurityContext.allowPrivilegeEscalation Set allowPrivilegeEscalation in ClickHouse Operator Metrics exporter container' Security Context
  ## @param metrics.containerSecurityContext.capabilities.drop List of capabilities to be dropped in ClickHouse Operator Metrics exporter container
  ## @param metrics.containerSecurityContext.seccompProfile.type Set seccomp profile in ClickHouse Operator Metrics exporter container
  ##
  containerSecurityContext:
    enabled: true
    seLinuxOptions: {}
    runAsUser: 1001
    runAsGroup: 1001
    runAsNonRoot: true
    readOnlyRootFilesystem: true
    privileged: false
    allowPrivilegeEscalation: false
    capabilities:
      drop: ["ALL"]
    seccompProfile:
      type: "RuntimeDefault"
  ## @param metrics.extraEnvVars Array with extra environment variables to add to ClickHouse Operator Metrics exporter containers
  ## e.g:
  ## extraEnvVars:
  ##   - name: FOO
  ##     value: "bar"
  ##
  extraEnvVars: []
  ## @param metrics.extraEnvVarsCM Name of existing ConfigMap containing extra env vars for ClickHouse Operator Metrics exporter containers
  ##
  extraEnvVarsCM: ""
  ## @param metrics.extraEnvVarsSecret Name of existing Secret containing extra env vars for ClickHouse Operator Metrics exporter containers
  ##
  extraEnvVarsSecret: ""
  ## Prometheus Operator ServiceMonitor configuration
  ##
  serviceMonitor:
    ## @param metrics.serviceMonitor.enabled if `true`, creates a Prometheus Operator ServiceMonitor (also requires `metrics.enabled` to be `true`)
    ##
    enabled: false
    ## @param metrics.serviceMonitor.namespace Namespace in which Prometheus is running
    ##
    namespace: ""
    ## @param metrics.serviceMonitor.annotations Additional custom annotations for the ServiceMonitor
    ##
    annotations: {}
    ## @param metrics.serviceMonitor.labels Extra labels for the ServiceMonitor
    ##
    labels: {}
    ## @param metrics.serviceMonitor.jobLabel The name of the label on the target service to use as the job name in Prometheus
    ##
    jobLabel: ""
    ## @param metrics.serviceMonitor.honorLabels honorLabels chooses the metric's labels on collisions with target labels
    ##
    honorLabels: false
    ## @param metrics.serviceMonitor.interval Interval at which metrics should be scraped.
    ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint
    ## e.g:
    ## interval: 10s
    ##
    interval: ""
    ## @param metrics.serviceMonitor.scrapeTimeout Timeout after which the scrape is ended
    ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint
    ## e.g:
    ## scrapeTimeout: 10s
    ##
    scrapeTimeout: ""
    ## @param metrics.serviceMonitor.metricRelabelings Specify additional relabeling of metrics
    ##
    metricRelabelings: []
    ## @param metrics.serviceMonitor.relabelings Specify general relabeling
    ##
    relabelings: []
    ## @param metrics.serviceMonitor.selector Prometheus instance selector labels
    ## ref: https://github.com/bitnami/charts/tree/main/bitnami/prometheus-operator#prometheus-configuration
    ## selector:
    ##   prometheus: my-prometheus
    ##
    selector: {}
