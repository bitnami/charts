# Copyright Broadcom, Inc. All Rights Reserved.
# SPDX-License-Identifier: APACHE-2.0

## @section Global parameters
## Global Docker image parameters
## Please, note that this will override the image parameters, including dependencies, configured to use the global value
## Current available global Docker image parameters: imageRegistry, imagePullSecrets and storageClass
##

## @param global.imageRegistry Global Docker image registry
## @param global.imagePullSecrets Global Docker registry secret names as an array
## @param global.defaultStorageClass Global default StorageClass for Persistent Volume(s)
##
global:
  imageRegistry: ""
  ## E.g.
  ## imagePullSecrets:
  ##   - myRegistryKeySecretName
  ##
  imagePullSecrets: []
  defaultStorageClass: ""
  ## Security parameters
  ##
  security:
    ## @param global.security.allowInsecureImages Allows skipping image verification
    allowInsecureImages: false
  ## Compatibility adaptations for Kubernetes platforms
  ##
  compatibility:
    ## Compatibility adaptations for Openshift
    ##
    openshift:
      ## @param global.compatibility.openshift.adaptSecurityContext Adapt the securityContext sections of the deployment to make them compatible with Openshift restricted-v2 SCC: remove runAsUser, runAsGroup and fsGroup and let the platform use their allowed default IDs. Possible values: auto (apply if the detected running cluster is Openshift), force (perform the adaptation always), disabled (do not perform adaptation)
      ##
      adaptSecurityContext: auto
## @section Common parameters
##

## @param kubeVersion Override Kubernetes version
##
kubeVersion: ""
## @param apiVersions Override Kubernetes API versions reported by .Capabilities
##
apiVersions: []
## @param nameOverride String to partially override common.names.name
##
nameOverride: ""
## @param fullnameOverride String to fully override common.names.fullname
##
fullnameOverride: ""
## @param namespaceOverride String to fully override common.names.namespace
##
namespaceOverride: ""
## @param commonLabels Labels to add to all deployed objects
##
commonLabels: {}
## @param commonAnnotations Annotations to add to all deployed objects
##
commonAnnotations: {}
## @param clusterDomain Kubernetes cluster domain name
##
clusterDomain: cluster.local
## @param extraDeploy Array of extra objects to deploy with the release
##
extraDeploy: []
## Bitnami Grafana k6 Operator image
## ref: https://hub.docker.com/r/bitnami/grafana-k6-operator/tags/
## @param image.registry [default: REGISTRY_NAME] Grafana k6 Operator image registry
## @param image.repository [default: REPOSITORY_NAME/grafana-k6-operator] Grafana k6 Operator image repository
## @skip image.tag Grafana k6 Operator image tag (immutable tags are recommended)
## @param image.digest Grafana k6 Operator image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag image tag (immutable tags are recommended)
## @param image.pullPolicy Grafana k6 Operator image pull policy
## @param image.pullSecrets Grafana k6 Operator image pull secrets
##
image:
  registry: docker.io
  repository: bitnami/grafana-k6-operator
  tag: 0.0.21-debian-12-r1
  digest: ""
  ## Specify a imagePullPolicy
  ## ref: https://kubernetes.io/docs/concepts/containers/images/#pre-pulled-images
  ##
  pullPolicy: IfNotPresent
  ## Optionally specify an array of imagePullSecrets.
  ## Secrets must be manually created in the namespace.
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  ## e.g:
  ## pullSecrets:
  ##   - myRegistryKeySecretName
  ##
  pullSecrets: []
## Bitnami os-shell image
## ref: https://hub.docker.com/r/bitnami/os-shell/tags/
## @param starterImage.registry [default: REGISTRY_NAME] os-shell image registry
## @param starterImage.repository [default: REPOSITORY_NAME/os-shell] os-shell image repository
## @skip starterImage.tag os-shell image tag (immutable tags are recommended)
## @param starterImage.digest os-shell image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag image tag (immutable tags are recommended)
##
starterImage:
  registry: docker.io
  repository: bitnami/os-shell
  tag: 12-debian-12-r45
  digest: ""
## Bitnami Grafana k6 image version
## ref: https://hub.docker.com/r/bitnami/grafana-k6/tags/
## @param runnerImage.registry [default: REGISTRY_NAME] Grafana k6 image registry
## @param runnerImage.repository [default: REPOSITORY_NAME/grafana-k6] Grafana k6 image repository
## @skip runnerImage.tag Grafana k6 image tag (immutable tags are recommended)
## @param runnerImage.digest Grafana k6 image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag
##
runnerImage:
  registry: docker.io
  repository: bitnami/grafana-k6
  tag: 1.0.0-debian-12-r0
  digest: ""
## @param replicaCount Number of Grafana k6 Operator replicas to deploy
##
replicaCount: 1
## @param containerPorts.metrics Metrics container port
## @param containerPorts.health Health container port
##
containerPorts:
  metrics: 8080
  health: 8081
## Configure extra options for Grafana k6 Operator containers' liveness and readiness probes
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
## @param livenessProbe.enabled Enable livenessProbe on Grafana k6 Operator containers
## @param livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
## @param livenessProbe.periodSeconds Period seconds for livenessProbe
## @param livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
## @param livenessProbe.failureThreshold Failure threshold for livenessProbe
## @param livenessProbe.successThreshold Success threshold for livenessProbe
##
livenessProbe:
  enabled: true
  initialDelaySeconds: 5
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 5
  successThreshold: 1
## @param readinessProbe.enabled Enable readinessProbe on Grafana k6 Operator containers
## @param readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
## @param readinessProbe.periodSeconds Period seconds for readinessProbe
## @param readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
## @param readinessProbe.failureThreshold Failure threshold for readinessProbe
## @param readinessProbe.successThreshold Success threshold for readinessProbe
##
readinessProbe:
  enabled: true
  initialDelaySeconds: 5
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 5
  successThreshold: 1
## @param startupProbe.enabled Enable startupProbe on Grafana k6 Operator containers
## @param startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
## @param startupProbe.periodSeconds Period seconds for startupProbe
## @param startupProbe.timeoutSeconds Timeout seconds for startupProbe
## @param startupProbe.failureThreshold Failure threshold for startupProbe
## @param startupProbe.successThreshold Success threshold for startupProbe
##
startupProbe:
  enabled: false
  initialDelaySeconds: 5
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 5
  successThreshold: 1
## @param customLivenessProbe Custom livenessProbe that overrides the default one
##
customLivenessProbe: {}
## @param customReadinessProbe Custom readinessProbe that overrides the default one
##
customReadinessProbe: {}
## @param customStartupProbe Custom startupProbe that overrides the default one
##
customStartupProbe: {}
## @param watchAllNamespaces Watch for Grafana k6 Operator resources in all namespaces
##
watchAllNamespaces: true
## Grafana k6 Operator resource requests and limits
## ref: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
## @param resourcesPreset Set container resources according to one common preset (allowed values: none, nano, micro, small, medium, large, xlarge, 2xlarge). This is ignored if resources is set (resources is recommended for production).
## More information: https://github.com/bitnami/charts/blob/main/bitnami/common/templates/_resources.tpl#L15
##
resourcesPreset: "nano"
## @param resources Set container requests and limits for different resources like CPU or memory (essential for production workloads)
## Example:
## resources:
##   requests:
##     cpu: 2
##     memory: 512Mi
##   limits:
##     cpu: 3
##     memory: 1024Mi
##
resources: {}
## Configure Pods Security Context
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
## @param podSecurityContext.enabled Enabled Grafana k6 Operator pods' Security Context
## @param podSecurityContext.fsGroupChangePolicy Set filesystem group change policy
## @param podSecurityContext.sysctls Set kernel settings using the sysctl interface
## @param podSecurityContext.supplementalGroups Set filesystem extra groups
## @param podSecurityContext.fsGroup Set Grafana k6 Operator pod's Security Context fsGroup
##
podSecurityContext:
  enabled: true
  fsGroupChangePolicy: Always
  sysctls: []
  supplementalGroups: []
  fsGroup: 1001
## Configure Container Security Context
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
## @param containerSecurityContext.enabled Enabled containers' Security Context
## @param containerSecurityContext.seLinuxOptions [object,nullable] Set SELinux options in container
## @param containerSecurityContext.runAsUser Set containers' Security Context runAsUser
## @param containerSecurityContext.runAsGroup Set containers' Security Context runAsGroup
## @param containerSecurityContext.runAsNonRoot Set container's Security Context runAsNonRoot
## @param containerSecurityContext.privileged Set container's Security Context privileged
## @param containerSecurityContext.readOnlyRootFilesystem Set container's Security Context readOnlyRootFilesystem
## @param containerSecurityContext.allowPrivilegeEscalation Set container's Security Context allowPrivilegeEscalation
## @param containerSecurityContext.capabilities.drop List of capabilities to be dropped
## @param containerSecurityContext.seccompProfile.type Set container's Security Context seccomp profile
##
containerSecurityContext:
  enabled: true
  seLinuxOptions: {}
  runAsUser: 1001
  runAsGroup: 1001
  runAsNonRoot: true
  privileged: false
  readOnlyRootFilesystem: true
  allowPrivilegeEscalation: false
  capabilities:
    drop: ["ALL"]
  seccompProfile:
    type: "RuntimeDefault"
## @param command Override default container command (useful when using custom images)
##
command: []
## @param args Override default container args (useful when using custom images)
##
args: []
## @param extraArgs Add extra arguments to the default command
##
extraArgs: []
## @param automountServiceAccountToken Mount Service Account token in pod
##
automountServiceAccountToken: true
## @param hostAliases Grafana k6 Operator pods host aliases
## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
##
hostAliases: []
## @param podLabels Extra labels for Grafana k6 Operator pods
## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
##
podLabels: {}
## @param podAnnotations Annotations for Grafana k6 Operator pods
## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
##
podAnnotations: {}
## @param deploymentLabels Add extra labels to the Deployment object
##
deploymentLabels: {}
## @param deploymentAnnotations Add extra annotations to the Deployment object
##
deploymentAnnotations: {}
## @param extraContainerPorts Optionally specify extra list of additional container ports
## e.g:
## extraContainerPorts:
##   - name: myservice
##     containerPort: 9090
##
extraContainerPorts: []
## @param podAffinityPreset Pod affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
##
podAffinityPreset: ""
## @param podAntiAffinityPreset Pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
##
podAntiAffinityPreset: soft
## Pod Disruption Budget configuration
## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb
## @param pdb.create Enable/disable a Pod Disruption Budget creation
## @param pdb.minAvailable Minimum number/percentage of pods that should remain scheduled
## @param pdb.maxUnavailable Maximum number/percentage of pods that may be made unavailable
##
pdb:
  create: true
  minAvailable: ""
  maxUnavailable: ""
## Node affinity preset
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
##
nodeAffinityPreset:
  ## @param nodeAffinityPreset.type Node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
  ##
  type: ""
  ## @param nodeAffinityPreset.key Node label key to match. Ignored if `affinity` is set
  ##
  key: ""
  ## @param nodeAffinityPreset.values Node label values to match. Ignored if `affinity` is set
  ## E.g.
  ## values:
  ##   - e2e-az1
  ##   - e2e-az2
  ##
  values: []
## @param affinity Affinity for Grafana k6 Operator pods assignment
## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
## NOTE: `podAffinityPreset`, `podAntiAffinityPreset`, and `nodeAffinityPreset` will be ignored when it's set
##
affinity: {}
## @param nodeSelector Node labels for Grafana k6 Operator pods assignment
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/assign-pods-nodes/
##
nodeSelector: {}
## @param tolerations Tolerations for Grafana k6 Operator pods assignment
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
##
tolerations: []
## @param updateStrategy.type Grafana k6 Operator deployment strategy type
## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies
##
updateStrategy:
  ## StrategyType
  ## Can be set to RollingUpdate or OnDelete
  ##
  type: RollingUpdate
## @param priorityClassName Grafana k6 Operator pods' priorityClassName
##
priorityClassName: ""
## @param topologySpreadConstraints Topology Spread Constraints for pod assignment spread across your cluster among failure-domains. Evaluated as a template
## Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/#spread-constraints-for-pods
##
topologySpreadConstraints: []
## @param schedulerName Name of the k8s scheduler (other than default) for Grafana k6 Operator pods
## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
##
schedulerName: ""
## @param terminationGracePeriodSeconds Seconds Grafana k6 Operator pod needs to terminate gracefully
## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods
##
terminationGracePeriodSeconds: ""
## @param lifecycleHooks for the Grafana k6 Operator container(s) to automate configuration before or after startup
##
lifecycleHooks: {}
## @param extraEnvVars Array with extra environment variables to add to Grafana k6 Operator nodes
## e.g:
## extraEnvVars:
##   - name: FOO
##     value: "bar"
##
extraEnvVars: []
## @param extraEnvVarsCM Name of existing ConfigMap containing extra env vars for Grafana k6 Operator nodes
##
extraEnvVarsCM: ""
## @param extraEnvVarsSecret Name of existing Secret containing extra env vars for Grafana k6 Operator nodes
##
extraEnvVarsSecret: ""
## @param extraVolumes Optionally specify extra list of additional volumes for the Grafana k6 Operator pod(s)
##
extraVolumes: []
## @param extraVolumeMounts Optionally specify extra list of additional volumeMounts for the Grafana k6 Operator container(s)
##
extraVolumeMounts: []
## @param sidecars Add additional sidecar containers to the Grafana k6 Operator pod(s)
## e.g:
## sidecars:
##   - name: your-image-name
##     image: your-image
##     imagePullPolicy: Always
##     ports:
##       - name: portname
##         containerPort: 1234
##
sidecars: []
## @param initContainers Add additional init containers to the Grafana k6 Operator pod(s)
## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
## e.g:
## initContainers:
##  - name: your-image-name
##    image: your-image
##    imagePullPolicy: Always
##    command: ['sh', '-c', 'echo "hello world"']
##
initContainers: []

## Autoscaling configuration
## ref: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
##
autoscaling:
  vpa:
    ## @param autoscaling.vpa.enabled Enable VPA
    ##
    enabled: false
    ## @param autoscaling.vpa.annotations Annotations for VPA resource
    ##
    annotations: {}
    ## @param autoscaling.vpa.controlledResources VPA List of resources that the vertical pod autoscaler can control. Defaults to cpu and memory
    ##
    controlledResources: []
    ## @param autoscaling.vpa.maxAllowed VPA Max allowed resources for the pod
    ## cpu: 200m
    ## memory: 100Mi
    maxAllowed: {}
    ## @param autoscaling.vpa.minAllowed VPA Min allowed resources for the pod
    ## cpu: 200m
    ## memory: 100Mi
    minAllowed: {}
    updatePolicy:
      ## @param autoscaling.vpa.updatePolicy.updateMode Autoscaling update policy Specifies whether recommended updates are applied when a Pod is started and whether recommended updates are applied during the life of a Pod
      ## Possible values are "Off", "Initial", "Recreate", and "Auto".
      ##
      updateMode: Auto
  hpa:
    ## @param autoscaling.hpa.enabled Enable autoscaling for operator
    ##
    enabled: false
    ## @param autoscaling.hpa.minReplicas Minimum number of operator replicas
    ##
    minReplicas: ""
    ## @param autoscaling.hpa.maxReplicas Maximum number of operator replicas
    ##
    maxReplicas: ""
    ## @param autoscaling.hpa.targetCPU Target CPU utilization percentage
    ##
    targetCPU: ""
    ## @param autoscaling.hpa.targetMemory Target Memory utilization percentage
    ##
    targetMemory: ""
## @section Grafana k6 Operator Traffic Exposure Parameters
## Network Policies
## Ref: https://kubernetes.io/docs/concepts/services-networking/network-policies/
##
networkPolicy:
  ## @param networkPolicy.enabled Specifies whether a NetworkPolicy should be created
  ##
  enabled: true
  ## @param networkPolicy.kubeAPIServerPorts [array] List of possible endpoints to kube-apiserver (limit to your cluster settings to increase security)
  ##
  kubeAPIServerPorts: [443, 6443, 8443]
  ## @param networkPolicy.allowExternal Don't require server label for connections
  ## The Policy model to apply. When set to false, only pods with the correct
  ## server label will have network access to the ports server is listening
  ## on. When true, server will accept connections from any source
  ## (with the correct destination port).
  ##
  allowExternal: true
  ## @param networkPolicy.allowExternalEgress Allow the pod to access any range of port and all destinations.
  ##
  allowExternalEgress: true
  ## @param networkPolicy.addExternalClientAccess Allow access from pods with client label set to "true". Ignored if `compactor.networkPolicy.allowExternal` is true.
  ##
  addExternalClientAccess: true
  ## @param networkPolicy.extraIngress [array] Add extra ingress rules to the NetworkPolicy
  ## e.g:
  ## extraIngress:
  ##   - ports:
  ##       - port: 1234
  ##     from:
  ##       - podSelector:
  ##           - matchLabels:
  ##               - role: frontend
  ##       - podSelector:
  ##           - matchExpressions:
  ##               - key: role
  ##                 operator: In
  ##                 values:
  ##                   - frontend
  extraIngress: []
  ## @param networkPolicy.extraEgress [array] Add extra ingress rules to the NetworkPolicy
  ## e.g:
  ## extraEgress:
  ##   - ports:
  ##       - port: 1234
  ##     to:
  ##       - podSelector:
  ##           - matchLabels:
  ##               - role: frontend
  ##       - podSelector:
  ##           - matchExpressions:
  ##               - key: role
  ##                 operator: In
  ##                 values:
  ##                   - frontend
  ##
  extraEgress: []
  ## @param networkPolicy.ingressNSMatchLabels [object] Labels to match to allow traffic from other namespaces
  ## @param networkPolicy.ingressNSPodMatchLabels [object] Pod labels to match to allow traffic from other namespaces
  ##
  ingressNSMatchLabels: {}
  ingressNSPodMatchLabels: {}

## @section Grafana k6 Operator RBAC Parameters
##

## RBAC configuration
##
rbac:
  ## @param rbac.create Specifies whether RBAC resources should be created
  ##
  create: true
  ## @param rbac.rules Custom RBAC rules to set
  ## e.g:
  ## rules:
  ##   - apiGroups:
  ##       - ""
  ##     resources:
  ##       - pods
  ##     verbs:
  ##       - get
  ##       - list
  ##
  rules: []
## ServiceAccount configuration
##
serviceAccount:
  ## @param serviceAccount.create Specifies whether a ServiceAccount should be created
  ##
  create: true
  ## @param serviceAccount.name The name of the ServiceAccount to use.
  ## If not set and create is true, a name is generated using the common.names.fullname template
  ##
  name: ""
  ## @param serviceAccount.annotations Additional Service Account annotations (evaluated as a template)
  ##
  annotations: {}
  ## @param serviceAccount.automountServiceAccountToken Automount service account token for the server service account
  ##
  automountServiceAccountToken: false

## @section Prometheus metrics parameters
##
metrics:
  ## @param metrics.enabled Enable the export of Prometheus metrics
  ##
  enabled: false
  ## kube-auth-proxy parameters
  ##
  authProxy:
    ## @param metrics.authProxy.enabled
    ##
    enabled: false
    ## Bitnami kube-auth-proxy image
    ## ref: https://hub.docker.com/r/bitnami/kube-auth-proxy/tags/
    ## @param metrics.authProxy.image.registry [default: REGISTRY_NAME] kube-auth-proxy image registry
    ## @param metrics.authProxy.image.repository [default: REPOSITORY_NAME/kube-auth-proxy] kube-auth-proxy image repository
    ## @skip metrics.authProxy.image.tag kube-auth-proxy image tag (immutable tags are recommended)
    ## @param metrics.authProxy.image.digest kube-auth-proxy image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag
    ## @param metrics.authProxy.image.pullPolicy kube-auth-proxy image pull policy
    ## @param metrics.authProxy.image.pullSecrets Specify docker-registry secret names as an array
    ##
    image:
      registry: docker.io
      repository: bitnami/kube-rbac-proxy
      tag: 0.19.1-debian-12-r1
      digest: ""
      ## Specify a imagePullPolicy
      ## ref: https://kubernetes.io/docs/concepts/containers/images/#pre-pulled-images
      ##
      pullPolicy: IfNotPresent
      ## Optionally specify an array of imagePullSecrets (secrets must be manually created in the namespace)
      ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
      ## e.g:
      ## pullSecrets:
      ##   - myRegistryKeySecretName
      ##
      pullSecrets: []
    ## @param metrics.authProxy.command Override default container command (useful when using custom images)
    ##
    command: []
    ## @param metrics.authProxy.args Override default container args (useful when using custom images)
    ##
    args: []
    ## @param metrics.authProxy.extraArgs Add extra arguments to the default container args section
    ##
    extraArgs: []
    ## Prometheus kube-auth-proxy containers' Security Context
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
    ## @param metrics.authProxy.containerSecurityContext.enabled Enable Prometheus kube-auth-proxy containers' Security Context
    ## @param metrics.authProxy.containerSecurityContext.seLinuxOptions [object,nullable] Set SELinux options in container
    ## @param metrics.authProxy.containerSecurityContext.runAsUser Set Prometheus kube-auth-proxy containers' Security Context runAsUser
    ## @param metrics.authProxy.containerSecurityContext.runAsGroup Group ID for the Prometheus kube-auth-proxy container
    ## @param metrics.authProxy.containerSecurityContext.runAsNonRoot Set Prometheus kube-auth-proxy containers' Security Context runAsNonRoot
    ## @param metrics.authProxy.containerSecurityContext.privileged Set Prometheus kube-auth-proxy container's Security Context privileged
    ## @param metrics.authProxy.containerSecurityContext.allowPrivilegeEscalation Set Prometheus kube-auth-proxy containers' Security Context allowPrivilegeEscalation
    ## @param metrics.authProxy.containerSecurityContext.readOnlyRootFilesystem Set Prometheus kube-auth-proxy containers' Security Context readOnlyRootFilesystem
    ## @param metrics.authProxy.containerSecurityContext.capabilities.drop Set Prometheus kube-auth-proxy containers' Security Context capabilities to be dropped
    ## @param metrics.authProxy.containerSecurityContext.seccompProfile.type Set Prometheus kube-auth-proxy container's Security Context seccomp profile
    ## e.g:
    ##   containerSecurityContext:
    ##     enabled: true
    ##     capabilities:
    ##       drop: ["NET_RAW"]
    ##     readOnlyRootFilesystem: true
    ##
    containerSecurityContext:
      enabled: true
      privileged: false
      runAsNonRoot: true
      seLinuxOptions: {}
      runAsUser: 1001
      runAsGroup: 1001
      readOnlyRootFilesystem: true
      allowPrivilegeEscalation: false
      capabilities:
        drop: ["ALL"]
      seccompProfile:
        type: "RuntimeDefault"
    ## @param metrics.authProxy.containerPorts.https kube-auth-proxy container port
    ## @param metrics.authProxy.containerPorts.health kube-auth-proxy health port
    ##
    containerPorts:
      https: 8443
      health: 8081
    ## @param metrics.authProxy.extraContainerPorts Optionally specify extra list of additional container ports
    ## e.g:
    ## extraContainerPorts:
    ##   - name: myservice
    ##     containerPort: 9090
    ##
    extraContainerPorts: []
    ## @param metrics.authProxy.extraVolumeMounts Optionally specify extra list of additional volumeMounts for kube-auth-proxy
    ##
    extraVolumeMounts: []
    ## @param metrics.authProxy.customLivenessProbe Custom livenessProbe that overrides the default one
    ##
    customLivenessProbe: {}
    ## @param metrics.authProxy.customReadinessProbe Custom readinessProbe that overrides the default one
    ##
    customReadinessProbe: {}
    ## @param metrics.authProxy.customStartupProbe Custom startupProbe that overrides the default one
    ##
    customStartupProbe: {}
    ## @param metrics.authProxy.lifecycleHooks for the kube-auth-proxy containers' to automate configuration before or after startup
    ##
    lifecycleHooks: {}
    ## @param metrics.authProxy.extraEnvVars Array with extra environment variables to add to kube-auth-proxy containers
    ## e.g:
    ## extraEnvVars:
    ##   - name: FOO
    ##     value: "bar"
    ##
    extraEnvVars: []
    ## @param metrics.authProxy.extraEnvVarsCM Name of existing ConfigMap containing extra env vars for ClickHouse Operator Metrics exporter containers
    ##
    extraEnvVarsCM: ""
    ## @param metrics.authProxy.extraEnvVarsSecret Name of existing Secret containing extra env vars for ClickHouse Operator Metrics exporter containers
    ##
    extraEnvVarsSecret: ""
    ## Prometheus kube-auth-proxy resource requests and limits
    ## ref: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
    ## @param metrics.authProxy.resourcesPreset Set container resources according to one common preset (allowed values: none, nano, small, medium, large, xlarge, 2xlarge). This is ignored if metrics.authProxy.resources is set (metrics.authProxy.resources is recommended for production).
    ## More information: https://github.com/bitnami/charts/blob/main/bitnami/common/templates/_resources.tpl#L15
    ##
    resourcesPreset: "micro"
    ## @param metrics.authProxy.resources Set container requests and limits for different resources like CPU or memory (essential for production workloads)
    ## Example:
    ## resources:
    ##   requests:
    ##     cpu: 2
    ##     memory: 512Mi
    ##   limits:
    ##     cpu: 3
    ##     memory: 1024Mi
    ##
    resources: {}
    ## Configure extra options for liveness probe
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
    ## @param metrics.authProxy.livenessProbe.enabled Enable livenessProbe
    ## @param metrics.authProxy.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
    ## @param metrics.authProxy.livenessProbe.periodSeconds Period seconds for livenessProbe
    ## @param metrics.authProxy.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
    ## @param metrics.authProxy.livenessProbe.failureThreshold Failure threshold for livenessProbe
    ## @param metrics.authProxy.livenessProbe.successThreshold Success threshold for livenessProbe
    ##
    livenessProbe:
      enabled: true
      initialDelaySeconds: 5
      periodSeconds: 10
      timeoutSeconds: 30
      successThreshold: 1
      failureThreshold: 3
    ## Configure extra options for readiness probe
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
    ## @param metrics.authProxy.readinessProbe.enabled Enable readinessProbe
    ## @param metrics.authProxy.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
    ## @param metrics.authProxy.readinessProbe.periodSeconds Period seconds for readinessProbe
    ## @param metrics.authProxy.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
    ## @param metrics.authProxy.readinessProbe.failureThreshold Failure threshold for readinessProbe
    ## @param metrics.authProxy.readinessProbe.successThreshold Success threshold for readinessProbe
    ##
    readinessProbe:
      enabled: true
      initialDelaySeconds: 5
      periodSeconds: 10
      timeoutSeconds: 30
      successThreshold: 1
      failureThreshold: 3
    ## Configure extra options for startup probe
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-startup-probes/#configure-probes
    ## @param metrics.authProxy.startupProbe.enabled Enable startupProbe
    ## @param metrics.authProxy.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
    ## @param metrics.authProxy.startupProbe.periodSeconds Period seconds for startupProbe
    ## @param metrics.authProxy.startupProbe.timeoutSeconds Timeout seconds for startupProbe
    ## @param metrics.authProxy.startupProbe.failureThreshold Failure threshold for startupProbe
    ## @param metrics.authProxy.startupProbe.successThreshold Success threshold for startupProbe
    ##
    startupProbe:
      enabled: false
      initialDelaySeconds: 5
      periodSeconds: 10
      timeoutSeconds: 30
      successThreshold: 1
      failureThreshold: 3

  ## Metrics service configuration
  ##
  service:
    ## @param metrics.service.ports.metrics kube-auth-proxy service port
    ##
    ports:
      metrics: 443
    ## @param metrics.service.clusterIP Static clusterIP or None for headless services
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#choosing-your-own-ip-address
    ##
    clusterIP: ""
    ## @param metrics.service.sessionAffinity Control where client requests go, to the same pod or round-robin
    ## Values: ClientIP or None
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/
    ##
    sessionAffinity: None
    ## @param metrics.service.labels [object] labels for the metrics service
    ##
    labels: {}
    ## @param metrics.service.annotations [object] Annotations for the metrics service
    ##
    annotations: {}
  ## Prometheus Operator ServiceMonitor configuration
  ##
  serviceMonitor:
    ## @param metrics.serviceMonitor.enabled if `true`, creates a Prometheus Operator ServiceMonitor (also requires `metrics.enabled` to be `true`)
    ##
    enabled: false
    ## @param metrics.serviceMonitor.namespace Namespace in which Prometheus is running
    ##
    namespace: ""
    ## @param metrics.serviceMonitor.annotations Additional custom annotations for the ServiceMonitor
    ##
    annotations: {}
    ## @param metrics.serviceMonitor.labels Extra labels for the ServiceMonitor
    ##
    labels: {}
    ## @param metrics.serviceMonitor.jobLabel The name of the label on the target service to use as the job name in Prometheus
    ##
    jobLabel: ""
    ## @param metrics.serviceMonitor.honorLabels honorLabels chooses the metric's labels on collisions with target labels
    ##
    honorLabels: false
    ## @param metrics.serviceMonitor.interval Interval at which metrics should be scraped.
    ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint
    ## e.g:
    ## interval: 10s
    ##
    interval: ""
    ## @param metrics.serviceMonitor.scrapeTimeout Timeout after which the scrape is ended
    ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint
    ## e.g:
    ## scrapeTimeout: 10s
    ##
    scrapeTimeout: ""
    ## @param metrics.serviceMonitor.metricRelabelings Specify additional relabeling of metrics
    ##
    metricRelabelings: []
    ## @param metrics.serviceMonitor.relabelings Specify general relabeling
    ##
    relabelings: []
    ## @param metrics.serviceMonitor.selector Prometheus instance selector labels
    ## ref: https://github.com/bitnami/charts/tree/main/bitnami/prometheus-operator#prometheus-configuration
    ## selector:
    ##   prometheus: my-prometheus
    ##
    selector: {}
