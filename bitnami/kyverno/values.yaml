# Copyright Broadcom, Inc. All Rights Reserved.
# SPDX-License-Identifier: APACHE-2.0

## @section Global parameters
## Global Docker image parameters
## Please, note that this will override the image parameters, including dependencies, configured to use the global value
## Current available global Docker image parameters: imageRegistry, imagePullSecrets and storageClass
##

## @param global.imageRegistry Global Docker image registry
## @param global.imagePullSecrets Global Docker registry secret names as an array
##
global:
  imageRegistry: ""
  ## E.g.
  ## imagePullSecrets:
  ##   - myRegistryKeySecretName
  ##
  imagePullSecrets: []
  ## Security parameters
  ##
  security:
    ## @param global.security.allowInsecureImages Allows skipping image verification
    allowInsecureImages: false
  ## Compatibility adaptations for Kubernetes platforms
  ##
  compatibility:
    ## Compatibility adaptations for Openshift
    ##
    openshift:
      ## @param global.compatibility.openshift.adaptSecurityContext Adapt the securityContext sections of the deployment to make them compatible with Openshift restricted-v2 SCC: remove runAsUser, runAsGroup and fsGroup and let the platform use their allowed default IDs. Possible values: auto (apply if the detected running cluster is Openshift), force (perform the adaptation always), disabled (do not perform adaptation)
      ##
      adaptSecurityContext: auto
## @section Common parameters
##

## @param kubeVersion Override Kubernetes version reported by .Capabilities
##
kubeVersion: ""
## @param apiVersions Override Kubernetes API versions reported by .Capabilities
##
apiVersions: []
## @param nameOverride String to partially override common.names.fullname
##
nameOverride: ""
## @param fullnameOverride String to fully override common.names.fullname
##
fullnameOverride: ""
## @param commonLabels Labels to add to all deployed objects
##
commonLabels: {}
## @param commonAnnotations Annotations to add to all deployed objects
##
commonAnnotations: {}
## @param clusterDomain Kubernetes cluster domain name
##
clusterDomain: cluster.local
## @param extraDeploy Array of extra objects to deploy with the release
##
extraDeploy: []
## @section Common Kyverno Parameters
##
kyverno:
  ## @param kyverno.overrideConfiguration [object] kyverno components configuration override
  ## e.g:
  ## overrideConfiguration:
  ##   auth_enabled: true
  ##
  overrideConfiguration: {}
  ## @param kyverno.existingConfigmap Name of a ConfigMap with the kyverno configuration
  ##
  existingConfigmap: ""
  ## @param kyverno.tls.existingCASecret Existing secret that contains TLS certificates
  ## @param kyverno.tls.CACert TLS CA certificate.
  ## @param kyverno.tls.CAKey TLS CA key.
  ##
  tls:
    existingCASecret: ""
    CACert: ""
    CAKey: ""
    ## @param kyverno.tls.autoGenerated.enabled Enable automatic generation of certificates for TLS
    ## @param kyverno.tls.autoGenerated.engine Mechanism to generate the certificates (allowed values: helm, cert-manager)
    autoGenerated:
      enabled: true
      engine: helm
      ## @param kyverno.tls.autoGenerated.certManager.existingIssuer The name of an existing Issuer to use for generating the certificates (only for `cert-manager` engine)
      ## @param kyverno.tls.autoGenerated.certManager.existingIssuerKind Existing Issuer kind, defaults to Issuer (only for `cert-manager` engine)
      ## @param kyverno.tls.autoGenerated.certManager.keyAlgorithm Key algorithm for the certificates (only for `cert-manager` engine)
      ## @param kyverno.tls.autoGenerated.certManager.keySize Key size for the certificates (only for `cert-manager` engine)
      ## @param kyverno.tls.autoGenerated.certManager.duration Duration for the certificates (only for `cert-manager` engine)
      ## @param kyverno.tls.autoGenerated.certManager.renewBefore Renewal period for the certificates (only for `cert-manager` engine)
      certManager:
        existingIssuer: ""
        existingIssuerKind: ""
        keySize: 2048
        keyAlgorithm: RSA
        duration: 2160h
        renewBefore: 360h
  ## @param kyverno.tufMountPath Set TUF mount path
  ##
  tufMountPath: "/.sigstore"
  ## Features configuration
  ##
  features:
    ## @param kyverno.features.admissionReports.enabled Enable admission reports
    ##
    admissionReports:
      enabled: true
    ## @param kyverno.features.aggregateReports.enabled Enable aggregate reports
    ##
    aggregateReports:
      enabled: true
    ## @param kyverno.features.policyReports.enabled Enable policy reports
    ##
    policyReports:
      enabled: true
    ## @param kyverno.features.validatingAdmissionPolicyReports.enabled Enable validating admission policy reports
    ##
    validatingAdmissionPolicyReports:
      enabled: true
    ## @param kyverno.features.mutatingAdmissionPolicyReports.enabled Enable mutating admission policy reports
    ##
    mutatingAdmissionPolicyReports:
      enabled: false
    ## @param kyverno.features.reporting.validate Enable the validate reporting feature
    ## @param kyverno.features.reporting.mutate Enable the mutate reporting feature
    ## @param kyverno.features.reporting.mutateExisting Enable the mutate existing reporting feature
    ## @param kyverno.features.reporting.imageVerify Enable the image verification reporting feature
    ## @param kyverno.features.reporting.generate Enable the generation reporting feature
    ##
    reporting:
      validate: true
      mutate: true
      mutateExisting: true
      imageVerify: true
      generate: true
    ## @param kyverno.features.autoUpdateWebhooks.enabled Enable the auto update webhooks feature
    ##
    autoUpdateWebhooks:
      enabled: true
    ## @param kyverno.features.autoDeleteWebhooks.enabled Enable the auto delete webhooks feature
    ##
    autoDeleteWebhooks:
      enabled: true
    ## @param kyverno.features.backgroundScan.enabled Enable the background scan feature
    ## @param kyverno.features.backgroundScan.backgroundScanWorkers Set number of background scan workers
    ## @param kyverno.features.backgroundScan.backgroundScanInterval Set the background scan interval
    ## @param kyverno.features.backgroundScan.skipResourceFilters Skip resource filter in background scanning
    ##
    backgroundScan:
      enabled: true
      backgroundScanWorkers: 2
      backgroundScanInterval: 1h
      skipResourceFilters: true
    ## @param kyverno.features.configMapCaching.enabled Enable the ConfigMap caching feature
    ##
    configMapCaching:
      enabled: true
    ## @param kyverno.features.deferredLoading.enabled Enable the deferred loading feature
    ##
    deferredLoading:
      enabled: true
    ## @param kyverno.features.dumpPayload.enabled Enable the dump payload feature
    ##
    dumpPayload:
      enabled: false
    ## @param kyverno.features.forceFailurePolicyIgnore.enabled Enable the force failure policy ignore feature
    ##
    forceFailurePolicyIgnore:
      enabled: false
    ## @param kyverno.features.generateValidatingAdmissionPolicy.enabled Enable the generate validating admission policy feature
    ##
    generateValidatingAdmissionPolicy:
      enabled: true
    ## @param kyverno.features.generateMutatingAdmissionPolicy.enabled Enable the generate mutating admission policy feature
    ##
    generateMutatingAdmissionPolicy:
      enabled: false
    ## @param kyverno.features.dumpPatches.enabled Enable the dump patches feature
    ##
    dumpPatches:
      enabled: false
    ## @param kyverno.features.globalContext.maxApiCallResponseLength Set Maximum allowed response size from API Calls
    ##
    globalContext:
      maxApiCallResponseLength: 2000000
    ## @param kyverno.features.logging.format Set logging format
    ## @param kyverno.features.logging.verbosity Set verbosity
    ##
    logging:
      format: text
      verbosity: 2
    ## @param kyverno.features.omitEvents.eventTypes [array] Set omit event types
    ##
    omitEvents:
      eventTypes:
        - PolicyApplied
        - PolicySkipped
    ## @param kyverno.features.policyExceptions.enabled Enable the policy exceptions feature
    ## @param kyverno.features.policyExceptions.namespace Restrict policy exceptions to a single namespace
    ##
    policyExceptions:
      enabled: false
      namespace: ""
    ## @param kyverno.features.protectManagedResources.enabled Enable the protect managed resources
    ##
    protectManagedResources:
      enabled: false
    ## @param kyverno.features.registryClient.allowInsecure Allow insecure registries
    ## @param kyverno.features.registryClient.credentialHelpers [array] Set allowed credential helpers
    ##
    registryClient:
      allowInsecure: false
      credentialHelpers:
        - default
        - google
        - amazon
        - azure
        - github
    ## @param kyverno.features.ttlController.reconciliationInterval Set TTL reconciliation interval
    ##
    ttlController:
      reconciliationInterval: 1m
    ## @param kyverno.features.tuf.enabled Enable the TUF feature
    ## @param kyverno.features.tuf.root Set path to TUF root
    ## @param kyverno.features.tuf.rootRaw Set raw TUF root
    ## @param kyverno.features.tuf.mirror Set TUF mirror
    ##
    tuf:
      # -- Enables the feature
      enabled: false
      # -- (string) Path to Tuf root
      root: ~
      # -- (string) Raw Tuf root
      rootRaw: ~
      # -- (string) Tuf mirror
      mirror: ~

## @section Admission Controller Deployment Parameters
##
admissionController:
  ## Bitnami Kyverno image
  ## ref: https://hub.docker.com/r/bitnamiprem/kyverno/tags/
  ## @param admissionController.image.registry [default: REGISTRY_NAME] Kyverno image registry
  ## @param admissionController.image.repository [default: REPOSITORY_NAME/kyverno] Kyverno image repository
  ## @skip admissionController.image.tag Kyverno image tag (immutable tags are recommended)
  ## @param admissionController.image.digest Kyverno image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag
  ## @param admissionController.image.pullPolicy Kyverno image pull policy
  ## @param admissionController.image.pullSecrets Kyverno image pull secrets
  ##
  image:
    registry: registry.app-catalog.vmware.com
    repository: eam/prd/containers/verified/common/minideb-bookworm/kyverno
    tag: 1.15.1-debian-12-r1
    digest: ""
    ## Specify a imagePullPolicy
    ## ref: https://kubernetes.io/docs/concepts/containers/images/#pre-pulled-images
    ##
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
  ## @param admissionController.extraEnvVars Array with extra environment variables to add to Admission Controller nodes
  ## e.g:
  ## extraEnvVars:
  ##   - name: FOO
  ##     value: "bar"
  ##
  extraEnvVars: []
  ## @param admissionController.extraEnvVarsCM Name of existing ConfigMap containing extra env vars for Admission Controller nodes
  ##
  extraEnvVarsCM: ""
  ## @param admissionController.extraEnvVarsSecret Name of existing Secret containing extra env vars for Admission Controller nodes
  ##
  extraEnvVarsSecret: ""
  ## @param admissionController.command Override default container command (useful when using custom images)
  ##
  command: []
  ## @param admissionController.args Override default container args (useful when using custom images)
  ##
  args: []
  ## @param admissionController.extraArgs Additional container args (will be concatenated to args)
  ##
  extraArgs: []
  ## @param admissionController.replicaCount Number of Admission Controller replicas to deploy
  ##
  replicaCount: 1
  ## @param admissionController.containerPorts.https HTTPS port
  ## @param admissionController.containerPorts.metrics HTTPS port
  containerPorts:
    https: 9443
    metrics: 8081
  ## Configure extra options for Admission Controller containers' liveness, readiness and startup probes
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes
  ## @param admissionController.livenessProbe.enabled Enable livenessProbe on Admission Controller nodes
  ## @param admissionController.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
  ## @param admissionController.livenessProbe.periodSeconds Period seconds for livenessProbe
  ## @param admissionController.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
  ## @param admissionController.livenessProbe.failureThreshold Failure threshold for livenessProbe
  ## @param admissionController.livenessProbe.successThreshold Success threshold for livenessProbe
  ##
  livenessProbe:
    enabled: true
    failureThreshold: 3
    initialDelaySeconds: 10
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 1
  ## @param admissionController.readinessProbe.enabled Enable readinessProbe on Admission Controller nodes
  ## @param admissionController.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
  ## @param admissionController.readinessProbe.periodSeconds Period seconds for readinessProbe
  ## @param admissionController.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
  ## @param admissionController.readinessProbe.failureThreshold Failure threshold for readinessProbe
  ## @param admissionController.readinessProbe.successThreshold Success threshold for readinessProbe
  ##
  readinessProbe:
    enabled: true
    failureThreshold: 3
    initialDelaySeconds: 10
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 1
  ## @param admissionController.startupProbe.enabled Enable startupProbe on Admission Controller containers
  ## @param admissionController.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
  ## @param admissionController.startupProbe.periodSeconds Period seconds for startupProbe
  ## @param admissionController.startupProbe.timeoutSeconds Timeout seconds for startupProbe
  ## @param admissionController.startupProbe.failureThreshold Failure threshold for startupProbe
  ## @param admissionController.startupProbe.successThreshold Success threshold for startupProbe
  ##
  startupProbe:
    enabled: false
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 1
    failureThreshold: 15
    successThreshold: 1
  ## @param admissionController.customLivenessProbe Custom livenessProbe that overrides the default one
  ##
  customLivenessProbe: {}
  ## @param admissionController.customReadinessProbe Custom readinessProbe that overrides the default one
  ##
  customReadinessProbe: {}
  ## @param admissionController.customStartupProbe Custom startupProbe that overrides the default one
  ##
  customStartupProbe: {}
  ## Admission Controller resource requests and limits
  ## ref: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
  ## @param admissionController.resourcesPreset Set container resources according to one common preset (allowed values: none, nano, micro, small, medium, large, xlarge, 2xlarge). This is ignored if admissionController.resources is set (admissionController.resources is recommended for production).
  ## More information: https://github.com/bitnami/charts/blob/main/bitnami/common/templates/_resources.tpl#L15
  ##
  resourcesPreset: "nano"
  ## @param admissionController.resources Set container requests and limits for different resources like CPU or memory (essential for production workloads)
  ## Example:
  ## resources:
  ##   requests:
  ##     cpu: 2
  ##     memory: 512Mi
  ##   limits:
  ##     cpu: 3
  ##     memory: 1024Mi
  ##
  resources: {}
  ## Configure Pods Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param admissionController.podSecurityContext.enabled Enabled Admission Controller pods' Security Context
  ## @param admissionController.podSecurityContext.fsGroupChangePolicy Set filesystem group change policy
  ## @param admissionController.podSecurityContext.sysctls Set kernel settings using the sysctl interface
  ## @param admissionController.podSecurityContext.supplementalGroups Set filesystem extra groups
  ## @param admissionController.podSecurityContext.fsGroup Set Admission Controller pod's Security Context fsGroup
  ##
  podSecurityContext:
    enabled: true
    fsGroupChangePolicy: Always
    sysctls: []
    supplementalGroups: []
    fsGroup: 1001
  ## Configure Container Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param admissionController.containerSecurityContext.enabled Enabled containers' Security Context
  ## @param admissionController.containerSecurityContext.seLinuxOptions [object,nullable] Set SELinux options in container
  ## @param admissionController.containerSecurityContext.runAsUser Set containers' Security Context runAsUser
  ## @param admissionController.containerSecurityContext.runAsGroup Set containers' Security Context runAsGroup
  ## @param admissionController.containerSecurityContext.runAsNonRoot Set container's Security Context runAsNonRoot
  ## @param admissionController.containerSecurityContext.privileged Set container's Security Context privileged
  ## @param admissionController.containerSecurityContext.readOnlyRootFilesystem Set container's Security Context readOnlyRootFilesystem
  ## @param admissionController.containerSecurityContext.allowPrivilegeEscalation Set container's Security Context allowPrivilegeEscalation
  ## @param admissionController.containerSecurityContext.capabilities.drop List of capabilities to be dropped
  ## @param admissionController.containerSecurityContext.seccompProfile.type Set container's Security Context seccomp profile
  ##
  containerSecurityContext:
    enabled: true
    seLinuxOptions: {}
    runAsUser: 1001
    runAsGroup: 1001
    runAsNonRoot: true
    privileged: false
    readOnlyRootFilesystem: true
    allowPrivilegeEscalation: false
    capabilities:
      drop: ["ALL"]
    seccompProfile:
      type: "RuntimeDefault"
  ## @param admissionController.lifecycleHooks for the Admission Controller container(s) to automate configuration before or after startup
  ##
  lifecycleHooks: {}
  ## @param admissionController.automountServiceAccountToken Mount Service Account token in pod
  ##
  automountServiceAccountToken: true
  ## @param admissionController.hostAliases Admission Controller pods host aliases
  ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
  ##
  hostAliases: []
  ## @param admissionController.podLabels Extra labels for Admission Controller pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  ##
  podLabels: {}
  ## @param admissionController.podAnnotations Annotations for Admission Controller pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  podAnnotations: {}
  ## @param admissionController.podAffinityPreset Pod affinity preset. Ignored if `admissionController.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAffinityPreset: ""
  ## @param admissionController.podAntiAffinityPreset Pod anti-affinity preset. Ignored if `admissionController.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAntiAffinityPreset: soft
  ## Node admissionController.affinity preset
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
  ##
  nodeAffinityPreset:
    ## @param admissionController.nodeAffinityPreset.type Node affinity preset type. Ignored if `admissionController.affinity` is set. Allowed values: `soft` or `hard`
    ##
    type: ""
    ## @param admissionController.nodeAffinityPreset.key Node label key to match. Ignored if `admissionController.affinity` is set
    ##
    key: ""
    ## @param admissionController.nodeAffinityPreset.values Node label values to match. Ignored if `admissionController.affinity` is set
    ## E.g.
    ## values:
    ##   - e2e-az1
    ##   - e2e-az2
    ##
    values: []
  ## @param admissionController.affinity Affinity for Admission Controller pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ## NOTE: `admissionController.podAffinityPreset`, `admissionController.podAntiAffinityPreset`, and `admissionController.nodeAffinityPreset` will be ignored when it's set
  ##
  affinity: {}
  ## @param admissionController.nodeSelector Node labels for Admission Controller pods assignment
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
  ##
  nodeSelector: {}
  ## @param admissionController.tolerations Tolerations for Admission Controller pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []
  ## @param admissionController.topologySpreadConstraints Topology Spread Constraints for pod assignment spread across your cluster among failure-domains
  ## Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/#spread-constraints-for-pods
  ##
  topologySpreadConstraints: []
  ## @param admissionController.priorityClassName Admission Controller pods' priorityClassName
  ##
  priorityClassName: ""
  ## @param admissionController.schedulerName Kubernetes pod scheduler registry
  ## https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  schedulerName: ""
  ## @param admissionController.updateStrategy.type Admission Controller statefulset strategy type
  ## @param admissionController.updateStrategy.rollingUpdate [object,nullable] Admission Controller statefulset rolling update configuration parameters
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies
  ##
  updateStrategy:
    type: RollingUpdate
    rollingUpdate: null
  ## @param admissionController.extraVolumes Optionally specify extra list of additional volumes for the Admission Controller pod(s)
  ##
  extraVolumes: []
  ## @param admissionController.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the Admission Controller container(s)
  ##
  extraVolumeMounts: []
  ## @param admissionController.sidecars Add additional sidecar containers to the Admission Controller pod(s)
  ## e.g:
  ## sidecars:
  ##   - name: your-image-name
  ##     image: your-image
  ##     imagePullPolicy: Always
  ##     ports:
  ##       - name: portname
  ##         containerPort: 1234
  ##
  sidecars: []
  ## @param admissionController.initContainers Add additional init containers to the Admission Controller pod(s)
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
  ## e.g:
  ## initContainers:
  ##  - name: your-image-name
  ##    image: your-image
  ##    imagePullPolicy: Always
  ##    command: ['sh', '-c', 'echo "hello world"']
  ##
  initContainers: []
  ## @param admissionController.enableServiceLinks Whether information about services should be injected into pod's environment variable
  ## The environment variables injected by service links are not used, but can lead to slow boot times or slow running of the scripts when there are many services in the current namespace.
  ## If you experience slow pod startups or slow running of the scripts you probably want to set this to `false`.
  ##
  enableServiceLinks: true
  ## @param admissionController.featuresOverride Set features override
  ##
  featuresOverride: {}
  ## @param admissionController.tls.existingSecret Existing secret that contains TLS certificates
  ## @param admissionController.tls.cert TLS certificate.
  ## @param admissionController.tls.key TLS key.
  ##
  tls:
    existingSecret: ""
    cert: ""
    key: ""
  ## Pod Disruption Budget configuration
  ## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb
  ## @param admissionController.pdb.create Enable/disable a Pod Disruption Budget creation
  ## @param admissionController.pdb.minAvailable Minimum number/percentage of pods that should remain scheduled
  ## @param admissionController.pdb.maxUnavailable Maximum number/percentage of pods that may be made unavailable. Defaults to `1` if both `admissionController.pdb.minAvailable` and `admissionController.pdb.maxUnavailable` are empty.
  ##
  pdb:
    create: true
    minAvailable: ""
    maxUnavailable: ""
  ## Autoscaling configuration
  ## ref: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
  ##
  autoscaling:
    vpa:
      ## @param admissionController.autoscaling.vpa.enabled Enable VPA
      ##
      enabled: false
      ## @param admissionController.autoscaling.vpa.annotations Annotations for VPA resource
      ##
      annotations: {}
      ## @param admissionController.autoscaling.vpa.controlledResources VPA List of resources that the vertical pod autoscaler can control. Defaults to cpu and memory
      ##
      controlledResources: []
      ## @param admissionController.autoscaling.vpa.maxAllowed VPA Max allowed resources for the pod
      ## cpu: 200m
      ## memory: 100Mi
      maxAllowed: {}
      ## @param admissionController.autoscaling.vpa.minAllowed VPA Min allowed resources for the pod
      ## cpu: 200m
      ## memory: 100Mi
      minAllowed: {}
      updatePolicy:
        ## @param admissionController.autoscaling.vpa.updatePolicy.updateMode Autoscaling update policy Specifies whether recommended updates are applied when a Pod is started and whether recommended updates are applied during the life of a Pod
        ## Possible values are "Off", "Initial", "Recreate", and "Auto".
        ##
        updateMode: Auto
    hpa:
      ## @param admissionController.autoscaling.hpa.enabled Enable HPA
      ##
      enabled: false
      ## @param admissionController.autoscaling.hpa.annotations Annotations for HPA resource
      ##
      annotations: {}
      ## @param admissionController.autoscaling.hpa.minReplicas Minimum number of replicas
      ##
      minReplicas: ""
      ## @param admissionController.autoscaling.hpa.maxReplicas Maximum number of replicas
      ##
      maxReplicas: ""
      ## @param admissionController.autoscaling.hpa.targetCPU Target CPU utilization percentage
      ##
      targetCPU: ""
      ## @param admissionController.autoscaling.hpa.targetMemory Target Memory utilization percentage
      ##
      targetMemory: ""
  ## @section Admission Controller Traffic Exposure Parameters
  ##

  ## Admission Controller service parameters
  ##
  service:
    ## @param admissionController.service.type Admission Controller service type
    ##
    type: ClusterIP
    ## @param admissionController.service.ports.https Admission Controller HTTPS service port
    ##
    ports:
      https: 443
    ## Node ports to expose
    ## NOTE: choose port between <30000-32767>
    ## @param admissionController.service.nodePorts.https Node port for HTTPS
    ##
    nodePorts:
      https: ""
    ## @param admissionController.service.sessionAffinityConfig Additional settings for the sessionAffinity
    ## sessionAffinityConfig:
    ##   clientIP:
    ##     timeoutSeconds: 300
    ##
    sessionAffinityConfig: {}
    ## @param admissionController.service.sessionAffinity Control where client requests go, to the same pod or round-robin
    ## Values: ClientIP or None
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/
    ##
    sessionAffinity: None
    ## @param admissionController.service.clusterIP Admission Controller service Cluster IP
    ## e.g.:
    ## clusterIP: None
    ##
    clusterIP: ""
    ## @param admissionController.service.loadBalancerIP Admission Controller service Load Balancer IP
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-loadbalancer
    ##
    loadBalancerIP: ""
    ## @param admissionController.service.loadBalancerSourceRanges Admission Controller service Load Balancer sources
    ## ref: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
    ## e.g:
    ## loadBalancerSourceRanges:
    ##   - 10.10.10.0/24
    ##
    loadBalancerSourceRanges: []
    ## @param admissionController.service.externalTrafficPolicy Admission Controller service external traffic policy
    ## ref https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
    ##
    externalTrafficPolicy: Cluster
    ## @param admissionController.service.annotations Additional custom annotations for Admission Controller service
    ##
    annotations: {}
    ## @param admissionController.service.extraPorts Extra ports to expose in the Admission Controller service
    ##
    extraPorts: []
  ## Network Policies
  ## Ref: https://kubernetes.io/docs/concepts/services-networking/network-policies/
  ##
  networkPolicy:
    ## @param admissionController.networkPolicy.enabled Specifies whether a NetworkPolicy should be created
    ##
    enabled: true
    ## @param admissionController.networkPolicy.allowExternal Don't require server label for connections
    ## The Policy model to apply. When set to false, only pods with the correct
    ## server label will have network access to the ports server is listening
    ## on. When true, server will accept connections from any source
    ## (with the correct destination port).
    ##
    allowExternal: true
    ## @param admissionController.networkPolicy.allowExternalEgress Allow the pod to access any range of port and all destinations.
    ##
    allowExternalEgress: true
    ## @param admissionController.networkPolicy.addExternalClientAccess Allow access from pods with client label set to "true". Ignored if `admissionController.networkPolicy.allowExternal` is true.
    ##
    addExternalClientAccess: true
    ## @param admissionController.networkPolicy.extraIngress [array] Add extra ingress rules to the NetworkPolicy
    ## e.g:
    ## extraIngress:
    ##   - ports:
    ##       - port: 1234
    ##     from:
    ##       - podSelector:
    ##           - matchLabels:
    ##               - role: frontend
    ##       - podSelector:
    ##           - matchExpressions:
    ##               - key: role
    ##                 operator: In
    ##                 values:
    ##                   - frontend
    extraIngress: []
    ## @param admissionController.networkPolicy.extraEgress [array] Add extra ingress rules to the NetworkPolicy
    ## e.g:
    ## extraEgress:
    ##   - ports:
    ##       - port: 1234
    ##     to:
    ##       - podSelector:
    ##           - matchLabels:
    ##               - role: frontend
    ##       - podSelector:
    ##           - matchExpressions:
    ##               - key: role
    ##                 operator: In
    ##                 values:
    ##                   - frontend
    ##
    extraEgress: []
    ## @param admissionController.networkPolicy.ingressPodMatchLabels [object] Labels to match to allow traffic from other pods. Ignored if `admissionController.networkPolicy.allowExternal` is true.
    ## e.g:
    ## ingressPodMatchLabels:
    ##   my-client: "true"
    #
    ingressPodMatchLabels: {}
    ## @param admissionController.networkPolicy.ingressNSMatchLabels [object] Labels to match to allow traffic from other namespaces. Ignored if `admissionController.networkPolicy.allowExternal` is true.
    ## @param admissionController.networkPolicy.ingressNSPodMatchLabels [object] Pod labels to match to allow traffic from other namespaces. Ignored if `admissionController.networkPolicy.allowExternal` is true.
    ##
    ingressNSMatchLabels: {}
    ingressNSPodMatchLabels: {}
  ## @section Admission Controller RBAC Parameters
  ## ServiceAccounts configuration
  ##
  serviceAccount:
    ## service account
    ##
    ## @param admissionController.serviceAccount.create Specifies whether a ServiceAccount should be created
    ##
    create: true
    ## @param admissionController.serviceAccount.name The name of the ServiceAccount to use.
    ## If not set and create is true, a name is generated using the common.names.fullname template
    ##
    name: ""
    ## @param admissionController.serviceAccount.annotations Additional Service Account annotations (evaluated as a template)
    ##
    annotations: {}
    ## @param admissionController.serviceAccount.automountServiceAccountToken Automount service account token for the server service account
    ##
    automountServiceAccountToken: false
  ## RBAC configuration
  ##
  rbac:
    ## @param admissionController.rbac.create Specifies whether RBAC resources should be created
    ##
    create: true
    ## @param admissionController.rbac.rules Custom RBAC rules to set
    ## e.g:
    ## rules:
    ##   - apiGroups:
    ##       - ""
    ##     resources:
    ##       - pods
    ##     verbs:
    ##       - get
    ##       - list
    ##
    rules: []
    ## @param admissionController.rbac.createViewRoleBinding Create rolebinding for the system view role
    ##
    createViewRoleBinding: true
    ## @param admissionController.rbac.viewRoleName Name of the system view role name
    ##
    viewRoleName: view

## @section Background Controller Deployment Parameters
##
backgroundController:
  ## @param backgroundController.enabled Enable Background Controller
  ##
  enabled: true
  ## Bitnami Kyverno image
  ## ref: https://hub.docker.com/r/bitnamiprem/kyverno-background-controller/tags/
  ## @param backgroundController.image.registry [default: REGISTRY_NAME] Kyverno image registry
  ## @param backgroundController.image.repository [default: REPOSITORY_NAME/kyverno] Kyverno image repository
  ## @skip backgroundController.image.tag Kyverno image tag (immutable tags are recommended)
  ## @param backgroundController.image.digest Kyverno image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag
  ## @param backgroundController.image.pullPolicy Kyverno image pull policy
  ## @param backgroundController.image.pullSecrets Kyverno image pull secrets
  ##
  image:
    registry: registry.app-catalog.vmware.com
    repository: eam/prd/containers/verified/common/minideb-bookworm/kyverno-background-controller
    tag: 1.15.1-debian-12-r1
    digest: ""
    ## Specify a imagePullPolicy
    ## ref: https://kubernetes.io/docs/concepts/containers/images/#pre-pulled-images
    ##
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
  ## @param backgroundController.extraEnvVars Array with extra environment variables to add to Background controller nodes
  ## e.g:
  ## extraEnvVars:
  ##   - name: FOO
  ##     value: "bar"
  ##
  extraEnvVars: []
  ## @param backgroundController.extraEnvVarsCM Name of existing ConfigMap containing extra env vars for Background controller nodes
  ##
  extraEnvVarsCM: ""
  ## @param backgroundController.extraEnvVarsSecret Name of existing Secret containing extra env vars for Background controller nodes
  ##
  extraEnvVarsSecret: ""
  ## @param backgroundController.command Override default container command (useful when using custom images)
  ##
  command: []
  ## @param backgroundController.args Override default container args (useful when using custom images)
  ##
  args: []
  ## @param backgroundController.extraArgs Additional container args (will be concatenated to args)
  ##
  extraArgs: []
  ## @param backgroundController.replicaCount Number of Background controller replicas to deploy
  ##
  replicaCount: 1
  ## @param backgroundController.containerPorts.metrics metrics port
  containerPorts:
    metrics: 8081
  ## Configure extra options for Background controller containers' liveness, readiness and startup probes
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes
  ## @param backgroundController.livenessProbe.enabled Enable livenessProbe on Background controller nodes
  ## @param backgroundController.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
  ## @param backgroundController.livenessProbe.periodSeconds Period seconds for livenessProbe
  ## @param backgroundController.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
  ## @param backgroundController.livenessProbe.failureThreshold Failure threshold for livenessProbe
  ## @param backgroundController.livenessProbe.successThreshold Success threshold for livenessProbe
  ##
  livenessProbe:
    enabled: true
    failureThreshold: 3
    initialDelaySeconds: 10
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 1
  ## @param backgroundController.readinessProbe.enabled Enable readinessProbe on Background controller nodes
  ## @param backgroundController.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
  ## @param backgroundController.readinessProbe.periodSeconds Period seconds for readinessProbe
  ## @param backgroundController.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
  ## @param backgroundController.readinessProbe.failureThreshold Failure threshold for readinessProbe
  ## @param backgroundController.readinessProbe.successThreshold Success threshold for readinessProbe
  ##
  readinessProbe:
    enabled: true
    failureThreshold: 3
    initialDelaySeconds: 10
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 1
  ## @param backgroundController.startupProbe.enabled Enable startupProbe on Background controller containers
  ## @param backgroundController.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
  ## @param backgroundController.startupProbe.periodSeconds Period seconds for startupProbe
  ## @param backgroundController.startupProbe.timeoutSeconds Timeout seconds for startupProbe
  ## @param backgroundController.startupProbe.failureThreshold Failure threshold for startupProbe
  ## @param backgroundController.startupProbe.successThreshold Success threshold for startupProbe
  ##
  startupProbe:
    enabled: false
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 1
    failureThreshold: 15
    successThreshold: 1
  ## @param backgroundController.customLivenessProbe Custom livenessProbe that overrides the default one
  ##
  customLivenessProbe: {}
  ## @param backgroundController.customReadinessProbe Custom readinessProbe that overrides the default one
  ##
  customReadinessProbe: {}
  ## @param backgroundController.customStartupProbe Custom startupProbe that overrides the default one
  ##
  customStartupProbe: {}
  ## Background controller resource requests and limits
  ## ref: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
  ## @param backgroundController.resourcesPreset Set container resources according to one common preset (allowed values: none, nano, micro, small, medium, large, xlarge, 2xlarge). This is ignored if backgroundController.resources is set (backgroundController.resources is recommended for production).
  ## More information: https://github.com/bitnami/charts/blob/main/bitnami/common/templates/_resources.tpl#L15
  ##
  resourcesPreset: "nano"
  ## @param backgroundController.resources Set container requests and limits for different resources like CPU or memory (essential for production workloads)
  ## Example:
  ## resources:
  ##   requests:
  ##     cpu: 2
  ##     memory: 512Mi
  ##   limits:
  ##     cpu: 3
  ##     memory: 1024Mi
  ##
  resources: {}
  ## Configure Pods Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param backgroundController.podSecurityContext.enabled Enabled Background controller pods' Security Context
  ## @param backgroundController.podSecurityContext.fsGroupChangePolicy Set filesystem group change policy
  ## @param backgroundController.podSecurityContext.sysctls Set kernel settings using the sysctl interface
  ## @param backgroundController.podSecurityContext.supplementalGroups Set filesystem extra groups
  ## @param backgroundController.podSecurityContext.fsGroup Set Background controller pod's Security Context fsGroup
  ##
  podSecurityContext:
    enabled: true
    fsGroupChangePolicy: Always
    sysctls: []
    supplementalGroups: []
    fsGroup: 1001
  ## Configure Container Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param backgroundController.containerSecurityContext.enabled Enabled containers' Security Context
  ## @param backgroundController.containerSecurityContext.seLinuxOptions [object,nullable] Set SELinux options in container
  ## @param backgroundController.containerSecurityContext.runAsUser Set containers' Security Context runAsUser
  ## @param backgroundController.containerSecurityContext.runAsGroup Set containers' Security Context runAsGroup
  ## @param backgroundController.containerSecurityContext.runAsNonRoot Set container's Security Context runAsNonRoot
  ## @param backgroundController.containerSecurityContext.privileged Set container's Security Context privileged
  ## @param backgroundController.containerSecurityContext.readOnlyRootFilesystem Set container's Security Context readOnlyRootFilesystem
  ## @param backgroundController.containerSecurityContext.allowPrivilegeEscalation Set container's Security Context allowPrivilegeEscalation
  ## @param backgroundController.containerSecurityContext.capabilities.drop List of capabilities to be dropped
  ## @param backgroundController.containerSecurityContext.seccompProfile.type Set container's Security Context seccomp profile
  ##
  containerSecurityContext:
    enabled: true
    seLinuxOptions: {}
    runAsUser: 1001
    runAsGroup: 1001
    runAsNonRoot: true
    privileged: false
    readOnlyRootFilesystem: true
    allowPrivilegeEscalation: false
    capabilities:
      drop: ["ALL"]
    seccompProfile:
      type: "RuntimeDefault"
  ## @param backgroundController.lifecycleHooks for the Background controller container(s) to automate configuration before or after startup
  ##
  lifecycleHooks: {}
  ## @param backgroundController.automountServiceAccountToken Mount Service Account token in pod
  ##
  automountServiceAccountToken: true
  ## @param backgroundController.hostAliases Background controller pods host aliases
  ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
  ##
  hostAliases: []
  ## @param backgroundController.podLabels Extra labels for Background controller pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  ##
  podLabels: {}
  ## @param backgroundController.podAnnotations Annotations for Background controller pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  podAnnotations: {}
  ## @param backgroundController.podAffinityPreset Pod affinity preset. Ignored if `backgroundController.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAffinityPreset: ""
  ## @param backgroundController.podAntiAffinityPreset Pod anti-affinity preset. Ignored if `backgroundController.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAntiAffinityPreset: soft
  ## Node backgroundController.affinity preset
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
  ##
  nodeAffinityPreset:
    ## @param backgroundController.nodeAffinityPreset.type Node affinity preset type. Ignored if `backgroundController.affinity` is set. Allowed values: `soft` or `hard`
    ##
    type: ""
    ## @param backgroundController.nodeAffinityPreset.key Node label key to match. Ignored if `backgroundController.affinity` is set
    ##
    key: ""
    ## @param backgroundController.nodeAffinityPreset.values Node label values to match. Ignored if `backgroundController.affinity` is set
    ## E.g.
    ## values:
    ##   - e2e-az1
    ##   - e2e-az2
    ##
    values: []
  ## @param backgroundController.affinity Affinity for Background controller pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ## NOTE: `backgroundController.podAffinityPreset`, `backgroundController.podAntiAffinityPreset`, and `backgroundController.nodeAffinityPreset` will be ignored when it's set
  ##
  affinity: {}
  ## @param backgroundController.nodeSelector Node labels for Background controller pods assignment
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
  ##
  nodeSelector: {}
  ## @param backgroundController.tolerations Tolerations for Background controller pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []
  ## @param backgroundController.topologySpreadConstraints Topology Spread Constraints for pod assignment spread across your cluster among failure-domains
  ## Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/#spread-constraints-for-pods
  ##
  topologySpreadConstraints: []
  ## @param backgroundController.priorityClassName Background controller pods' priorityClassName
  ##
  priorityClassName: ""
  ## @param backgroundController.schedulerName Kubernetes pod scheduler registry
  ## https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  schedulerName: ""
  ## @param backgroundController.updateStrategy.type Background controller statefulset strategy type
  ## @param backgroundController.updateStrategy.rollingUpdate [object,nullable] Background controller statefulset rolling update configuration parameters
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies
  ##
  updateStrategy:
    type: RollingUpdate
    rollingUpdate: null
  ## @param backgroundController.extraVolumes Optionally specify extra list of additional volumes for the Background controller pod(s)
  ##
  extraVolumes: []
  ## @param backgroundController.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the Background controller container(s)
  ##
  extraVolumeMounts: []
  ## @param backgroundController.sidecars Add additional sidecar containers to the Background controller pod(s)
  ## e.g:
  ## sidecars:
  ##   - name: your-image-name
  ##     image: your-image
  ##     imagePullPolicy: Always
  ##     ports:
  ##       - name: portname
  ##         containerPort: 1234
  ##
  sidecars: []
  ## @param backgroundController.initContainers Add additional init containers to the Background controller pod(s)
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
  ## e.g:
  ## initContainers:
  ##  - name: your-image-name
  ##    image: your-image
  ##    imagePullPolicy: Always
  ##    command: ['sh', '-c', 'echo "hello world"']
  ##
  initContainers: []
  ## @param backgroundController.enableServiceLinks Whether information about services should be injected into pod's environment variable
  ## The environment variables injected by service links are not used, but can lead to slow boot times or slow running of the scripts when there are many services in the current namespace.
  ## If you experience slow pod startups or slow running of the scripts you probably want to set this to `false`.
  ##
  enableServiceLinks: true
  ## @param backgroundController.featuresOverride Set features override
  ##
  featuresOverride: {}
  ## Pod Disruption Budget configuration
  ## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb
  ## @param backgroundController.pdb.create Enable/disable a Pod Disruption Budget creation
  ## @param backgroundController.pdb.minAvailable Minimum number/percentage of pods that should remain scheduled
  ## @param backgroundController.pdb.maxUnavailable Maximum number/percentage of pods that may be made unavailable. Defaults to `1` if both `backgroundController.pdb.minAvailable` and `backgroundController.pdb.maxUnavailable` are empty.
  ##
  pdb:
    create: true
    minAvailable: ""
    maxUnavailable: ""
  ## Autoscaling configuration
  ## ref: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
  ##
  autoscaling:
    vpa:
      ## @param backgroundController.autoscaling.vpa.enabled Enable VPA
      ##
      enabled: false
      ## @param backgroundController.autoscaling.vpa.annotations Annotations for VPA resource
      ##
      annotations: {}
      ## @param backgroundController.autoscaling.vpa.controlledResources VPA List of resources that the vertical pod autoscaler can control. Defaults to cpu and memory
      ##
      controlledResources: []
      ## @param backgroundController.autoscaling.vpa.maxAllowed VPA Max allowed resources for the pod
      ## cpu: 200m
      ## memory: 100Mi
      maxAllowed: {}
      ## @param backgroundController.autoscaling.vpa.minAllowed VPA Min allowed resources for the pod
      ## cpu: 200m
      ## memory: 100Mi
      minAllowed: {}
      updatePolicy:
        ## @param backgroundController.autoscaling.vpa.updatePolicy.updateMode Autoscaling update policy Specifies whether recommended updates are applied when a Pod is started and whether recommended updates are applied during the life of a Pod
        ## Possible values are "Off", "Initial", "Recreate", and "Auto".
        ##
        updateMode: Auto
    hpa:
      ## @param backgroundController.autoscaling.hpa.enabled Enable HPA
      ##
      enabled: false
      ## @param backgroundController.autoscaling.hpa.annotations Annotations for HPA resource
      ##
      annotations: {}
      ## @param backgroundController.autoscaling.hpa.minReplicas Minimum number of replicas
      ##
      minReplicas: ""
      ## @param backgroundController.autoscaling.hpa.maxReplicas Maximum number of replicas
      ##
      maxReplicas: ""
      ## @param backgroundController.autoscaling.hpa.targetCPU Target CPU utilization percentage
      ##
      targetCPU: ""
      ## @param backgroundController.autoscaling.hpa.targetMemory Target Memory utilization percentage
      ##
      targetMemory: ""
  ## @section Background Controller Traffic Exposure Parameters
  ##

  ## Network Policies
  ## Ref: https://kubernetes.io/docs/concepts/services-networking/network-policies/
  ##
  networkPolicy:
    ## @param backgroundController.networkPolicy.enabled Specifies whether a NetworkPolicy should be created
    ##
    enabled: true
    ## @param backgroundController.networkPolicy.allowExternal Don't require server label for connections
    ## The Policy model to apply. When set to false, only pods with the correct
    ## server label will have network access to the ports server is listening
    ## on. When true, server will accept connections from any source
    ## (with the correct destination port).
    ##
    allowExternal: true
    ## @param backgroundController.networkPolicy.allowExternalEgress Allow the pod to access any range of port and all destinations.
    ##
    allowExternalEgress: true
    ## @param backgroundController.networkPolicy.addExternalClientAccess Allow access from pods with client label set to "true". Ignored if `backgroundController.networkPolicy.allowExternal` is true.
    ##
    addExternalClientAccess: true
    ## @param backgroundController.networkPolicy.extraIngress [array] Add extra ingress rules to the NetworkPolicy
    ## e.g:
    ## extraIngress:
    ##   - ports:
    ##       - port: 1234
    ##     from:
    ##       - podSelector:
    ##           - matchLabels:
    ##               - role: frontend
    ##       - podSelector:
    ##           - matchExpressions:
    ##               - key: role
    ##                 operator: In
    ##                 values:
    ##                   - frontend
    extraIngress: []
    ## @param backgroundController.networkPolicy.extraEgress [array] Add extra ingress rules to the NetworkPolicy
    ## e.g:
    ## extraEgress:
    ##   - ports:
    ##       - port: 1234
    ##     to:
    ##       - podSelector:
    ##           - matchLabels:
    ##               - role: frontend
    ##       - podSelector:
    ##           - matchExpressions:
    ##               - key: role
    ##                 operator: In
    ##                 values:
    ##                   - frontend
    ##
    extraEgress: []
    ## @param backgroundController.networkPolicy.ingressPodMatchLabels [object] Labels to match to allow traffic from other pods. Ignored if `backgroundController.networkPolicy.allowExternal` is true.
    ## e.g:
    ## ingressPodMatchLabels:
    ##   my-client: "true"
    #
    ingressPodMatchLabels: {}
    ## @param backgroundController.networkPolicy.ingressNSMatchLabels [object] Labels to match to allow traffic from other namespaces. Ignored if `backgroundController.networkPolicy.allowExternal` is true.
    ## @param backgroundController.networkPolicy.ingressNSPodMatchLabels [object] Pod labels to match to allow traffic from other namespaces. Ignored if `backgroundController.networkPolicy.allowExternal` is true.
    ##
    ingressNSMatchLabels: {}
    ingressNSPodMatchLabels: {}
  ## @section Background Controller RBAC Parameters
  ## ServiceAccounts configuration
  ##
  serviceAccount:
    ## service account
    ##
    ## @param backgroundController.serviceAccount.create Specifies whether a ServiceAccount should be created
    ##
    create: true
    ## @param backgroundController.serviceAccount.name The name of the ServiceAccount to use.
    ## If not set and create is true, a name is generated using the common.names.fullname template
    ##
    name: ""
    ## @param backgroundController.serviceAccount.annotations Additional Service Account annotations (evaluated as a template)
    ##
    annotations: {}
    ## @param backgroundController.serviceAccount.automountServiceAccountToken Automount service account token for the server service account
    ##
    automountServiceAccountToken: false
  ## RBAC configuration
  ##
  rbac:
    ## @param backgroundController.rbac.create Specifies whether RBAC resources should be created
    ##
    create: true
    ## @param backgroundController.rbac.rules Custom RBAC rules to set
    ## e.g:
    ## rules:
    ##   - apiGroups:
    ##       - ""
    ##     resources:
    ##       - pods
    ##     verbs:
    ##       - get
    ##       - list
    ##
    rules: []
    ## @param backgroundController.rbac.createViewRoleBinding Create rolebinding for the system view role
    ##
    createViewRoleBinding: true
    ## @param backgroundController.rbac.viewRoleName Name of the system view role name
    ##
    viewRoleName: view

## @section Cleanup Controller Deployment Parameters
##
cleanupController:
  ## @param cleanupController.enabled Enable Cleanup Controller
  ##
  enabled: true
  ## Bitnami Kyverno image
  ## ref: https://hub.docker.com/r/bitnamiprem/kyverno-cleanup-controller/tags/
  ## @param cleanupController.image.registry [default: REGISTRY_NAME] Kyverno image registry
  ## @param cleanupController.image.repository [default: REPOSITORY_NAME/kyverno] Kyverno image repository
  ## @skip cleanupController.image.tag Kyverno image tag (immutable tags are recommended)
  ## @param cleanupController.image.digest Kyverno image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag
  ## @param cleanupController.image.pullPolicy Kyverno image pull policy
  ## @param cleanupController.image.pullSecrets Kyverno image pull secrets
  ##
  image:
    registry: registry.app-catalog.vmware.com
    repository: eam/prd/containers/verified/common/minideb-bookworm/kyverno-cleanup-controller
    tag: 1.15.1-debian-12-r1
    digest: ""
    ## Specify a imagePullPolicy
    ## ref: https://kubernetes.io/docs/concepts/containers/images/#pre-pulled-images
    ##
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
  ## @param cleanupController.extraEnvVars Array with extra environment variables to add to Cleanup controller nodes
  ## e.g:
  ## extraEnvVars:
  ##   - name: FOO
  ##     value: "bar"
  ##
  extraEnvVars: []
  ## @param cleanupController.extraEnvVarsCM Name of existing ConfigMap containing extra env vars for Cleanup controller nodes
  ##
  extraEnvVarsCM: ""
  ## @param cleanupController.extraEnvVarsSecret Name of existing Secret containing extra env vars for Cleanup controller nodes
  ##
  extraEnvVarsSecret: ""
  ## @param cleanupController.command Override default container command (useful when using custom images)
  ##
  command: []
  ## @param cleanupController.args Override default container args (useful when using custom images)
  ##
  args: []
  ## @param cleanupController.extraArgs Additional container args (will be concatenated to args)
  ##
  extraArgs: []
  ## @param cleanupController.replicaCount Number of Cleanup controller replicas to deploy
  ##
  replicaCount: 1
  ## @param cleanupController.containerPorts.https HTTPS port
  ## @param cleanupController.containerPorts.metrics metrics port
  containerPorts:
    https: 9443
    metrics: 8081
  ## Configure extra options for Cleanup controller containers' liveness, readiness and startup probes
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes
  ## @param cleanupController.livenessProbe.enabled Enable livenessProbe on Cleanup controller nodes
  ## @param cleanupController.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
  ## @param cleanupController.livenessProbe.periodSeconds Period seconds for livenessProbe
  ## @param cleanupController.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
  ## @param cleanupController.livenessProbe.failureThreshold Failure threshold for livenessProbe
  ## @param cleanupController.livenessProbe.successThreshold Success threshold for livenessProbe
  ##
  livenessProbe:
    enabled: true
    failureThreshold: 3
    initialDelaySeconds: 10
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 1
  ## @param cleanupController.readinessProbe.enabled Enable readinessProbe on Cleanup controller nodes
  ## @param cleanupController.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
  ## @param cleanupController.readinessProbe.periodSeconds Period seconds for readinessProbe
  ## @param cleanupController.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
  ## @param cleanupController.readinessProbe.failureThreshold Failure threshold for readinessProbe
  ## @param cleanupController.readinessProbe.successThreshold Success threshold for readinessProbe
  ##
  readinessProbe:
    enabled: true
    failureThreshold: 3
    initialDelaySeconds: 10
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 1
  ## @param cleanupController.startupProbe.enabled Enable startupProbe on Cleanup controller containers
  ## @param cleanupController.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
  ## @param cleanupController.startupProbe.periodSeconds Period seconds for startupProbe
  ## @param cleanupController.startupProbe.timeoutSeconds Timeout seconds for startupProbe
  ## @param cleanupController.startupProbe.failureThreshold Failure threshold for startupProbe
  ## @param cleanupController.startupProbe.successThreshold Success threshold for startupProbe
  ##
  startupProbe:
    enabled: false
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 1
    failureThreshold: 15
    successThreshold: 1
  ## @param cleanupController.customLivenessProbe Custom livenessProbe that overrides the default one
  ##
  customLivenessProbe: {}
  ## @param cleanupController.customReadinessProbe Custom readinessProbe that overrides the default one
  ##
  customReadinessProbe: {}
  ## @param cleanupController.customStartupProbe Custom startupProbe that overrides the default one
  ##
  customStartupProbe: {}
  ## Cleanup controller resource requests and limits
  ## ref: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
  ## @param cleanupController.resourcesPreset Set container resources according to one common preset (allowed values: none, nano, micro, small, medium, large, xlarge, 2xlarge). This is ignored if cleanupController.resources is set (cleanupController.resources is recommended for production).
  ## More information: https://github.com/bitnami/charts/blob/main/bitnami/common/templates/_resources.tpl#L15
  ##
  resourcesPreset: "nano"
  ## @param cleanupController.resources Set container requests and limits for different resources like CPU or memory (essential for production workloads)
  ## Example:
  ## resources:
  ##   requests:
  ##     cpu: 2
  ##     memory: 512Mi
  ##   limits:
  ##     cpu: 3
  ##     memory: 1024Mi
  ##
  resources: {}
  ## Configure Pods Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param cleanupController.podSecurityContext.enabled Enabled Cleanup controller pods' Security Context
  ## @param cleanupController.podSecurityContext.fsGroupChangePolicy Set filesystem group change policy
  ## @param cleanupController.podSecurityContext.sysctls Set kernel settings using the sysctl interface
  ## @param cleanupController.podSecurityContext.supplementalGroups Set filesystem extra groups
  ## @param cleanupController.podSecurityContext.fsGroup Set Cleanup controller pod's Security Context fsGroup
  ##
  podSecurityContext:
    enabled: true
    fsGroupChangePolicy: Always
    sysctls: []
    supplementalGroups: []
    fsGroup: 1001
  ## Configure Container Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param cleanupController.containerSecurityContext.enabled Enabled containers' Security Context
  ## @param cleanupController.containerSecurityContext.seLinuxOptions [object,nullable] Set SELinux options in container
  ## @param cleanupController.containerSecurityContext.runAsUser Set containers' Security Context runAsUser
  ## @param cleanupController.containerSecurityContext.runAsGroup Set containers' Security Context runAsGroup
  ## @param cleanupController.containerSecurityContext.runAsNonRoot Set container's Security Context runAsNonRoot
  ## @param cleanupController.containerSecurityContext.privileged Set container's Security Context privileged
  ## @param cleanupController.containerSecurityContext.readOnlyRootFilesystem Set container's Security Context readOnlyRootFilesystem
  ## @param cleanupController.containerSecurityContext.allowPrivilegeEscalation Set container's Security Context allowPrivilegeEscalation
  ## @param cleanupController.containerSecurityContext.capabilities.drop List of capabilities to be dropped
  ## @param cleanupController.containerSecurityContext.seccompProfile.type Set container's Security Context seccomp profile
  ##
  containerSecurityContext:
    enabled: true
    seLinuxOptions: {}
    runAsUser: 1001
    runAsGroup: 1001
    runAsNonRoot: true
    privileged: false
    readOnlyRootFilesystem: true
    allowPrivilegeEscalation: false
    capabilities:
      drop: ["ALL"]
    seccompProfile:
      type: "RuntimeDefault"
  ## @param cleanupController.lifecycleHooks for the Cleanup controller container(s) to automate configuration before or after startup
  ##
  lifecycleHooks: {}
  ## @param cleanupController.automountServiceAccountToken Mount Service Account token in pod
  ##
  automountServiceAccountToken: true
  ## @param cleanupController.hostAliases Cleanup controller pods host aliases
  ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
  ##
  hostAliases: []
  ## @param cleanupController.podLabels Extra labels for Cleanup controller pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  ##
  podLabels: {}
  ## @param cleanupController.podAnnotations Annotations for Cleanup controller pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  podAnnotations: {}
  ## @param cleanupController.podAffinityPreset Pod affinity preset. Ignored if `cleanupController.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAffinityPreset: ""
  ## @param cleanupController.podAntiAffinityPreset Pod anti-affinity preset. Ignored if `cleanupController.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAntiAffinityPreset: soft
  ## Node cleanupController.affinity preset
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
  ##
  nodeAffinityPreset:
    ## @param cleanupController.nodeAffinityPreset.type Node affinity preset type. Ignored if `cleanupController.affinity` is set. Allowed values: `soft` or `hard`
    ##
    type: ""
    ## @param cleanupController.nodeAffinityPreset.key Node label key to match. Ignored if `cleanupController.affinity` is set
    ##
    key: ""
    ## @param cleanupController.nodeAffinityPreset.values Node label values to match. Ignored if `cleanupController.affinity` is set
    ## E.g.
    ## values:
    ##   - e2e-az1
    ##   - e2e-az2
    ##
    values: []
  ## @param cleanupController.affinity Affinity for Cleanup controller pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ## NOTE: `cleanupController.podAffinityPreset`, `cleanupController.podAntiAffinityPreset`, and `cleanupController.nodeAffinityPreset` will be ignored when it's set
  ##
  affinity: {}
  ## @param cleanupController.nodeSelector Node labels for Cleanup controller pods assignment
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
  ##
  nodeSelector: {}
  ## @param cleanupController.tolerations Tolerations for Cleanup controller pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []
  ## @param cleanupController.topologySpreadConstraints Topology Spread Constraints for pod assignment spread across your cluster among failure-domains
  ## Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/#spread-constraints-for-pods
  ##
  topologySpreadConstraints: []
  ## @param cleanupController.priorityClassName Cleanup controller pods' priorityClassName
  ##
  priorityClassName: ""
  ## @param cleanupController.schedulerName Kubernetes pod scheduler registry
  ## https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  schedulerName: ""
  ## @param cleanupController.updateStrategy.type Cleanup controller statefulset strategy type
  ## @param cleanupController.updateStrategy.rollingUpdate [object,nullable] Cleanup controller statefulset rolling update configuration parameters
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies
  ##
  updateStrategy:
    type: RollingUpdate
    rollingUpdate: null
  ## @param cleanupController.extraVolumes Optionally specify extra list of additional volumes for the Cleanup controller pod(s)
  ##
  extraVolumes: []
  ## @param cleanupController.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the Cleanup controller container(s)
  ##
  extraVolumeMounts: []
  ## @param cleanupController.sidecars Add additional sidecar containers to the Cleanup controller pod(s)
  ## e.g:
  ## sidecars:
  ##   - name: your-image-name
  ##     image: your-image
  ##     imagePullPolicy: Always
  ##     ports:
  ##       - name: portname
  ##         containerPort: 1234
  ##
  sidecars: []
  ## @param cleanupController.initContainers Add additional init containers to the Cleanup controller pod(s)
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
  ## e.g:
  ## initContainers:
  ##  - name: your-image-name
  ##    image: your-image
  ##    imagePullPolicy: Always
  ##    command: ['sh', '-c', 'echo "hello world"']
  ##
  initContainers: []
  ## @param cleanupController.enableServiceLinks Whether information about services should be injected into pod's environment variable
  ## The environment variables injected by service links are not used, but can lead to slow boot times or slow running of the scripts when there are many services in the current namespace.
  ## If you experience slow pod startups or slow running of the scripts you probably want to set this to `false`.
  ##
  enableServiceLinks: true
  ## @param cleanupController.featuresOverride Set features override
  ##
  featuresOverride: {}
  ## @param cleanupController.tls.existingSecret Existing secret that contains TLS certificates
  ## @param cleanupController.tls.cert TLS certificate.
  ## @param cleanupController.tls.key TLS key.
  ##
  tls:
    existingSecret: ""
    cert: ""
    key: ""
  ## Pod Disruption Budget configuration
  ## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb
  ## @param cleanupController.pdb.create Enable/disable a Pod Disruption Budget creation
  ## @param cleanupController.pdb.minAvailable Minimum number/percentage of pods that should remain scheduled
  ## @param cleanupController.pdb.maxUnavailable Maximum number/percentage of pods that may be made unavailable. Defaults to `1` if both `cleanupController.pdb.minAvailable` and `cleanupController.pdb.maxUnavailable` are empty.
  ##
  pdb:
    create: true
    minAvailable: ""
    maxUnavailable: ""
  ## Autoscaling configuration
  ## ref: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
  ##
  autoscaling:
    vpa:
      ## @param cleanupController.autoscaling.vpa.enabled Enable VPA
      ##
      enabled: false
      ## @param cleanupController.autoscaling.vpa.annotations Annotations for VPA resource
      ##
      annotations: {}
      ## @param cleanupController.autoscaling.vpa.controlledResources VPA List of resources that the vertical pod autoscaler can control. Defaults to cpu and memory
      ##
      controlledResources: []
      ## @param cleanupController.autoscaling.vpa.maxAllowed VPA Max allowed resources for the pod
      ## cpu: 200m
      ## memory: 100Mi
      maxAllowed: {}
      ## @param cleanupController.autoscaling.vpa.minAllowed VPA Min allowed resources for the pod
      ## cpu: 200m
      ## memory: 100Mi
      minAllowed: {}
      updatePolicy:
        ## @param cleanupController.autoscaling.vpa.updatePolicy.updateMode Autoscaling update policy Specifies whether recommended updates are applied when a Pod is started and whether recommended updates are applied during the life of a Pod
        ## Possible values are "Off", "Initial", "Recreate", and "Auto".
        ##
        updateMode: Auto
    hpa:
      ## @param cleanupController.autoscaling.hpa.enabled Enable HPA
      ##
      enabled: false
      ## @param cleanupController.autoscaling.hpa.annotations Annotations for HPA resource
      ##
      annotations: {}
      ## @param cleanupController.autoscaling.hpa.minReplicas Minimum number of replicas
      ##
      minReplicas: ""
      ## @param cleanupController.autoscaling.hpa.maxReplicas Maximum number of replicas
      ##
      maxReplicas: ""
      ## @param cleanupController.autoscaling.hpa.targetCPU Target CPU utilization percentage
      ##
      targetCPU: ""
      ## @param cleanupController.autoscaling.hpa.targetMemory Target Memory utilization percentage
      ##
      targetMemory: ""
  ## @section Cleanup Controller Traffic Exposure Parameters
  ##

  ## Cleanup controller service parameters
  ##
  service:
    ## @param cleanupController.service.type Cleanup controller service type
    ##
    type: ClusterIP
    ## @param cleanupController.service.ports.https Cleanup controller HTTPS service port
    ##
    ports:
      https: 443
    ## Node ports to expose
    ## NOTE: choose port between <30000-32767>
    ## @param cleanupController.service.nodePorts.https Node port for HTTPS
    ##
    nodePorts:
      https: ""
    ## @param cleanupController.service.sessionAffinityConfig Additional settings for the sessionAffinity
    ## sessionAffinityConfig:
    ##   clientIP:
    ##     timeoutSeconds: 300
    ##
    sessionAffinityConfig: {}
    ## @param cleanupController.service.sessionAffinity Control where client requests go, to the same pod or round-robin
    ## Values: ClientIP or None
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/
    ##
    sessionAffinity: None
    ## @param cleanupController.service.clusterIP Cleanup controller service Cluster IP
    ## e.g.:
    ## clusterIP: None
    ##
    clusterIP: ""
    ## @param cleanupController.service.loadBalancerIP Cleanup controller service Load Balancer IP
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-loadbalancer
    ##
    loadBalancerIP: ""
    ## @param cleanupController.service.loadBalancerSourceRanges Cleanup controller service Load Balancer sources
    ## ref: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
    ## e.g:
    ## loadBalancerSourceRanges:
    ##   - 10.10.10.0/24
    ##
    loadBalancerSourceRanges: []
    ## @param cleanupController.service.externalTrafficPolicy Cleanup controller service external traffic policy
    ## ref https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
    ##
    externalTrafficPolicy: Cluster
    ## @param cleanupController.service.annotations Additional custom annotations for Cleanup controller service
    ##
    annotations: {}
    ## @param cleanupController.service.extraPorts Extra ports to expose in the Cleanup controller service
    ##
    extraPorts: []
  ## Network Policies
  ## Ref: https://kubernetes.io/docs/concepts/services-networking/network-policies/
  ##
  networkPolicy:
    ## @param cleanupController.networkPolicy.enabled Specifies whether a NetworkPolicy should be created
    ##
    enabled: true
    ## @param cleanupController.networkPolicy.allowExternal Don't require server label for connections
    ## The Policy model to apply. When set to false, only pods with the correct
    ## server label will have network access to the ports server is listening
    ## on. When true, server will accept connections from any source
    ## (with the correct destination port).
    ##
    allowExternal: true
    ## @param cleanupController.networkPolicy.allowExternalEgress Allow the pod to access any range of port and all destinations.
    ##
    allowExternalEgress: true
    ## @param cleanupController.networkPolicy.addExternalClientAccess Allow access from pods with client label set to "true". Ignored if `cleanupController.networkPolicy.allowExternal` is true.
    ##
    addExternalClientAccess: true
    ## @param cleanupController.networkPolicy.extraIngress [array] Add extra ingress rules to the NetworkPolicy
    ## e.g:
    ## extraIngress:
    ##   - ports:
    ##       - port: 1234
    ##     from:
    ##       - podSelector:
    ##           - matchLabels:
    ##               - role: frontend
    ##       - podSelector:
    ##           - matchExpressions:
    ##               - key: role
    ##                 operator: In
    ##                 values:
    ##                   - frontend
    extraIngress: []
    ## @param cleanupController.networkPolicy.extraEgress [array] Add extra ingress rules to the NetworkPolicy
    ## e.g:
    ## extraEgress:
    ##   - ports:
    ##       - port: 1234
    ##     to:
    ##       - podSelector:
    ##           - matchLabels:
    ##               - role: frontend
    ##       - podSelector:
    ##           - matchExpressions:
    ##               - key: role
    ##                 operator: In
    ##                 values:
    ##                   - frontend
    ##
    extraEgress: []
    ## @param cleanupController.networkPolicy.ingressPodMatchLabels [object] Labels to match to allow traffic from other pods. Ignored if `cleanupController.networkPolicy.allowExternal` is true.
    ## e.g:
    ## ingressPodMatchLabels:
    ##   my-client: "true"
    #
    ingressPodMatchLabels: {}
    ## @param cleanupController.networkPolicy.ingressNSMatchLabels [object] Labels to match to allow traffic from other namespaces. Ignored if `cleanupController.networkPolicy.allowExternal` is true.
    ## @param cleanupController.networkPolicy.ingressNSPodMatchLabels [object] Pod labels to match to allow traffic from other namespaces. Ignored if `cleanupController.networkPolicy.allowExternal` is true.
    ##
    ingressNSMatchLabels: {}
    ingressNSPodMatchLabels: {}
  ## @section Cleanup Controller RBAC Parameters
  ## ServiceAccounts configuration
  ##
  serviceAccount:
    ## service account
    ##
    ## @param cleanupController.serviceAccount.create Specifies whether a ServiceAccount should be created
    ##
    create: true
    ## @param cleanupController.serviceAccount.name The name of the ServiceAccount to use.
    ## If not set and create is true, a name is generated using the common.names.fullname template
    ##
    name: ""
    ## @param cleanupController.serviceAccount.annotations Additional Service Account annotations (evaluated as a template)
    ##
    annotations: {}
    ## @param cleanupController.serviceAccount.automountServiceAccountToken Automount service account token for the server service account
    ##
    automountServiceAccountToken: false
  ## RBAC configuration
  ##
  rbac:
    ## @param cleanupController.rbac.create Specifies whether RBAC resources should be created
    ##
    create: true
    ## @param cleanupController.rbac.rules Custom RBAC rules to set
    ## e.g:
    ## rules:
    ##   - apiGroups:
    ##       - ""
    ##     resources:
    ##       - pods
    ##     verbs:
    ##       - get
    ##       - list
    ##
    rules: []
    ## @param cleanupController.rbac.createViewRoleBinding Create rolebinding for the system view role
    ##
    createViewRoleBinding: true
    ## @param cleanupController.rbac.viewRoleName Name of the system view role name
    ##
    viewRoleName: view

## @section Reports Controller Deployment Parameters
##
reportsController:
  ## @param reportsController.enabled Enable Reports Controller
  ##
  enabled: true
  ## Bitnami Kyverno image
  ## ref: https://hub.docker.com/r/bitnamiprem/kyverno-reports-controller/tags/
  ## @param reportsController.image.registry [default: REGISTRY_NAME] Kyverno image registry
  ## @param reportsController.image.repository [default: REPOSITORY_NAME/kyverno] Kyverno image repository
  ## @skip reportsController.image.tag Kyverno image tag (immutable tags are recommended)
  ## @param reportsController.image.digest Kyverno image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag
  ## @param reportsController.image.pullPolicy Kyverno image pull policy
  ## @param reportsController.image.pullSecrets Kyverno image pull secrets
  ##
  image:
    registry: registry.app-catalog.vmware.com
    repository: eam/prd/containers/verified/common/minideb-bookworm/kyverno-reports-controller
    tag: 1.15.1-debian-12-r1
    digest: ""
    ## Specify a imagePullPolicy
    ## ref: https://kubernetes.io/docs/concepts/containers/images/#pre-pulled-images
    ##
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
  ## @param reportsController.extraEnvVars Array with extra environment variables to add to Reports controller nodes
  ## e.g:
  ## extraEnvVars:
  ##   - name: FOO
  ##     value: "bar"
  ##
  extraEnvVars: []
  ## @param reportsController.extraEnvVarsCM Name of existing ConfigMap containing extra env vars for Reports controller nodes
  ##
  extraEnvVarsCM: ""
  ## @param reportsController.extraEnvVarsSecret Name of existing Secret containing extra env vars for Reports controller nodes
  ##
  extraEnvVarsSecret: ""
  ## @param reportsController.command Override default container command (useful when using custom images)
  ##
  command: []
  ## @param reportsController.args Override default container args (useful when using custom images)
  ##
  args: []
  ## @param reportsController.extraArgs Additional container args (will be concatenated to args)
  ##
  extraArgs: []
  ## @param reportsController.replicaCount Number of Reports controller replicas to deploy
  ##
  replicaCount: 1
  ## @param reportsController.containerPorts.metrics metrics port
  containerPorts:
    metrics: 8081
  ## Configure extra options for Reports controller containers' liveness, readiness and startup probes
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes
  ## @param reportsController.livenessProbe.enabled Enable livenessProbe on Reports controller nodes
  ## @param reportsController.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
  ## @param reportsController.livenessProbe.periodSeconds Period seconds for livenessProbe
  ## @param reportsController.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
  ## @param reportsController.livenessProbe.failureThreshold Failure threshold for livenessProbe
  ## @param reportsController.livenessProbe.successThreshold Success threshold for livenessProbe
  ##
  livenessProbe:
    enabled: true
    failureThreshold: 3
    initialDelaySeconds: 10
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 1
  ## @param reportsController.readinessProbe.enabled Enable readinessProbe on Reports controller nodes
  ## @param reportsController.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
  ## @param reportsController.readinessProbe.periodSeconds Period seconds for readinessProbe
  ## @param reportsController.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
  ## @param reportsController.readinessProbe.failureThreshold Failure threshold for readinessProbe
  ## @param reportsController.readinessProbe.successThreshold Success threshold for readinessProbe
  ##
  readinessProbe:
    enabled: true
    failureThreshold: 3
    initialDelaySeconds: 10
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 1
  ## @param reportsController.startupProbe.enabled Enable startupProbe on Reports controller containers
  ## @param reportsController.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
  ## @param reportsController.startupProbe.periodSeconds Period seconds for startupProbe
  ## @param reportsController.startupProbe.timeoutSeconds Timeout seconds for startupProbe
  ## @param reportsController.startupProbe.failureThreshold Failure threshold for startupProbe
  ## @param reportsController.startupProbe.successThreshold Success threshold for startupProbe
  ##
  startupProbe:
    enabled: false
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 1
    failureThreshold: 15
    successThreshold: 1
  ## @param reportsController.customLivenessProbe Custom livenessProbe that overrides the default one
  ##
  customLivenessProbe: {}
  ## @param reportsController.customReadinessProbe Custom readinessProbe that overrides the default one
  ##
  customReadinessProbe: {}
  ## @param reportsController.customStartupProbe Custom startupProbe that overrides the default one
  ##
  customStartupProbe: {}
  ## Reports controller resource requests and limits
  ## ref: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
  ## @param reportsController.resourcesPreset Set container resources according to one common preset (allowed values: none, nano, micro, small, medium, large, xlarge, 2xlarge). This is ignored if reportsController.resources is set (reportsController.resources is recommended for production).
  ## More information: https://github.com/bitnami/charts/blob/main/bitnami/common/templates/_resources.tpl#L15
  ##
  resourcesPreset: "nano"
  ## @param reportsController.resources Set container requests and limits for different resources like CPU or memory (essential for production workloads)
  ## Example:
  ## resources:
  ##   requests:
  ##     cpu: 2
  ##     memory: 512Mi
  ##   limits:
  ##     cpu: 3
  ##     memory: 1024Mi
  ##
  resources: {}
  ## Configure Pods Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param reportsController.podSecurityContext.enabled Enabled Reports controller pods' Security Context
  ## @param reportsController.podSecurityContext.fsGroupChangePolicy Set filesystem group change policy
  ## @param reportsController.podSecurityContext.sysctls Set kernel settings using the sysctl interface
  ## @param reportsController.podSecurityContext.supplementalGroups Set filesystem extra groups
  ## @param reportsController.podSecurityContext.fsGroup Set Reports controller pod's Security Context fsGroup
  ##
  podSecurityContext:
    enabled: true
    fsGroupChangePolicy: Always
    sysctls: []
    supplementalGroups: []
    fsGroup: 1001
  ## Configure Container Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param reportsController.containerSecurityContext.enabled Enabled containers' Security Context
  ## @param reportsController.containerSecurityContext.seLinuxOptions [object,nullable] Set SELinux options in container
  ## @param reportsController.containerSecurityContext.runAsUser Set containers' Security Context runAsUser
  ## @param reportsController.containerSecurityContext.runAsGroup Set containers' Security Context runAsGroup
  ## @param reportsController.containerSecurityContext.runAsNonRoot Set container's Security Context runAsNonRoot
  ## @param reportsController.containerSecurityContext.privileged Set container's Security Context privileged
  ## @param reportsController.containerSecurityContext.readOnlyRootFilesystem Set container's Security Context readOnlyRootFilesystem
  ## @param reportsController.containerSecurityContext.allowPrivilegeEscalation Set container's Security Context allowPrivilegeEscalation
  ## @param reportsController.containerSecurityContext.capabilities.drop List of capabilities to be dropped
  ## @param reportsController.containerSecurityContext.seccompProfile.type Set container's Security Context seccomp profile
  ##
  containerSecurityContext:
    enabled: true
    seLinuxOptions: {}
    runAsUser: 1001
    runAsGroup: 1001
    runAsNonRoot: true
    privileged: false
    readOnlyRootFilesystem: true
    allowPrivilegeEscalation: false
    capabilities:
      drop: ["ALL"]
    seccompProfile:
      type: "RuntimeDefault"
  ## @param reportsController.lifecycleHooks for the Reports controller container(s) to automate configuration before or after startup
  ##
  lifecycleHooks: {}
  ## @param reportsController.automountServiceAccountToken Mount Service Account token in pod
  ##
  automountServiceAccountToken: true
  ## @param reportsController.hostAliases Reports controller pods host aliases
  ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
  ##
  hostAliases: []
  ## @param reportsController.podLabels Extra labels for Reports controller pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  ##
  podLabels: {}
  ## @param reportsController.podAnnotations Annotations for Reports controller pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  podAnnotations: {}
  ## @param reportsController.podAffinityPreset Pod affinity preset. Ignored if `reportsController.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAffinityPreset: ""
  ## @param reportsController.podAntiAffinityPreset Pod anti-affinity preset. Ignored if `reportsController.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAntiAffinityPreset: soft
  ## Node reportsController.affinity preset
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
  ##
  nodeAffinityPreset:
    ## @param reportsController.nodeAffinityPreset.type Node affinity preset type. Ignored if `reportsController.affinity` is set. Allowed values: `soft` or `hard`
    ##
    type: ""
    ## @param reportsController.nodeAffinityPreset.key Node label key to match. Ignored if `reportsController.affinity` is set
    ##
    key: ""
    ## @param reportsController.nodeAffinityPreset.values Node label values to match. Ignored if `reportsController.affinity` is set
    ## E.g.
    ## values:
    ##   - e2e-az1
    ##   - e2e-az2
    ##
    values: []
  ## @param reportsController.affinity Affinity for Reports controller pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ## NOTE: `reportsController.podAffinityPreset`, `reportsController.podAntiAffinityPreset`, and `reportsController.nodeAffinityPreset` will be ignored when it's set
  ##
  affinity: {}
  ## @param reportsController.nodeSelector Node labels for Reports controller pods assignment
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
  ##
  nodeSelector: {}
  ## @param reportsController.tolerations Tolerations for Reports controller pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []
  ## @param reportsController.topologySpreadConstraints Topology Spread Constraints for pod assignment spread across your cluster among failure-domains
  ## Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/#spread-constraints-for-pods
  ##
  topologySpreadConstraints: []
  ## @param reportsController.priorityClassName Reports controller pods' priorityClassName
  ##
  priorityClassName: ""
  ## @param reportsController.schedulerName Kubernetes pod scheduler registry
  ## https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  schedulerName: ""
  ## @param reportsController.updateStrategy.type Reports controller statefulset strategy type
  ## @param reportsController.updateStrategy.rollingUpdate [object,nullable] Reports controller statefulset rolling update configuration parameters
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies
  ##
  updateStrategy:
    type: RollingUpdate
    rollingUpdate: null
  ## @param reportsController.extraVolumes Optionally specify extra list of additional volumes for the Reports controller pod(s)
  ##
  extraVolumes: []
  ## @param reportsController.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the Reports controller container(s)
  ##
  extraVolumeMounts: []
  ## @param reportsController.sidecars Add additional sidecar containers to the Reports controller pod(s)
  ## e.g:
  ## sidecars:
  ##   - name: your-image-name
  ##     image: your-image
  ##     imagePullPolicy: Always
  ##     ports:
  ##       - name: portname
  ##         containerPort: 1234
  ##
  sidecars: []
  ## @param reportsController.initContainers Add additional init containers to the Reports controller pod(s)
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
  ## e.g:
  ## initContainers:
  ##  - name: your-image-name
  ##    image: your-image
  ##    imagePullPolicy: Always
  ##    command: ['sh', '-c', 'echo "hello world"']
  ##
  initContainers: []
  ## @param reportsController.enableServiceLinks Whether information about services should be injected into pod's environment variable
  ## The environment variables injected by service links are not used, but can lead to slow boot times or slow running of the scripts when there are many services in the current namespace.
  ## If you experience slow pod startups or slow running of the scripts you probably want to set this to `false`.
  ##
  enableServiceLinks: true
  ## @param reportsController.featuresOverride Set features override
  ##
  featuresOverride: {}
  ## Pod Disruption Budget configuration
  ## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb
  ## @param reportsController.pdb.create Enable/disable a Pod Disruption Budget creation
  ## @param reportsController.pdb.minAvailable Minimum number/percentage of pods that should remain scheduled
  ## @param reportsController.pdb.maxUnavailable Maximum number/percentage of pods that may be made unavailable. Defaults to `1` if both `reportsController.pdb.minAvailable` and `reportsController.pdb.maxUnavailable` are empty.
  ##
  pdb:
    create: true
    minAvailable: ""
    maxUnavailable: ""
  ## Autoscaling configuration
  ## ref: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
  ##
  autoscaling:
    vpa:
      ## @param reportsController.autoscaling.vpa.enabled Enable VPA
      ##
      enabled: false
      ## @param reportsController.autoscaling.vpa.annotations Annotations for VPA resource
      ##
      annotations: {}
      ## @param reportsController.autoscaling.vpa.controlledResources VPA List of resources that the vertical pod autoscaler can control. Defaults to cpu and memory
      ##
      controlledResources: []
      ## @param reportsController.autoscaling.vpa.maxAllowed VPA Max allowed resources for the pod
      ## cpu: 200m
      ## memory: 100Mi
      maxAllowed: {}
      ## @param reportsController.autoscaling.vpa.minAllowed VPA Min allowed resources for the pod
      ## cpu: 200m
      ## memory: 100Mi
      minAllowed: {}
      updatePolicy:
        ## @param reportsController.autoscaling.vpa.updatePolicy.updateMode Autoscaling update policy Specifies whether recommended updates are applied when a Pod is started and whether recommended updates are applied during the life of a Pod
        ## Possible values are "Off", "Initial", "Recreate", and "Auto".
        ##
        updateMode: Auto
    hpa:
      ## @param reportsController.autoscaling.hpa.enabled Enable HPA
      ##
      enabled: false
      ## @param reportsController.autoscaling.hpa.annotations Annotations for HPA resource
      ##
      annotations: {}
      ## @param reportsController.autoscaling.hpa.minReplicas Minimum number of replicas
      ##
      minReplicas: ""
      ## @param reportsController.autoscaling.hpa.maxReplicas Maximum number of replicas
      ##
      maxReplicas: ""
      ## @param reportsController.autoscaling.hpa.targetCPU Target CPU utilization percentage
      ##
      targetCPU: ""
      ## @param reportsController.autoscaling.hpa.targetMemory Target Memory utilization percentage
      ##
      targetMemory: ""
  ## @section Reports Controller Traffic Exposure Parameters
  ##

  ## Network Policies
  ## Ref: https://kubernetes.io/docs/concepts/services-networking/network-policies/
  ##
  networkPolicy:
    ## @param reportsController.networkPolicy.enabled Specifies whether a NetworkPolicy should be created
    ##
    enabled: true
    ## @param reportsController.networkPolicy.allowExternal Don't require server label for connections
    ## The Policy model to apply. When set to false, only pods with the correct
    ## server label will have network access to the ports server is listening
    ## on. When true, server will accept connections from any source
    ## (with the correct destination port).
    ##
    allowExternal: true
    ## @param reportsController.networkPolicy.allowExternalEgress Allow the pod to access any range of port and all destinations.
    ##
    allowExternalEgress: true
    ## @param reportsController.networkPolicy.addExternalClientAccess Allow access from pods with client label set to "true". Ignored if `reportsController.networkPolicy.allowExternal` is true.
    ##
    addExternalClientAccess: true
    ## @param reportsController.networkPolicy.extraIngress [array] Add extra ingress rules to the NetworkPolicy
    ## e.g:
    ## extraIngress:
    ##   - ports:
    ##       - port: 1234
    ##     from:
    ##       - podSelector:
    ##           - matchLabels:
    ##               - role: frontend
    ##       - podSelector:
    ##           - matchExpressions:
    ##               - key: role
    ##                 operator: In
    ##                 values:
    ##                   - frontend
    extraIngress: []
    ## @param reportsController.networkPolicy.extraEgress [array] Add extra ingress rules to the NetworkPolicy
    ## e.g:
    ## extraEgress:
    ##   - ports:
    ##       - port: 1234
    ##     to:
    ##       - podSelector:
    ##           - matchLabels:
    ##               - role: frontend
    ##       - podSelector:
    ##           - matchExpressions:
    ##               - key: role
    ##                 operator: In
    ##                 values:
    ##                   - frontend
    ##
    extraEgress: []
    ## @param reportsController.networkPolicy.ingressPodMatchLabels [object] Labels to match to allow traffic from other pods. Ignored if `reportsController.networkPolicy.allowExternal` is true.
    ## e.g:
    ## ingressPodMatchLabels:
    ##   my-client: "true"
    #
    ingressPodMatchLabels: {}
    ## @param reportsController.networkPolicy.ingressNSMatchLabels [object] Labels to match to allow traffic from other namespaces. Ignored if `reportsController.networkPolicy.allowExternal` is true.
    ## @param reportsController.networkPolicy.ingressNSPodMatchLabels [object] Pod labels to match to allow traffic from other namespaces. Ignored if `reportsController.networkPolicy.allowExternal` is true.
    ##
    ingressNSMatchLabels: {}
    ingressNSPodMatchLabels: {}
  ## @section Reports Controller RBAC Parameters
  ## ServiceAccounts configuration
  ##
  serviceAccount:
    ## service account
    ##
    ## @param reportsController.serviceAccount.create Specifies whether a ServiceAccount should be created
    ##
    create: true
    ## @param reportsController.serviceAccount.name The name of the ServiceAccount to use.
    ## If not set and create is true, a name is generated using the common.names.fullname template
    ##
    name: ""
    ## @param reportsController.serviceAccount.annotations Additional Service Account annotations (evaluated as a template)
    ##
    annotations: {}
    ## @param reportsController.serviceAccount.automountServiceAccountToken Automount service account token for the server service account
    ##
    automountServiceAccountToken: false
  ## RBAC configuration
  ##
  rbac:
    ## @param reportsController.rbac.create Specifies whether RBAC resources should be created
    ##
    create: true
    ## @param reportsController.rbac.rules Custom RBAC rules to set
    ## e.g:
    ## rules:
    ##   - apiGroups:
    ##       - ""
    ##     resources:
    ##       - pods
    ##     verbs:
    ##       - get
    ##       - list
    ##
    rules: []
    ## @param reportsController.rbac.createViewRoleBinding Create rolebinding for the system view role
    ##
    createViewRoleBinding: true
    ## @param reportsController.rbac.viewRoleName Name of the system view role name
    ##
    viewRoleName: view

## @section Metrics Parameters
## Prometheus Exporter / Metrics
##
metrics:
  ## @param metrics.enabled Enable metrics
  ##
  enabled: false
  ## @param metrics.overrideConfiguration [object] metrics configuration override
  ## e.g:
  ## overrideConfiguration:
  ##   auth_enabled: true
  ##
  overrideConfiguration: {}
  ## @param metrics.existingConfigmap Name of a configmap with the metrics configuration
  ##
  existingConfigmap: ""
  ## Metrics service properties
  ##
  service:
    ## @param metrics.service.enabled Create Service resource(s) for scraping metrics using PrometheusOperator ServiceMonitor, can be disabled when using a PodMonitor
    ##
    enabled: true
    ## @param metrics.service.type Metrics service type
    ##
    type: ClusterIP
    ## @param metrics.service.ports.http Metrics service port
    ##
    ports:
      http: 8000
    ## @param metrics.service.externalTrafficPolicy Metrics service external traffic policy
    ## ref: https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
    ##
    externalTrafficPolicy: Cluster
    ## @param metrics.service.extraPorts Extra ports to expose (normally used with the `sidecar` value)
    ##
    extraPorts: []
    ## @param metrics.service.loadBalancerIP Metrics service Load Balancer IP
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#internal-load-balancer
    ##
    loadBalancerIP: ""
    ## @param metrics.service.loadBalancerClass exporter service Load Balancer class if service type is `LoadBalancer` (optional, cloud specific)
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-loadbalancer
    ##
    loadBalancerClass: ""
    ## @param metrics.service.loadBalancerSourceRanges Metrics service Load Balancer sources
    ## https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
    ## e.g.
    ## loadBalancerSourceRanges:
    ##   - 10.10.10.0/24
    ##
    loadBalancerSourceRanges: []
    ## @param metrics.service.annotations Additional custom annotations for Metrics service
    ##
    annotations: {}
    ## @param metrics.service.clusterIP Metrics service Cluster IP
    ##
    clusterIP: ""
  ## Prometheus Operator ServiceMonitor configuration
  ##
  serviceMonitor:
    ## @param metrics.serviceMonitor.enabled Create ServiceMonitor Resource for scraping metrics using Prometheus Operator
    ##
    enabled: false
    ## @param metrics.serviceMonitor.namespace Namespace for the ServiceMonitor Resource (defaults to the Release Namespace)
    ##
    namespace: ""
    ## @param metrics.serviceMonitor.interval Interval at which metrics should be scraped.
    ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint
    ##
    interval: ""
    ## @param metrics.serviceMonitor.scrapeTimeout Timeout after which the scrape is ended
    ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint
    ##
    scrapeTimeout: ""
    ## @param metrics.serviceMonitor.annotations Annotations for the ServiceMonitor object
    ##
    annotations: {}
    ## @param metrics.serviceMonitor.labels Additional labels that can be used so ServiceMonitor will be discovered by Prometheus
    ##
    labels: {}
    ## @param metrics.serviceMonitor.selector Prometheus instance selector labels
    ## ref: https://github.com/bitnami/charts/tree/main/bitnami/prometheus-operator#prometheus-configuration
    ##
    selector: {}
    ## @param metrics.serviceMonitor.relabelings RelabelConfigs to apply to samples before scraping
    ##
    relabelings: []
    ## @param metrics.serviceMonitor.metricRelabelings MetricRelabelConfigs to apply to samples before ingestion
    ##
    metricRelabelings: []
    ## @param metrics.serviceMonitor.honorLabels Specify honorLabels parameter to add the scrape endpoint
    ##
    honorLabels: false
    ## @param metrics.serviceMonitor.jobLabel The name of the label on the target service to use as the job name in prometheus.
    ##
    jobLabel: ""
