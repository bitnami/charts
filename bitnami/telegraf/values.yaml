# Copyright Broadcom, Inc. All Rights Reserved.
# SPDX-License-Identifier: APACHE-2.0

## @section Global parameters

global:
  ## Global Docker image parameters
  ## Please, note that this will override the image parameters, including dependencies, configured to use the global value
  ## @param global.imageRegistry Global Docker Image registry
  ## @param global.imagePullSecrets Global Docker registry secret names as an array
  ##
  imageRegistry: ""
  imagePullSecrets: []
  ## @param global.defaultStorageClass Global default StorageClass for Persistent Volume(s)
  ##
  defaultStorageClass: ""
  ## Security parameters
  ## @param global.security.allowInsecureImages Allows skipping image verification
  ##
  security:
    allowInsecureImages: false
  ## Compatibility adaptations for Kubernetes platforms
  ##
  compatibility:
    ## Compatibility adaptations for Openshift
    ## @param global.compatibility.openshift.adaptSecurityContext Adapt the securityContext sections of the deployment to make them compatible with Openshift restricted-v2 SCC: remove runAsUser, runAsGroup and fsGroup and let the platform use their allowed default IDs. Possible values: auto (apply if the detected running cluster is Openshift), force (perform the adaptation always), disabled (do not perform adaptation)
    ##
    openshift:
      adaptSecurityContext: auto
    ## @param global.compatibility.omitEmptySeLinuxOptions If set to true, removes the seLinuxOptions from the securityContexts when it is set to an empty object
    ##
    omitEmptySeLinuxOptions: false

## @section Common parameters

## @param kubeVersion Override Kubernetes version reported by .Capabilities
##
kubeVersion: ""
## @param apiVersions Override Kubernetes API versions reported by .Capabilities
##
apiVersions: []
## @param nameOverride String to partially override common.names.name
##
nameOverride: ""
## @param fullnameOverride String to fully override common.names.fullname
##
fullnameOverride: ""
## @param namespaceOverride String to fully override common.names.namespace
##
namespaceOverride: ""
## @param commonLabels Labels to add to all deployed objects
##
commonLabels: {}
## @param commonAnnotations Annotations to add to all deployed objects
##
commonAnnotations: {}
## @param clusterDomain Kubernetes cluster domain name
##
clusterDomain: cluster.local
## @param extraDeploy Array of extra objects to deploy with the release
##
extraDeploy: []
## Diagnostic mode
## @param diagnosticMode.enabled Enable diagnostic mode (all probes will be disabled and the command will be overridden)
## @param diagnosticMode.command Command to override all containers in the chart release
## @param diagnosticMode.args Args to override all containers in the chart release
##
diagnosticMode:
  enabled: false
  command:
    - sleep
  args:
    - infinity

## @section Telegraf parameters
##
## Bitnami Telegraf image
## ref: https://hub.docker.com/r/bitnami/telegraf/tags/
## @param image.registry [default: REGISTRY_NAME] Telegraf image registry
## @param image.repository [default: REPOSITORY_NAME/telegraf] Telegraf image repository
## @skip image.tag Telegraf image tag (immutable tags are recommended)
## @param image.digest Telegraf image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag image tag (immutable tags are recommended)
## @param image.pullPolicy Telegraf image pull policy
## @param image.pullSecrets Telegraf image pull secrets
## @param image.debug Enable Telegraf image debug mode
##
image:
  registry: registry.app-catalog.vmware.com
  repository: eam/prd/containers/verified/common/minideb-bookworm/telegraf
  tag: 1.36.1-debian-12-r0
  digest: ""
  ## Specify a imagePullPolicy
  ## ref: https://kubernetes.io/docs/concepts/containers/images/#pre-pulled-images
  ##
  pullPolicy: IfNotPresent
  ## Optionally specify an array of imagePullSecrets (secrets must be manually created in the namespace)
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  ## e.g:
  ## pullSecrets:
  ##   - myRegistryKeySecretName
  ##
  pullSecrets: []
  debug: false
## @param replicaCount Number of Telegraf replicas to deploy
##
replicaCount: 1
## @param overrideConfiguration Telegraf common configuration override.
## ref: https://docs.influxdata.com/telegraf/v1.1/administration/configuration/
## Use YAML format, then it's transformed to TOML format by the chart. e.g:
##   overrideConfiguration:
##     outputs:
##       - influxdb:
##           urls:
##             - "http://host:port"
##           database: "database"
##           username: "user"
##           password: "password"
##
##
overrideConfiguration: {}
## @param configuration Specify full content for Telegraf config file (auto-generated based on other parameters otherwise)
## ref: https://docs.influxdata.com/telegraf/v1.1/administration/configuration/
## Use TOML format. e.g:
##   configuration: |-
##       [[outputs.influxdb]]
##         database = "database"
##         password = "password"
##         urls = [
##           "http://host:port"
##         ]
##         username = "user"
##
configuration: ""
## @param existingConfigmap The name of an existing ConfigMap with your custom configuration for Telegraf
##
existingConfigmap: ""
## @param containerPorts.cisco_telemetry Telegraf cisco_telemetry container port for collecting Cisco telemetry data.
## @param containerPorts.health Telegraf internal health check API container port.
## @param containerPorts.http Telegraf HTTP container port.
## @param containerPorts.http_v2 Telegraf HTTP_v2 container port.
## @param containerPorts.influxdb Telegraf influxdb container port for receiving InfluxDB line protocol metrics.
## @param containerPorts.influxdb_v2 Telegraf influxdb_v2 container port for receiving InfluxDB v2 line protocol metrics.
## @param containerPorts.otlp_grpc Telegraf opentelemetry gRPC container port.
## @param containerPorts.otlp_http Telegraf opentelemetry HTTP container port.
## @param containerPorts.prometheus Telegraf prometheus container port for exposing metrics to be scraped.
## @param containerPorts.statsd Telegraf statsd container port for collecting StatsD metrics.
## @param containerPorts.syslog Telegraf syslog container port for collecting Syslog messages.
## @param containerPorts.socket Telegraf socket container port.
## @param containerPorts.tcp Telegraf tcp container port for receiving metrics via TCP.
## @param containerPorts.udp Telegraf udp container port for receiving metrics via UDP.
## @param containerPorts.webhooks Telegraf webhooks container port for receiving data from webhooks.
##
containerPorts:
  cisco_telemetry: 57500
  health: 8888
  http: 8080
  http_v2: 8081
  influxdb: 8086
  influxdb_v2: 8087
  otlp_grpc: 4317
  otlp_http: 4318
  prometheus: 9273
  socket: 9125
  statsd: 8125
  syslog: 514
  tcp: 9123
  udp: 9124
  webhooks: 8082
## @param extraContainerPorts Optionally specify extra list of additional ports for Telegraf containers
## e.g:
## extraContainerPorts:
##   - name: myservice
##     containerPort: 9090
##
extraContainerPorts: []
## Configure extra options for Telegraf containers' liveness and readiness probes
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
## @param livenessProbe.enabled Enable livenessProbe on Telegraf containers
## @param livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
## @param livenessProbe.periodSeconds Period seconds for livenessProbe
## @param livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
## @param livenessProbe.failureThreshold Failure threshold for livenessProbe
## @param livenessProbe.successThreshold Success threshold for livenessProbe
##
livenessProbe:
  enabled: true
  initialDelaySeconds: 30
  periodSeconds: 30
  timeoutSeconds: 2
  failureThreshold: 3
  successThreshold: 1
## @param readinessProbe.enabled Enable readinessProbe on Telegraf containers
## @param readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
## @param readinessProbe.periodSeconds Period seconds for readinessProbe
## @param readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
## @param readinessProbe.failureThreshold Failure threshold for readinessProbe
## @param readinessProbe.successThreshold Success threshold for readinessProbe
##
readinessProbe:
  enabled: true
  initialDelaySeconds: 30
  periodSeconds: 30
  timeoutSeconds: 2
  failureThreshold: 3
  successThreshold: 1
## @param startupProbe.enabled Enable startupProbe on Telegraf containers
## @param startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
## @param startupProbe.periodSeconds Period seconds for startupProbe
## @param startupProbe.timeoutSeconds Timeout seconds for startupProbe
## @param startupProbe.failureThreshold Failure threshold for startupProbe
## @param startupProbe.successThreshold Success threshold for startupProbe
##
startupProbe:
  enabled: false
  initialDelaySeconds: 30
  periodSeconds: 30
  timeoutSeconds: 2
  failureThreshold: 3
  successThreshold: 1
## @param customLivenessProbe Custom livenessProbe that overrides the default one
##
customLivenessProbe: {}
## @param customReadinessProbe Custom readinessProbe that overrides the default one
##
customReadinessProbe: {}
## @param customStartupProbe Custom startupProbe that overrides the default one
##
customStartupProbe: {}
## Telegraf resource requests and limits
## ref: http://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
## @param resourcesPreset Set Telegraf container resources according to one common preset (allowed values: none, nano, micro, small, medium, large, xlarge, 2xlarge). This is ignored if resources is set (resources is recommended for production).
## More information: https://github.com/bitnami/charts/blob/main/bitnami/common/templates/_resources.tpl#L15
##
resourcesPreset: "nano"
## @param resources Set Telegraf container requests and limits for different resources like CPU or memory (essential for production workloads)
## Example:
## resources:
##   requests:
##     cpu: 2
##     memory: 512Mi
##   limits:
##     cpu: 3
##     memory: 1024Mi
##
resources: {}
## Configure Pods Security Context
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
## @param podSecurityContext.enabled Enable Telegraf pods' Security Context
## @param podSecurityContext.fsGroupChangePolicy Set filesystem group change policy for Telegraf pods
## @param podSecurityContext.sysctls Set kernel settings using the sysctl interface for Telegraf pods
## @param podSecurityContext.supplementalGroups Set filesystem extra groups for Telegraf pods
## @param podSecurityContext.fsGroup Set fsGroup in Telegraf pods' Security Context
##
podSecurityContext:
  enabled: true
  fsGroupChangePolicy: Always
  sysctls: []
  supplementalGroups: []
  fsGroup: 1001
## Configure Container Security Context
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
## @param containerSecurityContext.enabled Enabled Telegraf container' Security Context
## @param containerSecurityContext.seLinuxOptions [object,nullable] Set SELinux options in Telegraf container
## @param containerSecurityContext.runAsUser Set runAsUser in Telegraf container' Security Context
## @param containerSecurityContext.runAsGroup Set runAsGroup in Telegraf container' Security Context
## @param containerSecurityContext.runAsNonRoot Set runAsNonRoot in Telegraf container' Security Context
## @param containerSecurityContext.readOnlyRootFilesystem Set readOnlyRootFilesystem in Telegraf container' Security Context
## @param containerSecurityContext.privileged Set privileged in Telegraf container' Security Context
## @param containerSecurityContext.allowPrivilegeEscalation Set allowPrivilegeEscalation in Telegraf container' Security Context
## @param containerSecurityContext.capabilities.drop List of capabilities to be dropped in Telegraf container
## @param containerSecurityContext.seccompProfile.type Set seccomp profile in Telegraf container
##
containerSecurityContext:
  enabled: true
  seLinuxOptions: {}
  runAsUser: 1001
  runAsGroup: 1001
  runAsNonRoot: true
  readOnlyRootFilesystem: true
  privileged: false
  allowPrivilegeEscalation: false
  capabilities:
    drop: ["ALL"]
  seccompProfile:
    type: "RuntimeDefault"
## @param command Override default Telegraf container command (useful when using custom images)
##
command: []
## @param args Override default Telegraf container args (useful when using custom images)
##
args: []
## @param automountServiceAccountToken Mount Service Account token in Telegraf pods
##
automountServiceAccountToken: false
## @param hostAliases Telegraf pods host aliases
## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
##
hostAliases: []
## @param deploymentAnnotations Annotations for Telegraf deployment
## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
##
deploymentAnnotations: {}
## @param podLabels Extra labels for Telegraf pods
## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
##
podLabels: {}
## @param podAnnotations Annotations for Telegraf pods
## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
##
podAnnotations: {}
## @param podAffinityPreset Pod affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
##
podAffinityPreset: ""
## @param podAntiAffinityPreset Pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
##
podAntiAffinityPreset: soft
## Node affinity preset
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
##
nodeAffinityPreset:
  ## @param nodeAffinityPreset.type Node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
  ##
  type: ""
  ## @param nodeAffinityPreset.key Node label key to match. Ignored if `affinity` is set
  ##
  key: ""
  ## @param nodeAffinityPreset.values Node label values to match. Ignored if `affinity` is set
  ## E.g.
  ## values:
  ##   - e2e-az1
  ##   - e2e-az2
  ##
  values: []
## @param affinity Affinity for Telegraf pods assignment
## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
## NOTE: `podAffinityPreset`, `podAntiAffinityPreset`, and `nodeAffinityPreset` will be ignored when it's set
##
affinity: {}
## @param nodeSelector Node labels for Telegraf pods assignment
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
##
nodeSelector: {}
## @param tolerations Tolerations for Telegraf pods assignment
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
##
tolerations: []
## @param updateStrategy.type Telegraf deployment strategy type
## ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
##
updateStrategy:
  ## Can be set to RollingUpdate or Recreate
  ##
  type: RollingUpdate
## @param priorityClassName Telegraf pods' priorityClassName
##
priorityClassName: ""
## @param topologySpreadConstraints Topology Spread Constraints for Telegraf pod assignment spread across your cluster among failure-domains
## Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/#spread-constraints-for-pods
##
topologySpreadConstraints: []
## @param schedulerName Name of the k8s scheduler (other than default) for Telegraf pods
## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
##
schedulerName: ""
## @param terminationGracePeriodSeconds Seconds Telegraf pods need to terminate gracefully
## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods
##
terminationGracePeriodSeconds: ""
## @param lifecycleHooks for Telegraf containers to automate configuration before or after startup
##
lifecycleHooks: {}
## @param extraEnvVars Array with extra environment variables to add to Telegraf containers
## e.g:
## extraEnvVars:
##   - name: FOO
##     value: "bar"
##
extraEnvVars: []
## @param extraEnvVarsCM Name of existing ConfigMap containing extra env vars for Telegraf containers
##
extraEnvVarsCM: ""
## @param extraEnvVarsSecret Name of existing Secret containing extra env vars for Telegraf containers
##
extraEnvVarsSecret: ""
## @param extraVolumes Optionally specify extra list of additional volumes for the Telegraf pods
##
extraVolumes: []
## @param extraVolumeMounts Optionally specify extra list of additional volumeMounts for the Telegraf containers
##
extraVolumeMounts: []
## @param sidecars Add additional sidecar containers to the Telegraf pods
## e.g:
## sidecars:
##   - name: your-image-name
##     image: your-image
##     imagePullPolicy: Always
##     ports:
##       - name: portname
##         containerPort: 1234
##
sidecars: []
## @param initContainers Add additional init containers to the Telegraf pods
## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
## e.g:
## initContainers:
##  - name: your-image-name
##    image: your-image
##    imagePullPolicy: Always
##    command: ['sh', '-c', 'echo "hello world"']
##
initContainers: []
## Pod Disruption Budget configuration
## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb
## @param pdb.create Enable/disable a Pod Disruption Budget creation
## @param pdb.minAvailable Minimum number/percentage of pods that should remain scheduled
## @param pdb.maxUnavailable Maximum number/percentage of pods that may be made unavailable. Defaults to `1` if both `pdb.minAvailable` and `pdb.maxUnavailable` are empty.
##
pdb:
  create: true
  minAvailable: ""
  maxUnavailable: ""
## Autoscaling configuration
## ref: https://kubernetes.io/docs/concepts/workloads/autoscaling/
##
autoscaling:
  ## @param autoscaling.vpa.enabled Enable VPA for Telegraf pods
  ## @param autoscaling.vpa.annotations Annotations for VPA resource
  ## @param autoscaling.vpa.controlledResources VPA List of resources that the vertical pod autoscaler can control. Defaults to cpu and memory
  ## @param autoscaling.vpa.maxAllowed VPA Max allowed resources for the pod
  ## @param autoscaling.vpa.minAllowed VPA Min allowed resources for the pod
  ##
  vpa:
    enabled: false
    annotations: {}
    controlledResources: []
    maxAllowed: {}
    minAllowed: {}
    ## @param autoscaling.vpa.updatePolicy.updateMode Autoscaling update policy
    ## Specifies whether recommended updates are applied when a Pod is started and whether recommended updates are applied during the life of a Pod
    ## Possible values are "Off", "Initial", "Recreate", and "Auto".
    ##
    updatePolicy:
      updateMode: Auto
  ## @param autoscaling.hpa.enabled Enable HPA for Telegraf pods
  ## @param autoscaling.hpa.minReplicas Minimum number of replicas
  ## @param autoscaling.hpa.maxReplicas Maximum number of replicas
  ## @param autoscaling.hpa.targetCPU Target CPU utilization percentage
  ## @param autoscaling.hpa.targetMemory Target Memory utilization percentage
  ##
  hpa:
    enabled: false
    minReplicas: 1
    maxReplicas: 3
    targetCPU: 75
    targetMemory: ""

## @section Traffic Exposure Parameters
##

## Telegraf service parameters
##
service:
  ## @param service.type Telegraf service type
  ##
  type: ClusterIP
  ## Service ports to expose
  ## @param service.exposeCiscoTelemetry Add the Cisco Telemetry MDT container port to the service.
  ## @param service.exposeHealth Add the Telegraf internal health check API container port to the service.
  ## @param service.exposeHttp Add the Telegraf http container port to the service.
  ## @param service.exposeHttpV2 Add the Telegraf http_v2 container port to the service.
  ## @param service.exposeInfluxdb Add the influxdb container port to the service.
  ## @param service.exposeInfluxdbV2 Add the influxdb_v2 container port to the service.
  ## @param service.exposeOtlpGrpc Add the opentelemetry gRPC container port to the service.
  ## @param service.exposeOtlpHttp Add the opentelemetry HTTP container port to the service.
  ## @param service.exposePrometheus Add the prometheus container port to the service.
  ## @param service.exposeSocket Add the socket container port to the service.
  ## @param service.exposeStatsd Add the statsd container port to the service.
  ## @param service.exposeSyslog Add the syslog container port to the service.
  ## @param service.exposeTcp Add the tcp container port to the service.
  ## @param service.exposeUdp Add the udp container port to the service.
  ## @param service.exposeWebhooks Add the webhooks container port to the service.
  ##
  exposeCiscoTelemetry: false
  exposeHealth: false
  exposeHttp: false
  exposeHttpV2: true
  exposeInfluxdb: false
  exposeInfluxdbV2: false
  exposeOtlpGrpc: false
  exposeOtlpHttp: false
  exposePrometheus: false
  exposeSocket: false
  exposeStatsd: false
  exposeSyslog: false
  exposeTcp: false
  exposeUdp: false
  exposeWebhooks: false
  ## @param service.ports.cisco_telemetry Telegraf cisco_telemetry service port for collecting Cisco telemetry data.
  ## @param service.ports.health Telegraf internal health check API service port.
  ## @param service.ports.http Telegraf HTTP service port (deprecated).
  ## @param service.ports.http_v2 Telegraf HTTP service port.
  ## @param service.ports.influxdb Telegraf influxdb service port for receiving InfluxDB line protocol metrics.
  ## @param service.ports.influxdb_v2 Telegraf influxdb_v2 service port for receiving InfluxDB v2 line protocol metrics.
  ## @param service.ports.otlp_grpc Telegraf opentelemetry gRPC service port.
  ## @param service.ports.otlp_http Telegraf opentelemetry HTTP service port.
  ## @param service.ports.prometheus Telegraf prometheus service port for exposing metrics to be scraped.
  ## @param service.ports.statsd Telegraf statsd service port for collecting StatsD metrics.
  ## @param service.ports.syslog Telegraf syslog service port for collecting Syslog messages.
  ## @param service.ports.socket Telegraf socket service port.
  ## @param service.ports.tcp Telegraf tcp service port for receiving metrics via TCP.
  ## @param service.ports.udp Telegraf udp service port for receiving metrics via UDP.
  ## @param service.ports.webhooks Telegraf webhooks service port for receiving data from webhooks.
  ##
  ports:
    cisco_telemetry: 57500
    health: 8888
    http: 8080
    http_v2: 8081
    influxdb: 8086
    influxdb_v2: 8087
    otlp_grpc: 4317
    otlp_http: 4318
    prometheus: 9273
    socket: 9125
    statsd: 8125
    syslog: 514
    tcp: 9123
    udp: 9124
    webhooks: 8082
  ## Node ports to expose
  ## @param service.nodePorts.cisco_telemetry Node port for Telegraf cisco_telemetry.
  ## @param service.nodePorts.health Node port for Telegraf internal health check API.
  ## @param service.nodePorts.http Node port for Telegraf HTTP.
  ## @param service.nodePorts.http_v2 Node port for Telegraf HTTP.
  ## @param service.nodePorts.influxdb Node port for Telegraf influxdb.
  ## @param service.nodePorts.influxdb_v2 Node port for Telegraf influxdb_v2.
  ## @param service.nodePorts.otlp_grpc Node port for Telegraf opentelemetry gRPC.
  ## @param service.nodePorts.otlp_http Node port for Telegraf opentelemetry HTTP.
  ## @param service.nodePorts.prometheus Node port for Telegraf prometheus.
  ## @param service.nodePorts.statsd Node port for Telegraf statsd.
  ## @param service.nodePorts.syslog Node port for Telegraf syslog.
  ## @param service.nodePorts.socket Node port for Telegraf socket.
  ## @param service.nodePorts.tcp Node port for Telegraf tcp.
  ## @param service.nodePorts.udp Node port for Telegraf udp.
  ## @param service.nodePorts.webhooks Node port for Telegraf webhooks.
  ## NOTE: choose port between <30000-32767>
  ##
  nodePorts:
    cisco_telemetry: ""
    health: ""
    http: ""
    http_v2: ""
    influxdb: ""
    influxdb_v2: ""
    otlp_grpc: ""
    otlp_http: ""
    prometheus: ""
    socket: ""
    statsd: ""
    syslog: ""
    tcp: ""
    udp: ""
    webhooks: ""
  ## @param service.clusterIP Telegraf service Cluster IP
  ## e.g.:
  ## clusterIP: None
  ##
  clusterIP: ""
  ## @param service.loadBalancerIP Telegraf service Load Balancer IP
  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-loadbalancer
  ##
  loadBalancerIP: ""
  ## @param service.loadBalancerSourceRanges Telegraf service Load Balancer sources
  ## ref: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
  ## e.g:
  ## loadBalancerSourceRanges:
  ##   - 10.10.10.0/24
  ##
  loadBalancerSourceRanges: []
  ## @param service.externalTrafficPolicy Telegraf service external traffic policy
  ## ref http://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
  ##
  externalTrafficPolicy: Cluster
  ## @param service.annotations Additional custom annotations for Telegraf service
  ##
  annotations: {}
  ## @param service.extraPorts Extra ports to expose in Telegraf service (normally used with the `sidecars` value)
  ##
  extraPorts: []
  ## @param service.sessionAffinity Control where client requests go, to the same pod or round-robin
  ## Values: ClientIP or None
  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/
  ##
  sessionAffinity: None
  ## @param service.sessionAffinityConfig Additional settings for the sessionAffinity
  ## sessionAffinityConfig:
  ##   clientIP:
  ##     timeoutSeconds: 300
  ##
  sessionAffinityConfig: {}
## Network Policies
## Ref: https://kubernetes.io/docs/concepts/services-networking/network-policies/
##
networkPolicy:
  ## @param networkPolicy.enabled Specifies whether a NetworkPolicy should be created
  ##
  enabled: true
  ## @param networkPolicy.allowExternal Don't require server label for connections
  ## The Policy model to apply. When set to false, only pods with the correct
  ## server label will have network access to the ports server is listening
  ## on. When true, server will accept connections from any source
  ## (with the correct destination port).
  ##
  allowExternal: true
  ## @param networkPolicy.allowExternalEgress Allow the pod to access any range of port and all destinations.
  ##
  allowExternalEgress: true
  ## @param networkPolicy.addExternalClientAccess Allow access from pods with client label set to "true". Ignored if `networkPolicy.allowExternal` is true.
  ##
  addExternalClientAccess: true
  ## @param networkPolicy.kubeAPIServerPorts [array] List of possible endpoints to kubernetes components like kube-apiserver or kubelet (limit to your cluster settings to increase security)
  ##
  kubeAPIServerPorts: [443, 6443, 8443, 10250]
  ## @param networkPolicy.extraIngress [array] Add extra ingress rules to the NetworkPolicy
  ## e.g:
  ## extraIngress:
  ##   - ports:
  ##       - port: 1234
  ##     from:
  ##       - podSelector:
  ##           - matchLabels:
  ##               - role: frontend
  ##       - podSelector:
  ##           - matchExpressions:
  ##               - key: role
  ##                 operator: In
  ##                 values:
  ##                   - frontend
  extraIngress: []
  ## @param networkPolicy.extraEgress [array] Add extra ingress rules to the NetworkPolicy (ignored if allowExternalEgress=true)
  ## e.g:
  ## extraEgress:
  ##   - ports:
  ##       - port: 1234
  ##     to:
  ##       - podSelector:
  ##           - matchLabels:
  ##               - role: frontend
  ##       - podSelector:
  ##           - matchExpressions:
  ##               - key: role
  ##                 operator: In
  ##                 values:
  ##                   - frontend
  ##
  extraEgress: []
  ## @param networkPolicy.ingressPodMatchLabels [object] Labels to match to allow traffic from other pods. Ignored if `networkPolicy.allowExternal` is true.
  ## e.g:
  ## ingressPodMatchLabels:
  ##   my-client: "true"
  #
  ingressPodMatchLabels: {}
  ## @param networkPolicy.ingressNSMatchLabels [object] Labels to match to allow traffic from other namespaces. Ignored if `networkPolicy.allowExternal` is true.
  ## @param networkPolicy.ingressNSPodMatchLabels [object] Pod labels to match to allow traffic from other namespaces. Ignored if `networkPolicy.allowExternal` is true.
  ##
  ingressNSMatchLabels: {}
  ingressNSPodMatchLabels: {}

## @section Other Parameters
##

## RBAC configuration
##
rbac:
  ## @param rbac.create Specifies whether RBAC resources should be created
  ##
  create: false
  ## @param rbac.clusterWideAccess Create only for the release namespace or cluster wide (Role vs ClusterRole)
  ##
  clusterWideAccess: false
  ## @param rbac.rules Custom RBAC rules to set
  ## e.g:
  ## rules:
  ##   - apiGroups:
  ##       - ""
  ##     resources:
  ##       - pods
  ##     verbs:
  ##       - get
  ##       - list
  ##
  rules: []
  # When using the prometheus input to scrape all pods you need extra rules set to the ClusterRole to be
  # able to scan the pods for scraping labels. The following rules have been taken from:
  # https://github.com/helm/charts/blob/master/stable/prometheus/templates/server-clusterrole.yaml#L8-L46
  #    - apiGroups:
  #        - ""
  #      resources:
  #        - nodes
  #        - nodes/proxy
  #        - nodes/metrics
  #        - services
  #        - endpoints
  #        - pods
  #        - ingresses
  #        - configmaps
  #      verbs:
  #        - get
  #        - list
  #        - watch
  #    - apiGroups:
  #        - "extensions"
  #      resources:
  #        - ingresses/status
  #        - ingresses
  #      verbs:
  #        - get
  #        - list
  #        - watch
  #    - nonResourceURLs:
  #        - "/metrics"
  #      verbs:
  #        - get

## ServiceAccount configuration
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
##
serviceAccount:
  ## @param serviceAccount.create Specifies whether a ServiceAccount should be created
  ##
  create: true
  ## @param serviceAccount.name The name of the ServiceAccount to use.
  ## If not set and create is true, a name is generated using the common.names.fullname template
  ##
  name: ""
  ## @param serviceAccount.annotations Additional Service Account annotations (evaluated as a template)
  ##
  annotations: {}
  ## @param serviceAccount.automountServiceAccountToken Automount service account token for the server service account
  ##
  automountServiceAccountToken: false

## Prometheus metrics
##
metrics:
  ## @param metrics.enabled Enable the export of Prometheus metrics
  ## It requires the Prometheus Client in Telegraf configuration:
  ##  outputs:
  ##  - prometheus_client:
  ##      listen: ":9273"
  ##      expiration_interval: "60s"
  ##  service:
  ##    exposePrometheus: true
  ##
  enabled: false
  ## @param metrics.annotations [object] Annotations for the server service in order to scrape metrics
  annotations: {}
  ## Prometheus Operator ServiceMonitor configuration
  ##
  serviceMonitor:
    ## @param metrics.serviceMonitor.enabled if `true`, creates a Prometheus Operator ServiceMonitor (also requires `metrics.enabled` to be `true`)
    ##
    enabled: false
    ## @param metrics.serviceMonitor.namespace Namespace in which Prometheus is running
    ##
    namespace: ""
    ## @param metrics.serviceMonitor.annotations Additional custom annotations for the ServiceMonitor
    ##
    annotations: {}
    ## @param metrics.serviceMonitor.labels Extra labels for the ServiceMonitor
    ##
    labels: {}
    ## @param metrics.serviceMonitor.jobLabel The name of the label on the target service to use as the job name in Prometheus
    ##
    jobLabel: ""
    ## @param metrics.serviceMonitor.honorLabels honorLabels chooses the metric's labels on collisions with target labels
    ##
    honorLabels: false
    ## @param metrics.serviceMonitor.tlsConfig [object] TLS configuration used for scrape endpoints used by Prometheus
    ##
    tlsConfig: {}
    ## @param metrics.serviceMonitor.interval Interval at which metrics should be scraped.
    ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint
    ## e.g:
    ## interval: 10s
    ##
    interval: ""
    ## @param metrics.serviceMonitor.scrapeTimeout Timeout after which the scrape is ended
    ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint
    ## e.g:
    ## scrapeTimeout: 10s
    ##
    scrapeTimeout: ""
    ## @param metrics.serviceMonitor.metricRelabelings Specify additional relabeling of metrics
    ##
    metricRelabelings: []
    ## @param metrics.serviceMonitor.relabelings Specify general relabeling
    ##
    relabelings: []
    ## @param metrics.serviceMonitor.selector Prometheus instance selector labels
    ## ref: https://github.com/bitnami/charts/tree/main/bitnami/prometheus-operator#prometheus-configuration
    ## selector:
    ##   prometheus: my-prometheus
    ##
    selector: {}

