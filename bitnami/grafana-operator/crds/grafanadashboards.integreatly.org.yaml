# Source: https://raw.githubusercontent.com/grafana/grafana-operator/v{version}/deploy/helm/grafana-operator/crds/grafana.integreatly.org_grafanadashboards.yaml
# Version: 5.16.0
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.3
  name: grafanadashboards.grafana.integreatly.org
spec:
  group: grafana.integreatly.org
  names:
    categories:
    - grafana-operator
    kind: GrafanaDashboard
    listKind: GrafanaDashboardList
    plural: grafanadashboards
    singular: grafanadashboard
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.NoMatchingInstances
      name: No matching instances
      type: boolean
    - format: date-time
      jsonPath: .status.lastResync
      name: Last resync
      type: date
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: GrafanaDashboard is the Schema for the grafanadashboards API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: GrafanaDashboardSpec defines the desired state of GrafanaDashboard
            properties:
              allowCrossNamespaceImport:
                default: false
                description: Allow the Operator to match this resource with Grafanas
                  outside the current namespace
                type: boolean
              configMapRef:
                description: dashboard from configmap
                properties:
                  key:
                    description: The key to select.
                    type: string
                  name:
                    default: ""
                    description: |-
                      Name of the referent.
                      This field is effectively required, but due to backwards compatibility is
                      allowed to be empty. Instances of this type with an empty value here are
                      almost certainly wrong.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                  optional:
                    description: Specify whether the ConfigMap or its key must be
                      defined
                    type: boolean
                required:
                - key
                type: object
                x-kubernetes-map-type: atomic
              contentCacheDuration:
                description: Cache duration for dashboards fetched from URLs
                type: string
              datasources:
                description: maps required data sources to existing ones
                items:
                  properties:
                    datasourceName:
                      type: string
                    inputName:
                      type: string
                  required:
                  - datasourceName
                  - inputName
                  type: object
                type: array
              envFrom:
                description: environments variables from secrets or config maps
                items:
                  properties:
                    configMapKeyRef:
                      description: Selects a key of a ConfigMap.
                      properties:
                        key:
                          description: The key to select.
                          type: string
                        name:
                          default: ""
                          description: |-
                            Name of the referent.
                            This field is effectively required, but due to backwards compatibility is
                            allowed to be empty. Instances of this type with an empty value here are
                            almost certainly wrong.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          type: string
                        optional:
                          description: Specify whether the ConfigMap or its key must
                            be defined
                          type: boolean
                      required:
                      - key
                      type: object
                      x-kubernetes-map-type: atomic
                    secretKeyRef:
                      description: Selects a key of a Secret.
                      properties:
                        key:
                          description: The key of the secret to select from.  Must
                            be a valid secret key.
                          type: string
                        name:
                          default: ""
                          description: |-
                            Name of the referent.
                            This field is effectively required, but due to backwards compatibility is
                            allowed to be empty. Instances of this type with an empty value here are
                            almost certainly wrong.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          type: string
                        optional:
                          description: Specify whether the Secret or its key must
                            be defined
                          type: boolean
                      required:
                      - key
                      type: object
                      x-kubernetes-map-type: atomic
                  type: object
                type: array
              envs:
                description: environments variables as a map
                items:
                  properties:
                    name:
                      type: string
                    value:
                      description: Inline env value
                      type: string
                    valueFrom:
                      description: Reference on value source, might be the reference
                        on a secret or config map
                      properties:
                        configMapKeyRef:
                          description: Selects a key of a ConfigMap.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                            optional:
                              description: Specify whether the ConfigMap or its key
                                must be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                        secretKeyRef:
                          description: Selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                      type: object
                  required:
                  - name
                  type: object
                type: array
              folder:
                description: folder assignment for dashboard
                type: string
              folderRef:
                description: Name of a `GrafanaFolder` resource in the same namespace
                type: string
              folderUID:
                description: UID of the target folder for this dashboard
                type: string
              grafanaCom:
                description: grafana.com/dashboards
                properties:
                  id:
                    type: integer
                  revision:
                    type: integer
                required:
                - id
                type: object
              gzipJson:
                description: GzipJson the dashboard's JSON compressed with Gzip. Base64-encoded
                  when in YAML.
                format: byte
                type: string
              instanceSelector:
                description: Selects Grafana instances for import
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: |-
                        A label selector requirement is a selector that contains values, a key, and an operator that
                        relates the key and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: |-
                            operator represents a key's relationship to a set of values.
                            Valid operators are In, NotIn, Exists and DoesNotExist.
                          type: string
                        values:
                          description: |-
                            values is an array of string values. If the operator is In or NotIn,
                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                            the values array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: |-
                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                    type: object
                type: object
                x-kubernetes-map-type: atomic
                x-kubernetes-validations:
                - message: spec.instanceSelector is immutable
                  rule: self == oldSelf
              json:
                description: dashboard json
                type: string
              jsonnet:
                description: Jsonnet
                type: string
              jsonnetLib:
                description: Jsonnet project build
                properties:
                  fileName:
                    type: string
                  gzipJsonnetProject:
                    format: byte
                    type: string
                  jPath:
                    items:
                      type: string
                    type: array
                required:
                - fileName
                - gzipJsonnetProject
                type: object
              plugins:
                description: plugins
                items:
                  properties:
                    name:
                      type: string
                    version:
                      type: string
                  required:
                  - name
                  - version
                  type: object
                type: array
              resyncPeriod:
                default: 10m0s
                description: How often the resource is synced, defaults to 10m0s if
                  not set
                format: duration
                pattern: ^([0-9]+(\.[0-9]+)?(ns|us|µs|ms|s|m|h))+$
                type: string
              uid:
                description: Manually specify the uid for the dashboard, overwrites
                  uids already present in the json model
                type: string
                x-kubernetes-validations:
                - message: spec.uid is immutable
                  rule: self == oldSelf
              url:
                description: dashboard url
                type: string
              urlAuthorization:
                description: authorization options for dashboard from url
                properties:
                  basicAuth:
                    properties:
                      password:
                        description: SecretKeySelector selects a key of a Secret.
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                      username:
                        description: SecretKeySelector selects a key of a Secret.
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                    type: object
                type: object
            required:
            - instanceSelector
            type: object
            x-kubernetes-validations:
            - message: Only one of folderUID or folderRef can be declared at the same
                time
              rule: (has(self.folderUID) && !(has(self.folderRef))) || (has(self.folderRef)
                && !(has(self.folderUID))) || !(has(self.folderRef) && (has(self.folderUID)))
            - message: folder field cannot be set when folderUID or folderRef is already
                declared
              rule: (has(self.folder) && !(has(self.folderRef) || has(self.folderUID)))
                || !(has(self.folder))
            - message: spec.uid is immutable
              rule: ((!has(oldSelf.uid) && !has(self.uid)) || (has(oldSelf.uid) &&
                has(self.uid)))
            - message: disabling spec.allowCrossNamespaceImport requires a recreate
                to ensure desired state
              rule: '!oldSelf.allowCrossNamespaceImport || (oldSelf.allowCrossNamespaceImport
                && self.allowCrossNamespaceImport)'
          status:
            description: GrafanaDashboardStatus defines the observed state of GrafanaDashboard
            properties:
              NoMatchingInstances:
                description: The dashboard instanceSelector can't find matching grafana
                  instances
                type: boolean
              conditions:
                description: Results when synchonizing resource with Grafana instances
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              contentCache:
                format: byte
                type: string
              contentTimestamp:
                format: date-time
                type: string
              contentUrl:
                type: string
              hash:
                type: string
              lastResync:
                description: Last time the resource was synchronized with Grafana
                  instances
                format: date-time
                type: string
              uid:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
