# Copyright Broadcom, Inc. All Rights Reserved.
# SPDX-License-Identifier: APACHE-2.0

## @section Global parameters
## Global Docker image parameters
## Please, note that this will override the image parameters, including dependencies, configured to use the global value
## Current available global Docker image parameters: imageRegistry, imagePullSecrets and storageClass
##

## @param global.imageRegistry Global Docker image registry
## @param global.imagePullSecrets Global Docker registry secret names as an array
## @param global.defaultStorageClass Global default StorageClass for Persistent Volume(s)
## @param global.storageClass DEPRECATED: use global.defaultStorageClass instead
##
global:
  imageRegistry: ""
  ## E.g.
  ## imagePullSecrets:
  ##   - myRegistryKeySecretName
  ##
  imagePullSecrets: []
  defaultStorageClass: ""
  storageClass: ""
  ## Security parameters
  ##
  security:
    ## @param global.security.allowInsecureImages Allows skipping image verification
    allowInsecureImages: false
  ## Compatibility adaptations for Kubernetes platforms
  ##
  compatibility:
    ## Compatibility adaptations for Openshift
    ##
    openshift:
      ## @param global.compatibility.openshift.adaptSecurityContext Adapt the securityContext sections of the deployment to make them compatible with Openshift restricted-v2 SCC: remove runAsUser, runAsGroup and fsGroup and let the platform use their allowed default IDs. Possible values: auto (apply if the detected running cluster is Openshift), force (perform the adaptation always), disabled (do not perform adaptation)
      ##
      adaptSecurityContext: auto
## @section Common parameters
##

## @param kubeVersion Override Kubernetes version
##
kubeVersion: ""
## @param nameOverride String to partially override common.names.name
##
nameOverride: ""
## @param fullnameOverride String to fully override common.names.fullname
##
fullnameOverride: ""
## @param namespaceOverride String to fully override common.names.namespace
##
namespaceOverride: ""
## @param commonLabels Labels to add to all deployed objects
##
commonLabels: {}
## @param commonAnnotations Annotations to add to all deployed objects
##
commonAnnotations: {}
## @param clusterDomain Kubernetes cluster domain name
##
clusterDomain: cluster.local
## @param extraDeploy Array of extra objects to deploy with the release
##
extraDeploy: []
## Enable diagnostic mode in the deployment
##
diagnosticMode:
  ## @param diagnosticMode.enabled Enable diagnostic mode (all probes will be disabled and the command will be overridden)
  ##
  enabled: false
  ## @param diagnosticMode.command Command to override all containers in the deployment
  ##
  command:
    - sleep
  ## @param diagnosticMode.args Args to override all containers in the deployment
  ##
  args:
    - infinity
## @section MLflow common Parameters
##

## Bitnami mlflow image
## ref: https://hub.docker.com/r/bitnami/mlflow/tags/
## @param image.registry [default: REGISTRY_NAME] mlflow image registry
## @param image.repository [default: REPOSITORY_NAME/mlflow] mlflow image repository
## @skip image.tag mlflow image tag (immutable tags are recommended)
## @param image.digest mlflow image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag image tag (immutable tags are recommended)
## @param image.pullPolicy mlflow image pull policy
## @param image.pullSecrets mlflow image pull secrets
## @param image.debug Enable mlflow image debug mode
##
image:
  registry: docker.io
  repository: bitnami/mlflow
  tag: 2.19.0-debian-12-r1
  digest: ""
  ## Specify a imagePullPolicy
  ## ref: https://kubernetes.io/docs/concepts/containers/images/#pre-pulled-images
  ##
  pullPolicy: IfNotPresent
  ## Optionally specify an array of imagePullSecrets.
  ## Secrets must be manually created in the namespace.
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  ## e.g:
  ## pullSecrets:
  ##   - myRegistryKeySecretName
  ##
  pullSecrets: []
  ## Enable debug mode
  ##
  debug: false
## Bitnami git image version
## ref: https://hub.docker.com/r/bitnami/git/tags/
## @param gitImage.registry [default: REGISTRY_NAME] Git image registry
## @param gitImage.repository [default: REPOSITORY_NAME/git] Git image repository
## @skip gitImage.tag Git image tag (immutable tags are recommended)
## @param gitImage.digest Git image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag
## @param gitImage.pullPolicy Git image pull policy
## @param gitImage.pullSecrets Specify docker-registry secret names as an array
##
gitImage:
  registry: docker.io
  repository: bitnami/git
  tag: 2.48.1-debian-12-r0
  digest: ""
  pullPolicy: IfNotPresent
  ## Optionally specify an array of imagePullSecrets.
  ## Secrets must be manually created in the namespace.
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  ## Example:
  ## pullSecrets:
  ##   - myRegistryKeySecretName
  ##
  pullSecrets: []
## @section MLflow Tracking parameters
##
tracking:
  ## @param tracking.enabled Enable Tracking server
  ##
  enabled: true
  ## @param tracking.replicaCount Number of mlflow replicas to deploy
  ##
  replicaCount: 1
  ## @param tracking.host mlflow tracking listening host. Set to "[::]" to use ipv6. 
  ## 
  host: "0.0.0.0"
  ## @param tracking.containerPorts.http mlflow HTTP container port
  ##
  containerPorts:
    http: 5000
  ## Configure extra options for mlflow containers' liveness and readiness probes
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
  ## @param tracking.livenessProbe.enabled Enable livenessProbe on mlflow containers
  ## @param tracking.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
  ## @param tracking.livenessProbe.periodSeconds Period seconds for livenessProbe
  ## @param tracking.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
  ## @param tracking.livenessProbe.failureThreshold Failure threshold for livenessProbe
  ## @param tracking.livenessProbe.successThreshold Success threshold for livenessProbe
  ##
  livenessProbe:
    enabled: true
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 5
    successThreshold: 1
  ## @param tracking.readinessProbe.enabled Enable readinessProbe on mlflow containers
  ## @param tracking.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
  ## @param tracking.readinessProbe.periodSeconds Period seconds for readinessProbe
  ## @param tracking.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
  ## @param tracking.readinessProbe.failureThreshold Failure threshold for readinessProbe
  ## @param tracking.readinessProbe.successThreshold Success threshold for readinessProbe
  ##
  readinessProbe:
    enabled: true
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 5
    successThreshold: 1
  ## @param tracking.startupProbe.enabled Enable startupProbe on mlflow containers
  ## @param tracking.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
  ## @param tracking.startupProbe.periodSeconds Period seconds for startupProbe
  ## @param tracking.startupProbe.timeoutSeconds Timeout seconds for startupProbe
  ## @param tracking.startupProbe.failureThreshold Failure threshold for startupProbe
  ## @param tracking.startupProbe.successThreshold Success threshold for startupProbe
  ##
  startupProbe:
    enabled: false
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 5
    successThreshold: 1
  ## @param tracking.customLivenessProbe Custom livenessProbe that overrides the default one
  ##
  customLivenessProbe: {}
  ## @param tracking.customReadinessProbe Custom readinessProbe that overrides the default one
  ##
  customReadinessProbe: {}
  ## @param tracking.customStartupProbe Custom startupProbe that overrides the default one
  ##
  customStartupProbe: {}
  ## mlflow resource requests and limits
  ## ref: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
  ## @param tracking.resourcesPreset Set container resources according to one common preset (allowed values: none, nano, micro, small, medium, large, xlarge, 2xlarge). This is ignored if tracking.resources is set (tracking.resources is recommended for production).
  ## More information: https://github.com/bitnami/charts/blob/main/bitnami/common/templates/_resources.tpl#L15
  ##
  resourcesPreset: "medium"
  ## @param tracking.resources Set container requests and limits for different resources like CPU or memory (essential for production workloads)
  ## Example:
  ## resources:
  ##   requests:
  ##     cpu: 2
  ##     memory: 512Mi
  ##   limits:
  ##     cpu: 3
  ##     memory: 1024Mi
  ##
  resources: {}
  ## Configure Pods Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param tracking.podSecurityContext.enabled Enabled mlflow pods' Security Context
  ## @param tracking.podSecurityContext.fsGroupChangePolicy Set filesystem group change policy
  ## @param tracking.podSecurityContext.sysctls Set kernel settings using the sysctl interface
  ## @param tracking.podSecurityContext.supplementalGroups Set filesystem extra groups
  ## @param tracking.podSecurityContext.fsGroup Set mlflow pod's Security Context fsGroup
  ##
  podSecurityContext:
    enabled: true
    fsGroupChangePolicy: Always
    sysctls: []
    supplementalGroups: []
    fsGroup: 1001
  ## Configure Container Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
  ## @param tracking.containerSecurityContext.enabled Enabled containers' Security Context
  ## @param tracking.containerSecurityContext.seLinuxOptions [object,nullable] Set SELinux options in container
  ## @param tracking.containerSecurityContext.runAsUser Set containers' Security Context runAsUser
  ## @param tracking.containerSecurityContext.runAsGroup Set containers' Security Context runAsGroup
  ## @param tracking.containerSecurityContext.privileged Set containers' Security Context privileged
  ## @param tracking.containerSecurityContext.runAsNonRoot Set containers' Security Context runAsNonRoot
  ## @param tracking.containerSecurityContext.readOnlyRootFilesystem Set containers' Security Context readOnlyRootFilesystem
  ## @param tracking.containerSecurityContext.allowPrivilegeEscalation Set container's privilege escalation
  ## @param tracking.containerSecurityContext.capabilities.drop Set container's Security Context runAsNonRoot
  ## @param tracking.containerSecurityContext.seccompProfile.type Set container's Security Context seccomp profile
  ##
  containerSecurityContext:
    enabled: true
    seLinuxOptions: {}
    runAsUser: 1001
    runAsGroup: 1001
    runAsNonRoot: true
    privileged: false
    readOnlyRootFilesystem: true
    allowPrivilegeEscalation: false
    capabilities:
      drop: ["ALL"]
    seccompProfile:
      type: "RuntimeDefault"
  ## Basic authentication
  ## @param tracking.auth.enabled Enable basic authentication
  ## @param tracking.auth.username Admin username
  ## @param tracking.auth.password Admin password
  ## @param tracking.auth.existingSecret Name of a secret containing the admin password
  ## @param tracking.auth.existingSecretUserKey Key inside the secret containing the admin password
  ## @param tracking.auth.existingSecretPasswordKey Key inside the secret containing the admin password
  ## @param tracking.auth.extraOverrides Add extra settings to the basic_auth.ini file
  ## @param tracking.auth.overridesConfigMap Name of a ConfigMap containing overrides to the basic_auth.ini file
  auth:
    enabled: true
    username: user
    password: ""
    existingSecret: ""
    existingSecretUserKey: ""
    existingSecretPasswordKey: ""
    extraOverrides: {}
    overridesConfigMap: ""
  ## TLS configuration
  ##
  tls:
    ## @param tracking.tls.enabled Enable TLS traffic support
    ##
    enabled: false
    ## @param tracking.tls.autoGenerated Generate automatically self-signed TLS certificates
    ##
    autoGenerated: false
    ## @param tracking.tls.certificatesSecret Name of an existing secret that contains the certificates
    ##
    certificatesSecret: ""
    ## @param tracking.tls.certFilename Certificate filename
    ##
    certFilename: ""
    ## @param tracking.tls.certKeyFilename Certificate key filename
    ##
    certKeyFilename: ""
    ## @param tracking.tls.certCAFilename CA Certificate filename
    ## If provided, PostgreSQL will authenticate TLS/SSL clients by requesting them a certificate
    ## ref: https://www.postgresql.org/docs/9.6/auth-methods.html
    ##
    certCAFilename: ""
  ## @param tracking.command Override default container command (useful when using custom images)
  ##
  command: []
  ## @param tracking.args Override default container args (useful when using custom images)
  ##
  args: []
  ## @param tracking.extraArgs Add extra arguments together with the default ones
  ##
  extraArgs: []
  ## @param tracking.runUpgradeDB Add an init container to run mlflow db upgrade
  ##
  runUpgradeDB: false
  ## @param tracking.automountServiceAccountToken Mount Service Account token in pod
  ##
  automountServiceAccountToken: false
  ## @param tracking.hostAliases mlflow pods host aliases
  ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
  ##
  hostAliases: []
  ## @param tracking.podLabels Extra labels for mlflow pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  ##
  podLabels: {}
  ## @param tracking.podAnnotations Annotations for mlflow pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  podAnnotations: {}
  ## @param tracking.podAffinityPreset Pod affinity preset. Ignored if `.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAffinityPreset: ""
  ## @param tracking.podAntiAffinityPreset Pod anti-affinity preset. Ignored if `.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAntiAffinityPreset: soft
  ## Pod Disruption Budget configuration
  ## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb
  ## @param tracking.pdb.create Enable/disable a Pod Disruption Budget creation
  ## @param tracking.pdb.minAvailable Minimum number/percentage of pods that should remain scheduled
  ## @param tracking.pdb.maxUnavailable Maximum number/percentage of pods that may be made unavailable
  ##
  pdb:
    create: true
    minAvailable: ""
    maxUnavailable: ""
  ## Autoscaling configuration
  ## ref: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
  ##
  autoscaling:
    hpa:
      ## @param tracking.autoscaling.hpa.enabled Enable HPA
      ##
      enabled: false
      ## @param tracking.autoscaling.hpa.minReplicas Minimum number of replicas
      ##
      minReplicas: ""
      ## @param tracking.autoscaling.hpa.maxReplicas Maximum number of replicas
      ##
      maxReplicas: ""
      ## @param tracking.autoscaling.hpa.targetCPU Target CPU utilization percentage
      ##
      targetCPU: ""
      ## @param tracking.autoscaling.hpa.targetMemory Target Memory utilization percentage
      ##
      targetMemory: ""
    vpa:
      ## @param tracking.autoscaling.vpa.enabled Enable VPA
      ##
      enabled: false
      ## @param tracking.autoscaling.vpa.annotations Annotations for VPA resource
      ##
      annotations: {}
      ## @param tracking.autoscaling.vpa.controlledResources VPA List of resources that the vertical pod autoscaler can control. Defaults to cpu and memory
      ##
      controlledResources: []
      ## @param tracking.autoscaling.vpa.maxAllowed VPA Max allowed resources for the pod
      ## cpu: 200m
      ## memory: 100Mi
      maxAllowed: {}
      ## @param tracking.autoscaling.vpa.minAllowed VPA Min allowed resources for the pod
      ## cpu: 200m
      ## memory: 100Mi
      minAllowed: {}
      updatePolicy:
        ## @param tracking.autoscaling.vpa.updatePolicy.updateMode Autoscaling update policy Specifies whether recommended updates are applied when a Pod is started and whether recommended updates are applied during the life of a Pod
        ## Possible values are "Off", "Initial", "Recreate", and "Auto".
        ##
        updateMode: Auto
  ## Node .affinity preset
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
  ##
  nodeAffinityPreset:
    ## @param tracking.nodeAffinityPreset.type Node affinity preset type. Ignored if `.affinity` is set. Allowed values: `soft` or `hard`
    ##
    type: ""
    ## @param tracking.nodeAffinityPreset.key Node label key to match. Ignored if `.affinity` is set
    ##
    key: ""
    ## @param tracking.nodeAffinityPreset.values Node label values to match. Ignored if `.affinity` is set
    ## E.g.
    ## values:
    ##   - e2e-az1
    ##   - e2e-az2
    ##
    values: []
  ## @param tracking.affinity Affinity for mlflow pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ## NOTE: `.podAffinityPreset`, `.podAntiAffinityPreset`, and `.nodeAffinityPreset` will be ignored when it's set
  ##
  affinity: {}
  ## @param tracking.nodeSelector Node labels for mlflow pods assignment
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/assign-pods-nodes/
  ##
  nodeSelector: {}
  ## @param tracking.tolerations Tolerations for mlflow pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []
  ## @param tracking.updateStrategy.type mlflow statefulset strategy type
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies
  ##
  updateStrategy:
    ## StrategyType
    ## Can be set to RollingUpdate or OnDelete
    ##
    type: RollingUpdate
  ## @param tracking.priorityClassName mlflow pods' priorityClassName
  ##
  priorityClassName: ""
  ## @param tracking.topologySpreadConstraints Topology Spread Constraints for pod assignment spread across your cluster among failure-domains. Evaluated as a template
  ## Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/#spread-constraints-for-pods
  ##
  topologySpreadConstraints: []
  ## @param tracking.schedulerName Name of the k8s scheduler (other than default) for mlflow pods
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  schedulerName: ""
  ## @param tracking.terminationGracePeriodSeconds Seconds Redmine pod needs to terminate gracefully
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods
  ##
  terminationGracePeriodSeconds: ""
  ## @param tracking.lifecycleHooks for the mlflow container(s) to automate configuration before or after startup
  ##
  lifecycleHooks: {}
  ## @param tracking.extraEnvVars Array with extra environment variables to add to mlflow nodes
  ## e.g:
  ## extraEnvVars:
  ##   - name: FOO
  ##     value: "bar"
  ##
  extraEnvVars: []
  ## @param tracking.extraEnvVarsCM Name of existing ConfigMap containing extra env vars for mlflow nodes
  ##
  extraEnvVarsCM: ""
  ## @param tracking.extraEnvVarsSecret Name of existing Secret containing extra env vars for mlflow nodes
  ##
  extraEnvVarsSecret: ""
  ## @param tracking.extraVolumes Optionally specify extra list of additional volumes for the mlflow pod(s)
  ##
  extraVolumes: []
  ## @param tracking.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the mlflow container(s)
  ##
  extraVolumeMounts: []
  ## @param tracking.sidecars Add additional sidecar containers to the mlflow pod(s)
  ## e.g:
  ## sidecars:
  ##   - name: your-image-name
  ##     image: your-image
  ##     imagePullPolicy: Always
  ##     ports:
  ##       - name: portname
  ##         containerPort: 1234
  ##
  sidecars: []
  ## @param tracking.enableDefaultInitContainers Add default init containers to the deployment
  ##
  enableDefaultInitContainers: true
  ## @param tracking.initContainers Add additional init containers to the mlflow pod(s)
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
  ## e.g:
  ## initContainers:
  ##  - name: your-image-name
  ##    image: your-image
  ##    imagePullPolicy: Always
  ##    command: ['sh', '-c', 'echo "hello world"']
  ##
  initContainers: []
  ## @section MLflow Tracking Traffic Exposure Parameters
  ##

  ## mlflow service parameters
  ##
  service:
    ## @param tracking.service.type mlflow service type
    ##
    type: LoadBalancer
    ## @param tracking.service.ports.http mlflow service HTTP port
    ## @param tracking.service.ports.https mlflow service HTTPS port
    ##
    ports:
      http: 80
      https: 443
    ## Node ports to expose
    ## @param tracking.service.nodePorts.http Node port for HTTP
    ## @param tracking.service.nodePorts.https Node port for HTTPS
    ## NOTE: choose port between <30000-32767>
    ##
    nodePorts:
      http: ""
      https: ""
    ## @param tracking.service.clusterIP mlflow service Cluster IP
    ## e.g.:
    ## clusterIP: None
    ##
    clusterIP: ""
    ## @param tracking.service.loadBalancerIP mlflow service Load Balancer IP
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-loadbalancer
    ##
    loadBalancerIP: ""
    ## @param tracking.service.loadBalancerSourceRanges mlflow service Load Balancer sources
    ## ref: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
    ## e.g:
    ## loadBalancerSourceRanges:
    ##   - 10.10.10.0/24
    ##
    loadBalancerSourceRanges: []
    ## @param tracking.service.labels Add labels to the service object
    ##
    labels: {}
    ## @param tracking.service.externalTrafficPolicy mlflow service external traffic policy
    ## ref http://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
    ##
    externalTrafficPolicy: Cluster
    ## @param tracking.service.annotations Additional custom annotations for mlflow service
    ##
    annotations: {}
    ## @param tracking.service.extraPorts Extra ports to expose in mlflow service (normally used with the `sidecars` value)
    ##
    extraPorts: []
    ## @param tracking.service.sessionAffinity Control where client requests go, to the same pod or round-robin
    ## Values: ClientIP or None
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/
    ##
    sessionAffinity: None
    ## @param tracking.service.sessionAffinityConfig Additional settings for the sessionAffinity
    ## sessionAffinityConfig:
    ##   clientIP:
    ##     timeoutSeconds: 300
    ##
    sessionAffinityConfig: {}
  ## mlflow ingress parameters
  ## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/
  ##
  ingress:
    ## @param tracking.ingress.enabled Enable ingress record generation for mlflow
    ##
    enabled: false
    ## @param tracking.ingress.pathType Ingress path type
    ##
    pathType: ImplementationSpecific
    ## @param tracking.ingress.hostname Default host for the ingress record
    ##
    hostname: mlflow.local
    ## @param tracking.ingress.ingressClassName IngressClass that will be be used to implement the Ingress (Kubernetes 1.18+)
    ## This is supported in Kubernetes 1.18+ and required if you have more than one IngressClass marked as the default for your cluster .
    ## ref: https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/
    ##
    ingressClassName: ""
    ## @param tracking.ingress.path Default path for the ingress record
    ## NOTE: You may need to set this to '/*' in order to use this with ALB ingress controllers
    ##
    path: /
    ## @param tracking.ingress.annotations Additional annotations for the Ingress resource. To enable certificate autogeneration, place here your cert-manager annotations.
    ## Use this parameter to set the required annotations for cert-manager, see
    ## ref: https://cert-manager.io/docs/usage/ingress/#supported-annotations
    ## e.g:
    ## annotations:
    ##   kubernetes.io/ingress.class: nginx
    ##   cert-manager.io/cluster-issuer: cluster-issuer-name
    ##
    annotations: {}
    ## @param tracking.ingress.tls Enable TLS configuration for the host defined at `ingress.hostname` parameter
    ## TLS certificates will be retrieved from a TLS secret with name: `{{- printf "%s-tls" .Values.ingress.hostname }}`
    ## You can:
    ##   - Use the `ingress.secrets` parameter to create this TLS secret
    ##   - Rely on cert-manager to create it by setting the corresponding annotations
    ##   - Rely on Helm to create self-signed certificates by setting `ingress.selfSigned=true`
    ##
    tls: false
    ## @param tracking.ingress.selfSigned Create a TLS secret for this ingress record using self-signed certificates generated by Helm
    ##
    selfSigned: false
    ## @param tracking.ingress.extraHosts An array with additional hostname(s) to be covered with the ingress record
    ## e.g:
    ## extraHosts:
    ##   - name: mlflow.local
    ##     path: /
    ##
    extraHosts: []
    ## @param tracking.ingress.extraPaths An array with additional arbitrary paths that may need to be added to the ingress under the main host
    ## e.g:
    ## extraPaths:
    ## - path: /*
    ##   backend:
    ##     serviceName: ssl-redirect
    ##     servicePort: use-annotation
    ##
    extraPaths: []
    ## @param tracking.ingress.extraTls TLS configuration for additional hostname(s) to be covered with this ingress record
    ## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/#tls
    ## e.g:
    ## extraTls:
    ## - hosts:
    ##     - mlflow.local
    ##   secretName: mlflow.local-tls
    ##
    extraTls: []
    ## @param tracking.ingress.secrets Custom TLS certificates as secrets
    ## NOTE: 'key' and 'certificate' are expected in PEM format
    ## NOTE: 'name' should line up with a 'secretName' set further up
    ## If it is not set and you're using cert-manager, this is unneeded, as it will create a secret for you with valid certificates
    ## If it is not set and you're NOT using cert-manager either, self-signed certificates will be created valid for 365 days
    ## It is also possible to create and manage the certificates outside of this helm chart
    ## Please see README.md for more information
    ## e.g:
    ## secrets:
    ##   - name: mlflow.local-tls
    ##     key: |-
    ##       -----BEGIN RSA PRIVATE KEY-----
    ##       ...
    ##       -----END RSA PRIVATE KEY-----
    ##     certificate: |-
    ##       -----BEGIN CERTIFICATE-----
    ##       ...
    ##       -----END CERTIFICATE-----
    ##
    secrets: []
    ## @param tracking.ingress.extraRules Additional rules to be covered with this ingress record
    ## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/#ingress-rules
    ## e.g:
    ## extraRules:
    ## - host: example.local
    ##     http:
    ##       path: /
    ##       backend:
    ##         service:
    ##           name: example-svc
    ##           port:
    ##             name: http
    ##
    extraRules: []
  ## Network Policy configuration
  ## ref: https://kubernetes.io/docs/concepts/services-networking/network-policies/
  ##
  networkPolicy:
    ## @param tracking.networkPolicy.enabled Enable creation of NetworkPolicy resources
    ##
    enabled: true
    ## @param tracking.networkPolicy.allowExternal The Policy model to apply
    ## When set to false, only pods with the correct client label will have network access to the ports MLFlow is
    ## listening on. When true, MLFlow will accept connections from any source (with the correct destination port).
    ##
    allowExternal: true
    ## @param tracking.networkPolicy.allowExternalEgress Allow the pod to access any range of port and all destinations.
    ##
    allowExternalEgress: true
    ## @param tracking.networkPolicy.extraIngress [array] Add extra ingress rules to the NetworkPolicy
    ## e.g:
    ## extraIngress:
    ##   - ports:
    ##       - port: 1234
    ##     from:
    ##       - podSelector:
    ##           - matchLabels:
    ##               - role: frontend
    ##       - podSelector:
    ##           - matchExpressions:
    ##               - key: role
    ##                 operator: In
    ##                 values:
    ##                   - frontend
    ##
    extraIngress: []
    ## @param tracking.networkPolicy.extraEgress [array] Add extra ingress rules to the NetworkPolicy
    ## e.g:
    ## extraEgress:
    ##   - ports:
    ##       - port: 1234
    ##     to:
    ##       - podSelector:
    ##           - matchLabels:
    ##               - role: frontend
    ##       - podSelector:
    ##           - matchExpressions:
    ##               - key: role
    ##                 operator: In
    ##                 values:
    ##                   - frontend
    ##
    extraEgress: []
    ## @param tracking.networkPolicy.ingressNSMatchLabels [object] Labels to match to allow traffic from other namespaces
    ## @param tracking.networkPolicy.ingressNSPodMatchLabels [object] Pod labels to match to allow traffic from other namespaces
    ##
    ingressNSMatchLabels: {}
    ingressNSPodMatchLabels: {}
  ## @section MLflow Tracking Persistence Parameters
  ##

  ## Enable persistence using Persistent Volume Claims
  ## ref: https://kubernetes.io/docs/concepts/storage/persistent-volumes/
  ##
  persistence:
    ## @param tracking.persistence.enabled Enable persistence using Persistent Volume Claims
    ##
    enabled: true
    ## @param tracking.persistence.mountPath Path to mount the volume at.
    ##
    mountPath: /bitnami/mlflow
    ## @param tracking.persistence.subPath The subdirectory of the volume to mount to, useful in dev environments and one PV for multiple services
    ##
    subPath: ""
    ## @param tracking.persistence.storageClass Storage class of backing PVC
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    storageClass: ""
    ## @param tracking.persistence.labels Persistent Volume labels
    ##
    labels: {}
    ## @param tracking.persistence.annotations Persistent Volume Claim annotations
    ##
    annotations: {}
    ## @param tracking.persistence.accessModes Persistent Volume Access Modes
    ##
    accessModes:
      - ReadWriteOnce
    ## @param tracking.persistence.size Size of data volume
    ##
    size: 8Gi
    ## @param tracking.persistence.existingClaim The name of an existing PVC to use for persistence
    ##
    existingClaim: ""
    ## @param tracking.persistence.selector Selector to match an existing Persistent Volume for MLflow data PVC
    ## If set, the PVC can't have a PV dynamically provisioned for it
    ## E.g.
    ## selector:
    ##   matchLabels:
    ##     app: my-app
    ##
    selector: {}
    ## @param tracking.persistence.dataSource Custom PVC data source
    ##
    dataSource: {}
  ## @section MLflow Tracking Other Parameters
  ##
  serviceAccount:
    ## @param tracking.serviceAccount.create Specifies whether a ServiceAccount should be created
    ##
    create: true
    ## @param tracking.serviceAccount.name The name of the ServiceAccount to use.
    ## If not set and create is true, a name is generated using the common.names.fullname template
    ##
    name: ""
    ## @param tracking.serviceAccount.annotations Additional Service Account annotations (evaluated as a template)
    ##
    annotations: {}
    ## @param tracking.serviceAccount.automountServiceAccountToken Automount service account token for the server service account
    ##
    automountServiceAccountToken: false
  ## @section MLflow Tracking Metrics Parameters
  ##
  metrics:
    ## @param tracking.metrics.enabled Enable the export of Prometheus metrics
    ##
    enabled: false
    ## @param tracking.metrics.annotations [object] Annotations for the tracking service in order to scrape metrics
    annotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: "{{ .Values.tracking.service.ports.http }}"
    ## Prometheus Operator ServiceMonitor configuration
    ##
    serviceMonitor:
      ## @param tracking.metrics.serviceMonitor.enabled if `true`, creates a Prometheus Operator ServiceMonitor (also requires `metrics.enabled` to be `true`)
      ##
      enabled: false
      ## @param tracking.metrics.serviceMonitor.namespace Namespace in which Prometheus is running
      ##
      namespace: ""
      ## @param tracking.metrics.serviceMonitor.annotations Additional custom annotations for the ServiceMonitor
      ##
      annotations: {}
      ## @param tracking.metrics.serviceMonitor.labels Extra labels for the ServiceMonitor
      ##
      labels: {}
      ## @param tracking.metrics.serviceMonitor.jobLabel The name of the label on the target service to use as the job name in Prometheus
      ##
      jobLabel: ""
      ## @param tracking.metrics.serviceMonitor.honorLabels honorLabels chooses the metric's labels on collisions with target labels
      ##
      honorLabels: false
      ## @param tracking.metrics.serviceMonitor.interval Interval at which metrics should be scraped.
      ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint
      ## e.g:
      ## interval: 10s
      ##
      interval: ""
      ## @param tracking.metrics.serviceMonitor.scrapeTimeout Timeout after which the scrape is ended
      ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint
      ## e.g:
      ## scrapeTimeout: 10s
      ##
      scrapeTimeout: ""
      ## @param tracking.metrics.serviceMonitor.metricRelabelings Specify additional relabeling of metrics
      ##
      metricRelabelings: []
      ## @param tracking.metrics.serviceMonitor.relabelings Specify general relabeling
      ##
      relabelings: []
      ## @param tracking.metrics.serviceMonitor.selector Prometheus instance selector labels
      ## ref: https://github.com/bitnami/charts/tree/main/bitnami/prometheus-operator#prometheus-configuration
      ## selector:
      ##   prometheus: my-prometheus
      ##
      selector: {}
## @section MLflow Run Parameters
##
run:
  ## @param run.enabled Enable Run deployment
  ##
  enabled: true
  ## @param run.useJob Deploy as job
  ##
  useJob: false
  ## @param run.backoffLimit set backoff limit of the job
  ##
  backoffLimit: 10
  ## @param run.restartPolicy set restart policy of the job
  ##
  restartPolicy: OnFailure
  ## @param run.extraEnvVars Array with extra environment variables to add to run nodes
  ## e.g:
  ## extraEnvVars:
  ##   - name: FOO
  ##     value: "bar"
  ##
  extraEnvVars: []
  ## @param run.extraEnvVarsCM Name of existing ConfigMap containing extra env vars for run nodes
  ##
  extraEnvVarsCM: ""
  ## @param run.extraEnvVarsSecret Name of existing Secret containing extra env vars for run nodes
  ##
  extraEnvVarsSecret: ""
  ## @param run.annotations Annotations for the run deployment
  ##
  annotations: {}
  ## @param run.command Override default container command (useful when using custom images)
  ##
  command: []
  ## @param run.args Override default container args (useful when using custom images)
  ##
  args: []
  ## @param run.terminationGracePeriodSeconds Run termination grace period (in seconds)
  ##
  terminationGracePeriodSeconds: ""
  ## @param run.customLivenessProbe Custom livenessProbe that overrides the default one
  ##
  customLivenessProbe: {}
  ## @param run.customReadinessProbe Custom readinessProbe that overrides the default one
  ##
  customReadinessProbe: {}
  ## @param run.customStartupProbe Custom startupProbe that overrides the default one
  ##
  customStartupProbe: {}
  ## run resource requests and limits
  ## ref: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
  ## @param run.resourcesPreset Set container resources according to one common preset (allowed values: none, nano, micro, small, medium, large, xlarge, 2xlarge). This is ignored if run.resources is set (run.resources is recommended for production).
  ## More information: https://github.com/bitnami/charts/blob/main/bitnami/common/templates/_resources.tpl#L15
  ##
  resourcesPreset: "small"
  ## @param run.resources Set container requests and limits for different resources like CPU or memory (essential for production workloads)
  ## Example:
  ## resources:
  ##   requests:
  ##     cpu: 2
  ##     memory: 512Mi
  ##   limits:
  ##     cpu: 3
  ##     memory: 1024Mi
  ##
  resources: {}
  ## Configure Pods Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param run.podSecurityContext.enabled Enabled Run pods' Security Context
  ## @param run.podSecurityContext.fsGroupChangePolicy Set filesystem group change policy
  ## @param run.podSecurityContext.sysctls Set kernel settings using the sysctl interface
  ## @param run.podSecurityContext.supplementalGroups Set filesystem extra groups
  ## @param run.podSecurityContext.fsGroup Set Run pod's Security Context fsGroup
  ##
  podSecurityContext:
    enabled: true
    fsGroupChangePolicy: Always
    sysctls: []
    supplementalGroups: []
    fsGroup: 1001
  ## Configure Container Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param run.containerSecurityContext.enabled Enabled Run containers' Security Context
  ## @param run.containerSecurityContext.seLinuxOptions [object,nullable] Set SELinux options in container
  ## @param run.containerSecurityContext.runAsUser Set Run containers' Security Context runAsUser
  ## @param run.containerSecurityContext.runAsGroup Set Run containers' Security Context runAsGroup
  ## @param run.containerSecurityContext.runAsNonRoot Set Run containers' Security Context runAsNonRoot
  ## @param run.containerSecurityContext.privileged Set Run containers' Security Context privileged
  ## @param run.containerSecurityContext.readOnlyRootFilesystem Set Run containers' Security Context runAsNonRoot
  ## @param run.containerSecurityContext.allowPrivilegeEscalation Set Run container's privilege escalation
  ## @param run.containerSecurityContext.capabilities.drop Set Run container's Security Context runAsNonRoot
  ## @param run.containerSecurityContext.seccompProfile.type Set Run container's Security Context seccomp profile
  ##
  containerSecurityContext:
    enabled: true
    seLinuxOptions: {}
    runAsUser: 1001
    runAsGroup: 1001
    runAsNonRoot: true
    privileged: false
    readOnlyRootFilesystem: true
    allowPrivilegeEscalation: false
    capabilities:
      drop: ["ALL"]
    seccompProfile:
      type: "RuntimeDefault"
  ## @param run.lifecycleHooks for the run container(s) to automate configuration before or after startup
  ##
  lifecycleHooks: {}
  ## @param run.runtimeClassName Name of the runtime class to be used by pod(s)
  ## ref: https://kubernetes.io/docs/concepts/containers/runtime-class/
  ##https://github.com/microsoft/MlflowExamples
  runtimeClassName: ""
  ## @param run.automountServiceAccountToken Mount Service Account token in pod
  ##
  automountServiceAccountToken: false
  ## @param run.hostAliases run pods host aliases
  ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
  ##
  hostAliases: []
  ## @param run.labels Extra labels for the run deployment
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  ##
  labels: {}
  ## @param run.podLabels Extra labels for run pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  ##
  podLabels: {}
  ## @param run.podAnnotations Annotations for run pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  podAnnotations: {}
  ## @param run.podAffinityPreset Pod affinity preset. Ignored if `run.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAffinityPreset: ""
  ## @param run.podAntiAffinityPreset Pod anti-affinity preset. Ignored if `run.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAntiAffinityPreset: soft
  ## Node run.affinity preset
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
  ##
  nodeAffinityPreset:
    ## @param run.nodeAffinityPreset.type Node affinity preset type. Ignored if `run.affinity` is set. Allowed values: `soft` or `hard`
    ##
    type: ""
    ## @param run.nodeAffinityPreset.key Node label key to match. Ignored if `run.affinity` is set
    ##
    key: ""
    ## @param run.nodeAffinityPreset.values Node label values to match. Ignored if `run.affinity` is set
    ## E.g.
    ## values:
    ##   - e2e-az1
    ##   - e2e-az2
    ##
    values: []
  ## @param run.affinity Affinity for Run pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ## NOTE: `run.podAffinityPreset`, `run.podAntiAffinityPreset`, and `run.nodeAffinityPreset` will be ignored when it's set
  ##
  affinity: {}
  ## @param run.nodeSelector Node labels for Run pods assignment
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/assign-pods-nodes/
  ##
  nodeSelector: {}
  ## @param run.tolerations Tolerations for Run pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []
  ## @param run.topologySpreadConstraints Topology Spread Constraints for pod assignment spread across your cluster among failure-domains
  ## Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/#spread-constraints-for-pods
  ##
  topologySpreadConstraints: []
  ## @param run.priorityClassName Run pods' priorityClassName
  ##
  priorityClassName: ""
  ## @param run.schedulerName Kubernetes pod scheduler registry
  ## https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  schedulerName: ""
  ## @param run.updateStrategy.type Run statefulset strategy type
  ## @param run.updateStrategy.rollingUpdate Run statefulset rolling update configuration parameters
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies
  ##
  updateStrategy:
    type: RollingUpdate
    rollingUpdate: {}
  ## @param run.extraVolumes Optionally specify extra list of additional volumes for the Run pod(s)
  ##
  extraVolumes: []
  ## @param run.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the Run container(s)
  ##
  extraVolumeMounts: []
  ## @param run.sidecars Add additional sidecar containers to the Run pod(s)
  ## e.g:
  ## sidecars:
  ##   - name: your-image-name
  ##     image: your-image
  ##     imagePullPolicy: Always
  ##     ports:
  ##       - name: portname
  ##         containerPort: 1234
  ##
  sidecars: []
  ## @param run.enableDefaultInitContainers Deploy default init containers
  ##
  enableDefaultInitContainers: true
  ## @param run.initContainers Add additional init containers to the Run pod(s)
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
  ## e.g:
  ## initContainers:
  ##  - name: your-image-name
  ##    image: your-image
  ##    imagePullPolicy: Always
  ##    command: ['sh', '-c', 'echo "hello world"']
  ##
  initContainers: []
  ## Network Policy configuration
  ## ref: https://kubernetes.io/docs/concepts/services-networking/network-policies/
  ##
  networkPolicy:
    ## @param run.networkPolicy.enabled Enable creation of NetworkPolicy resources
    ##
    enabled: true
    ## @param run.networkPolicy.allowExternal The Policy model to apply
    ## When set to false, only pods with the correct client label will have network access to the ports MLFlow is
    ## listening on. When true, MLFlow will accept connections from any source (with the correct destination port).
    ##
    allowExternal: true
    ## @param run.networkPolicy.allowExternalEgress Allow the pod to access any range of port and all destinations.
    ##
    allowExternalEgress: true
    ## @param run.networkPolicy.extraIngress [array] Add extra ingress rules to the NetworkPolicy
    ## e.g:
    ## extraIngress:
    ##   - ports:
    ##       - port: 1234
    ##     from:
    ##       - podSelector:
    ##           - matchLabels:
    ##               - role: frontend
    ##       - podSelector:
    ##           - matchExpressions:
    ##               - key: role
    ##                 operator: In
    ##                 values:
    ##                   - frontend
    ##
    extraIngress: []
    ## @param run.networkPolicy.extraEgress [array] Add extra ingress rules to the NetworkPolicy
    ## e.g:
    ## extraEgress:
    ##   - ports:
    ##       - port: 1234
    ##     to:
    ##       - podSelector:
    ##           - matchLabels:
    ##               - role: frontend
    ##       - podSelector:
    ##           - matchExpressions:
    ##               - key: role
    ##                 operator: In
    ##                 values:
    ##                   - frontend
    ##
    extraEgress: []
    ## @param run.networkPolicy.ingressNSMatchLabels [object] Labels to match to allow traffic from other namespaces
    ## @param run.networkPolicy.ingressNSPodMatchLabels [object] Pod labels to match to allow traffic from other namespaces
    ##
    ingressNSMatchLabels: {}
    ingressNSPodMatchLabels: {}
  ## Source code parameters
  ##
  source:
    ## @param run.source.type Where the source comes from: Possible values: configmap, git, custom
    ##
    type: "configmap"
    ## @param run.source.launchCommand deepspeed command to run over the project
    ##
    launchCommand: ""
    ## @param run.source.configMap List of files of the project
    ##
    configMap: {}
    ## @param run.source.existingConfigMap Name of a configmap containing the files of the project
    ##
    existingConfigMap: ""
    git:
      ## @param run.source.git.repository Repository that holds the files
      ##
      repository: ""
      ## @param run.source.git.revision Revision from the repository to checkout
      ##
      revision: ""
      ## @param run.source.git.extraVolumeMounts Add extra volume mounts for the Git container
      ## Useful to mount keys to connect through ssh. (normally used with extraVolumes)
      ## E.g:
      ## extraVolumeMounts:
      ##   - name: ssh-dir
      ##     mountPath: /.ssh/
      ##
      extraVolumeMounts: []
  ## Service account for Run to use
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
  ##
  serviceAccount:
    ## @param run.serviceAccount.create Enable creation of ServiceAccount for Run pods
    ##
    create: true
    ## @param run.serviceAccount.name The name of the ServiceAccount to use
    ## If not set and create is true, a name is generated using the common.names.fullname template
    ##
    name: ""
    ## @param run.serviceAccount.automountServiceAccountToken Allows auto mount of ServiceAccountToken on the serviceAccount created
    ## Can be set to false if pods using this serviceAccount do not need to use K8s API
    ##
    automountServiceAccountToken: false
    ## @param run.serviceAccount.annotations Additional custom annotations for the ServiceAccount
    ##
    annotations: {}
  ## @section Mlflow Run persistence paramaters
  ## Enable persistence using Persistent Volume Claims
  ## ref: https://kubernetes.io/docs/concepts/storage/persistent-volumes/
  ##
  persistence:
    ## @param run.persistence.enabled Use a PVC to persist data
    ##
    enabled: false
    ## @param run.persistence.storageClass discourse & sidekiq data Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    storageClass: ""
    ## @param run.persistence.existingClaim Use a existing PVC which must be created manually before bound
    ##
    existingClaim: ""
    ## @param run.persistence.mountPath Path to mount the volume at
    ##
    mountPath: /bitnami/mlflow/data
    ## @param run.persistence.subPath subPath to use for mounting the volume
    ##
    subPath: ""
    ## @param run.persistence.accessModes Persistent Volume Access Mode
    ##
    accessModes:
      - ReadWriteOnce
    ## @param run.persistence.dataSource Custom PVC data source
    ##
    dataSource: {}
    ## @param run.persistence.selector Selector to match an existing Persistent Volume for the run data PVC
    ## If set, the PVC can't have a PV dynamically provisioned for it
    ## E.g.
    ## selector:
    ##   matchLabels:
    ##     app: my-app
    ##
    selector: {}
    ## @param run.persistence.size Size of data volume
    ##
    size: 8Gi
    ## @param run.persistence.labels Persistent Volume labels
    ##
    labels: {}
    ## @param run.persistence.annotations Persistent Volume annotations
    ##
    annotations: {}
## @section Init Container Parameters
##

## 'volumePermissions' init container parameters
## Changes the owner and group of the persistent volume mount point to runAsUser:fsGroup values
##   based on the *podSecurityContext/*containerSecurityContext parameters
##
volumePermissions:
  ## @param volumePermissions.enabled Enable init container that changes the owner/group of the PV mount point to `runAsUser:fsGroup`
  ##
  enabled: false
  ## OS Shell + Utility image
  ## ref: https://hub.docker.com/r/bitnami/os-shell/tags/
  ## @param volumePermissions.image.registry [default: REGISTRY_NAME] OS Shell + Utility image registry
  ## @param volumePermissions.image.repository [default: REPOSITORY_NAME/os-shell] OS Shell + Utility image repository
  ## @skip volumePermissions.image.tag OS Shell + Utility image tag (immutable tags are recommended)
  ## @param volumePermissions.image.pullPolicy OS Shell + Utility image pull policy
  ## @param volumePermissions.image.pullSecrets OS Shell + Utility image pull secrets
  ##
  image:
    registry: docker.io
    repository: bitnami/os-shell
    tag: 12-debian-12-r35
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
  ## Init container's resource requests and limits
  ## ref: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
  ## @param volumePermissions.resourcesPreset Set container resources according to one common preset (allowed values: none, nano, micro, small, medium, large, xlarge, 2xlarge). This is ignored if volumePermissions.resources is set (volumePermissions.resources is recommended for production).
  ## More information: https://github.com/bitnami/charts/blob/main/bitnami/common/templates/_resources.tpl#L15
  ##
  resourcesPreset: "nano"
  ## @param volumePermissions.resources Set container requests and limits for different resources like CPU or memory (essential for production workloads)
  ## Example:
  ## resources:
  ##   requests:
  ##     cpu: 2
  ##     memory: 512Mi
  ##   limits:
  ##     cpu: 3
  ##     memory: 1024Mi
  ##
  resources: {}
  ## Init container Container Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
  ## @param volumePermissions.containerSecurityContext.enabled Set container security context settings
  ## @param volumePermissions.containerSecurityContext.seLinuxOptions [object,nullable] Set SELinux options in container
  ## @param volumePermissions.containerSecurityContext.runAsUser Set init container's Security Context runAsUser
  ## NOTE: when runAsUser is set to special value "auto", init container will try to chown the
  ##   data folder to auto-determined user&group, using commands: `id -u`:`id -G | cut -d" " -f2`
  ##   "auto" is especially useful for OpenShift which has scc with dynamic user ids (and 0 is not allowed)
  ##
  containerSecurityContext:
    enabled: true
    seLinuxOptions: {}
    runAsUser: 0
waitContainer:
  ## @param waitContainer.image.registry [default: REGISTRY_NAME] Init container wait-container image registry
  ## @param waitContainer.image.repository [default: REPOSITORY_NAME/os-shell] Init container wait-container image name
  ## @skip waitContainer.image.tag Init container wait-container image tag
  ## @param waitContainer.image.digest Init container wait-container image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag
  ##
  image:
    registry: docker.io
    repository: bitnami/os-shell
    tag: 12-debian-12-r35
    digest: ""
    ## @param waitContainer.image.pullPolicy Init container wait-container image pull policy
    ##
    pullPolicy: IfNotPresent
    ## @param waitContainer.image.pullSecrets [array] Specify docker-registry secret names as an array
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
  ## Configure Container Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
  ## @param waitContainer.containerSecurityContext.enabled Enabled containers' Security Context
  ## @param waitContainer.containerSecurityContext.seLinuxOptions [object,nullable] Set SELinux options in container
  ## @param waitContainer.containerSecurityContext.runAsUser Set containers' Security Context runAsUser
  ## @param waitContainer.containerSecurityContext.runAsGroup Set containers' Security Context runAsGroup
  ## @param waitContainer.containerSecurityContext.runAsNonRoot Set containers' Security Context runAsNonRoot
  ## @param waitContainer.containerSecurityContext.privileged Set containers' Security Context privileged
  ## @param waitContainer.containerSecurityContext.readOnlyRootFilesystem Set containers' Security Context runAsNonRoot
  ## @param waitContainer.containerSecurityContext.allowPrivilegeEscalation Set container's privilege escalation
  ## @param waitContainer.containerSecurityContext.capabilities.drop Set container's Security Context runAsNonRoot
  ## @param waitContainer.containerSecurityContext.seccompProfile.type Set container's Security Context seccomp profile
  ##
  containerSecurityContext:
    enabled: true
    seLinuxOptions: {}
    runAsUser: 1001
    runAsGroup: 1001
    runAsNonRoot: true
    privileged: false
    readOnlyRootFilesystem: true
    allowPrivilegeEscalation: false
    capabilities:
      drop: ["ALL"]
    seccompProfile:
      type: "RuntimeDefault"
## @section PostgreSQL chart configuration
## ref: https://github.com/bitnami/charts/blob/main/bitnami/postgresql/values.yaml
## @param postgresql.enabled Switch to enable or disable the PostgreSQL helm chart
## @param postgresql.auth.username Name for a custom user to create
## @param postgresql.auth.password Password for the custom user to create
## @param postgresql.auth.database Name for a custom database to create
## @param postgresql.auth.existingSecret Name of existing secret to use for PostgreSQL credentials
## @param postgresql.architecture PostgreSQL architecture (`standalone` or `replication`)
## @param postgresql.primary.service.ports.postgresql PostgreSQL service port
##
postgresql:
  enabled: true
  auth:
    username: bn_mlflow
    password: ""
    database: bitnami_mlflow
    existingSecret: ""
  architecture: standalone
  primary:
    service:
      ports:
        postgresql: 5432
    ## @param postgresql.primary.initdb.scripts [object] Map with init scripts for the PostgreSQL database
    initdb:
      scripts:
        # For authentication, Mlflow requires a different database in order to work
        create_auth_db.sh: |
          #!/bin/bash
          PGPASSWORD=$POSTGRES_POSTGRES_PASSWORD psql -U postgres <<< "CREATE DATABASE {{ include "mlflow.v0.database-auth.name" . }}"
          PGPASSWORD=$POSTGRES_POSTGRES_PASSWORD psql -U postgres <<< "GRANT ALL PRIVILEGES ON DATABASE {{ include "mlflow.v0.database-auth.name" . }} to {{ .Values.auth.username }}"
          PGPASSWORD=$POSTGRES_POSTGRES_PASSWORD psql -U postgres <<< "ALTER DATABASE {{ include "mlflow.v0.database-auth.name" . }} OWNER TO {{ .Values.auth.username }}"
## @section External PostgreSQL configuration
## All of these values are only used when postgresql.enabled is set to false
## @param externalDatabase.dialectDriver Database Dialect(+Driver)
## @param externalDatabase.host Database host
## @param externalDatabase.port Database port number
## @param externalDatabase.user Non-root username
## @param externalDatabase.password Password for the non-root username
## @param externalDatabase.database Database name
## @param externalDatabase.authDatabase Database name for the auth module (only if tracking.auth.enabled=true)
## @param externalDatabase.existingSecret Name of an existing secret resource containing the database credentials
## @param externalDatabase.existingSecretPasswordKey Name of an existing secret key containing the database credentials
##
externalDatabase:
  dialectDriver: "postgresql"
  host: ""
  port: 5432
  user: postgres
  database: mlflow
  authDatabase: mlflow_auth
  password: ""
  existingSecret: ""
  existingSecretPasswordKey: "db-password"
## @section MinIO&reg; chart parameters
## @extra minio For full list of MinIO&reg; values configurations please refere [here](https://github.com/bitnami/charts/tree/main/bitnami/minio)
##
minio:
  ## @param minio.enabled Enable/disable MinIO&reg; chart installation
  ## to be used as an objstore for Mlflow
  ##
  enabled: true
  ## MinIO&reg; authentication parameters
  ##
  auth:
    ## @param minio.auth.rootUser MinIO&reg; root username
    ##
    rootUser: admin
    ## @param minio.auth.rootPassword Password for MinIO&reg; root user
    ##
    rootPassword: ""
    ## @param minio.auth.existingSecret Name of an existing secret containing the MinIO&reg; credentials
    ##
    existingSecret: ""
  ## @param minio.defaultBuckets Comma, semi-colon or space separated list of MinIO&reg; buckets to create
  ##
  defaultBuckets: "mlflow"
  ## @param minio.provisioning.enabled Enable/disable MinIO&reg; provisioning job
  ## @param minio.provisioning.extraCommands Extra commands to run on MinIO&reg; provisioning job
  ##
  provisioning:
    enabled: true
    # We need to allow downloads in order for the UI to work
    extraCommands: ["mc anonymous set download provisioning/mlflow"]
  ## @param minio.tls.enabled Enable/disable MinIO&reg; TLS support
  ##
  tls:
    enabled: false
  ## @param minio.service.type MinIO&reg; service type
  ## @param minio.service.loadBalancerIP MinIO&reg; service LoadBalancer IP
  ## @param minio.service.ports.api MinIO&reg; service port
  ##
  service:
    type: ClusterIP
    loadBalancerIP: ""
    ports:
      api: 80

## @section External S3 parameters
## All of these values are only used when minio.enabled is set to false
## @param externalS3.host External S3 host. When using AWS S3, include appropriate [regional code](https://docs.aws.amazon.com/general/latest/gr/s3.html#s3_region), e.g. "eu-central-1.amazonaws.com
## @param externalS3.port External S3 port number
## @param externalS3.useCredentialsInSecret Whether to use a secret to store the S3 credentials
## @param externalS3.accessKeyID External S3 access key ID
## @param externalS3.accessKeySecret External S3 access key secret
## @param externalS3.existingSecret Name of an existing secret resource containing the S3 credentials
## @param externalS3.existingSecretAccessKeyIDKey Name of an existing secret key containing the S3 access key ID
## @param externalS3.existingSecretKeySecretKey Name of an existing secret key containing the S3 access key secret
## @param externalS3.protocol External S3 protocol
## @param externalS3.bucket External S3 bucket
## @param externalS3.serveArtifacts Whether artifact serving is enabled
##
externalS3:
  host: ""
  port: 443
  useCredentialsInSecret: true
  accessKeyID: ""
  accessKeySecret: ""
  existingSecret: ""
  existingSecretAccessKeyIDKey: "root-user"
  existingSecretKeySecretKey: "root-password"
  protocol: "https"
  bucket: "mlflow"
  serveArtifacts: true

## @section External Google Cloud Storage parameters
## All of these values are only used when minio.enabled is set to false and externalS3 is not configured (host is empty)
## @param externalGCS.bucket GCS bucket name. Activate gcs artifact storage if set
## @param externalGCS.googleCloudProject Google Cloud Project to use (optional, needed when using "default application credentials")
## @param externalGCS.useCredentialsInSecret Whether to read the GCS application credentials from a secret
## @param externalGCS.existingSecret Name of an existing secret key containing the application credentials file (required when useCredentialsInSecret is true)
## @param externalGCS.existingSecretKey Key in the existing secret containing the application credentials (required when useCredentialsInSecret is true)
## @param externalGCS.serveArtifacts Whether artifact serving is enabled
##
externalGCS:
  bucket: ""
  googleCloudProject: ""
  useCredentialsInSecret: false
  existingSecret: ""
  existingSecretKey: ""
  serveArtifacts: true

## @section External Azure Blob Storage parameters
## All of these values are only used when minio.enabled is set to false and externalS3 is not configured (host is empty)
## and externalGCS is not configured (bucket is empty).
## @param externalAzureBlob.storageAccount Azure Blob Storage account name. Activate azure artifact storage if set,
## @param externalAzureBlob.accessKey Azure Blob Storage access key. Optional if connectionString is set
## @param externalAzureBlob.connectionString Azure Blob Storage connection string. Optional if accessKey is set.
## @param externalAzureBlob.containerName Azure Blob Storage container name
## @param externalAzureBlob.clientId Azure Blob Storage client ID
## @param externalAzureBlob.tenantId Azure Blob Storage tenant ID
## @param externalAzureBlob.clientSecret Azure Blob Storage client secret
## @param externalAzureBlob.useCredentialsInSecret Whether to read the Azure Blob Storage credentials from a secret
## @param externalAzureBlob.existingSecret Name of an existing secret key containing the Azure Blob Storage credentials (required when useCredentialsInSecret is true)
## @param externalAzureBlob.existingAccessKeyKey Key in the existing secret containing the Azure Blob Storage access key (required when useCredentialsInSecret is true)
## @param externalAzureBlob.existingConnectionStringKey Key in the existing secret containing the Azure Blob Storage connection string (required when useCredentialsInSecret is true)
## @param externalAzureBlob.clientSecretKey Key in the existing secret containing the Azure Blob Storage client secret (required when useCredentialsInSecret is true)
## @param externalAzureBlob.serveArtifacts Whether artifact serving is enabled
##
externalAzureBlob:
  storageAccount: ""
  accessKey: ""
  connectionString: ""
  containerName: "mlflow"
  clientId: ""
  tenantId: ""
  clientSecret: ""
  useCredentialsInSecret: false
  existingSecret: ""
  existingAccessKeyKey: ""
  existingConnectionStringKey: ""
  clientSecretKey: ""
  serveArtifacts: true