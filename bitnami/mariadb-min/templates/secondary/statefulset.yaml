{{- /*
Copyright Broadcom, Inc. All Rights Reserved.
SPDX-License-Identifier: APACHE-2.0
*/}}

{{- if eq .Values.architecture "replication" }}
apiVersion: {{ include "common.capabilities.statefulset.apiVersion" . }}
kind: StatefulSet
metadata:
  name: {{ include "mariadb.secondary.fullname" . }}
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "common.labels.standard" (dict "customLabels" .Values.commonLabels "context" .) | nindent 4 }}
    app.kubernetes.io/part-of: mariadb
    app.kubernetes.io/component: secondary
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" (dict "value" .Values.commonAnnotations "context" .) | nindent 4 }}
  {{- end }}
spec:
  {{- if not .Values.secondary.autoscaling.hpa.enabled }}
  replicas: {{ .Values.secondary.replicaCount }}
  {{- end }}
  revisionHistoryLimit: {{ .Values.secondary.revisionHistoryLimit }}
  {{- $podLabels := include "common.tplvalues.merge" (dict "values" (list .Values.secondary.podLabels .Values.commonLabels) "context" .) }}
  selector:
    matchLabels: {{- include "common.labels.matchLabels" (dict "customLabels" $podLabels "context" .) | nindent 6 }}
      app.kubernetes.io/part-of: mariadb
      app.kubernetes.io/component: secondary
  serviceName: {{ include "mariadb.secondary.fullname" . }}
  podManagementPolicy: {{ .Values.secondary.podManagementPolicy }}
  {{- if .Values.secondary.updateStrategy }}
  updateStrategy: {{- toYaml .Values.secondary.updateStrategy | nindent 4 }}
  {{- end }}
  template:
    metadata:
      annotations:
        {{- if not .Values.secondary.existingConfigmap }}
        checksum/configuration: {{ include (print $.Template.BasePath "/secondary/configmap.yaml") . | sha256sum }}
        {{- end }}
        {{- if .Values.secondary.podAnnotations }}
        {{- include "common.tplvalues.render" (dict "value" .Values.secondary.podAnnotations "context" .) | nindent 8 }}
        {{- end }}
      labels: {{- include "common.labels.standard" (dict "customLabels" $podLabels "context" .) | nindent 8 }}
        app.kubernetes.io/part-of: mariadb
        app.kubernetes.io/component: secondary
    spec:
      {{- include "mariadb.imagePullSecrets" . | nindent 6 }}
      serviceAccountName: {{ template "mariadb.serviceAccountName" . }}
      automountServiceAccountToken: {{ .Values.secondary.automountServiceAccountToken }}
      {{- if .Values.secondary.hostAliases }}
      hostAliases: {{- include "common.tplvalues.render" (dict "value" .Values.secondary.hostAliases "context" .) | nindent 8 }}
      {{- end }}
      {{- if .Values.secondary.affinity }}
      affinity: {{- include "common.tplvalues.render" (dict "value" .Values.secondary.affinity "context" .) | nindent 8 }}
      {{- else }}
      affinity:
        podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.secondary.podAffinityPreset "component" "secondary" "customLabels" $podLabels "context" .) | nindent 10 }}
        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.secondary.podAntiAffinityPreset "component" "secondary" "customLabels" $podLabels "context" .) | nindent 10 }}
        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.secondary.nodeAffinityPreset.type "key" .Values.secondary.nodeAffinityPreset.key "values" .Values.secondary.nodeAffinityPreset.values) | nindent 10 }}
      {{- end }}
      {{- if .Values.secondary.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" (dict "value" .Values.secondary.nodeSelector "context" .) | nindent 8 }}
      {{- end }}
      {{- if .Values.secondary.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.secondary.tolerations "context" .) | nindent 8 }}
      {{- end }}
      {{- if .Values.secondary.schedulerName }}
      schedulerName: {{ .Values.secondary.schedulerName }}
      {{- end }}
      {{- if .Values.secondary.topologySpreadConstraints }}
      topologySpreadConstraints: {{- include "common.tplvalues.render" (dict "value" .Values.secondary.topologySpreadConstraints "context" .) | nindent 8 }}
      {{- end }}
      {{- if .Values.secondary.priorityClassName }}
      priorityClassName: {{ .Values.secondary.priorityClassName | quote }}
      {{- else if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName | quote }}
      {{- end }}
      {{- if .Values.secondary.runtimeClassName }}
      runtimeClassName: {{ .Values.secondary.runtimeClassName | quote }}
      {{- else if .Values.runtimeClassName }}
      runtimeClassName: {{ .Values.runtimeClassName | quote }}
      {{- end }}
      {{- if .Values.secondary.terminationGracePeriodSeconds }}
      terminationGracePeriodSeconds: {{ .Values.secondary.terminationGracePeriodSeconds }}
      {{- end }}
      {{- if .Values.secondary.podSecurityContext.enabled }}
      securityContext: {{- include "common.compatibility.renderSecurityContext" (dict "secContext" .Values.secondary.podSecurityContext "context" .) | nindent 8 }}
      {{- end }}
      initContainers:
        {{- if and .Values.secondary.podSecurityContext.enabled .Values.defaultInitContainers.volumePermissions.enabled .Values.secondary.persistence.enabled }}
          {{- include "mariadb.defaultInitContainers.volumePermissions" (dict "component" "secondary" "context" . ) | nindent 8}}
        {{- end }}
        {{- include "mariadb.defaultInitContainers.setup" (dict "component" "secondary" "context" . ) | nindent 8 }}
        {{- if .Values.secondary.initContainers }}
          {{- include "common.tplvalues.render" (dict "value" .Values.secondary.initContainers "context" .) | nindent 8 }}
        {{- end }}
      containers:
        - name: mariadb
          image: {{ include "mariadb.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          {{- if .Values.secondary.containerSecurityContext.enabled }}
          securityContext: {{- include "common.compatibility.renderSecurityContext" (dict "secContext" .Values.secondary.containerSecurityContext "context" .) | nindent 12 }}
          {{- end }}
          {{- if .Values.secondary.command }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.secondary.command "context" .) | nindent 12 }}
          {{- else }}
          command:
            - mariadbd
          {{- end }}
          {{- if .Values.secondary.args }}
          args: {{- include "common.tplvalues.render" (dict "value" .Values.secondary.args "context" .) | nindent 12 }}
          {{- else }}
          args:
            - --defaults-file=/opt/bitnami/mariadb/conf/my.cnf
            - --basedir=/opt/bitnami/mariadb
            - --datadir={{ printf "%s/data" .Values.secondary.persistence.mountPath }}
            - --socket=/opt/bitnami/mariadb/tmp/mysql.sock
            - --pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid
            - --server-id={{ randNumeric 3 }}
            - --binlog-format=ROW
            - --log-bin=mysql-bin
            - --sync-binlog=1
            - --relay-log=mysql-relay-bin
            - --log-slave-updates=1
            - --read-only=1
          {{- end }}
          {{- if .Values.secondary.lifecycleHooks }}
          lifecycle: {{- include "common.tplvalues.render" (dict "value" .Values.secondary.lifecycleHooks "context" .) | nindent 12 }}
          {{- end }}
          env:
            {{- if .Values.secondary.extraEnvVars }}
            {{- include "common.tplvalues.render" (dict "value" .Values.secondary.extraEnvVars "context" .) | nindent 12 }}
            {{- end }}
          {{- if or .Values.secondary.extraEnvVarsCM .Values.secondary.extraEnvVarsSecret }}
          envFrom:
            {{- if .Values.secondary.extraEnvVarsCM }}
            - configMapRef:
                name: {{ .Values.secondary.extraEnvVarsCM }}
            {{- end }}
            {{- if .Values.secondary.extraEnvVarsSecret }}
            - secretRef:
                name: {{ .Values.secondary.extraEnvVarsSecret }}
            {{- end }}
          {{- end }}
          ports:
            - name: mysql
              containerPort: {{ .Values.secondary.containerPorts.mysql }}
          {{- if .Values.secondary.customStartupProbe }}
          startupProbe: {{- include "common.tplvalues.render" (dict "value" .Values.secondary.customStartupProbe "context" .) | nindent 12 }}
          {{- else if .Values.secondary.startupProbe.enabled }}
          startupProbe: {{- omit .Values.secondary.startupProbe "enabled" | toYaml | nindent 12 }}
            tcpSocket:
              port: mysql
          {{- end }}
          {{- if .Values.secondary.customLivenessProbe }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.secondary.customLivenessProbe "context" .) | nindent 12 }}
          {{- else if .Values.secondary.livenessProbe.enabled }}
          livenessProbe: {{- omit .Values.secondary.livenessProbe "enabled" | toYaml | nindent 12 }}
            exec:
              command:
                - mariadb-admin
                - --defaults-extra-file=/opt/bitnami/mariadb/conf/admin.cnf
                - -uroot
                - status
          {{- end }}
          {{- if .Values.secondary.customReadinessProbe }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.secondary.customReadinessProbe "context" .) | nindent 12 }}
          {{- else if .Values.secondary.readinessProbe.enabled }}
          readinessProbe: {{- omit .Values.secondary.readinessProbe "enabled" | toYaml | nindent 12 }}
            exec:
              command:
                - mariadb-admin
                - --defaults-extra-file=/opt/bitnami/mariadb/conf/admin.cnf
                - -uroot
                - ping
          {{- end }}
          {{- if .Values.secondary.resources }}
          resources: {{ toYaml .Values.secondary.resources | nindent 12 }}
          {{- else if ne .Values.secondary.resourcesPreset "none" }}
          resources: {{- include "common.resources.preset" (dict "type" .Values.secondary.resourcesPreset) | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: data
              mountPath: {{ .Values.primary.persistence.mountPath }}
              {{- if .Values.secondary.persistence.subPath }}
              subPath: {{ .Values.secondary.persistence.subPath }}
              {{- end }}
            {{- if and .Values.auth.usePasswordFiles (not .Values.auth.customPasswordFiles) }}
            - name: mariadb-credentials
              mountPath: /opt/bitnami/mariadb/secrets
              readOnly: true
            {{- end }}
            {{- if .Values.secondary.extraVolumeMounts }}
            {{- include "common.tplvalues.render" (dict "value" .Values.secondary.extraVolumeMounts "context" .) | nindent 12 }}
            {{- end }}
            {{- if .Values.tls.enabled }}
            - name: tls-certs
              mountPath: /opt/bitnami/mariadb/certs
              readOnly: true
            {{- end }}
            - name: empty-dir
              mountPath: /tmp
              subPath: tmp-dir
            - name: empty-dir
              mountPath: /opt/bitnami/mariadb/conf
              subPath: app-conf-dir
            - name: empty-dir
              mountPath: /opt/bitnami/mariadb/tmp
              subPath: app-tmp-dir
            - name: empty-dir
              mountPath: /opt/bitnami/mariadb/logs
              subPath: app-logs-dir
        {{- if .Values.metrics.enabled }}
        - name: metrics
          image: {{ include "mariadb.metrics.image" . }}
          imagePullPolicy: {{ .Values.metrics.image.pullPolicy | quote }}
          {{- if .Values.metrics.containerSecurityContext.enabled }}
          securityContext: {{- include "common.compatibility.renderSecurityContext" (dict "secContext" .Values.metrics.containerSecurityContext "context" .) | nindent 12 }}
          {{- end }}
          env:
            {{- if .Values.auth.usePasswordFiles }}
            - name: MARIADB_ROOT_PASSWORD_FILE
              value: {{ default "/opt/bitnami/mysqld-exporter/secrets/mariadb-root-password" .Values.auth.customPasswordFiles.root }}
            {{- else }}
            - name: MARIADB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "mariadb.secretName" . }}
                  key: mariadb-root-password
            {{- end }}
          command:
            - /bin/bash
          args:
            - -ec
            - |
              password_aux="${MARIADB_ROOT_PASSWORD:-}"
              if [[ -f "${MARIADB_ROOT_PASSWORD_FILE:-}" ]]; then
                  password_aux=$(cat "$MARIADB_ROOT_PASSWORD_FILE")
              fi
              MYSQLD_EXPORTER_PASSWORD=${password_aux} /bin/mysqld_exporter --mysqld.address=localhost:{{ .Values.secondary.containerPorts.mysql }} --mysqld.username=root --web.listen-address=:{{ .Values.metrics.containerPorts.http }} {{- range .Values.metrics.extraArgs.primary }} {{ . }} {{- end }}
          ports:
            - name: metrics
              containerPort: {{ .Values.metrics.containerPorts.http }}
          {{- if .Values.metrics.livenessProbe.enabled }}
          livenessProbe: {{- omit .Values.metrics.livenessProbe "enabled" | toYaml | nindent 12 }}
            httpGet:
              path: /metrics
              port: metrics
          {{- end }}
          {{- if .Values.metrics.readinessProbe.enabled }}
          readinessProbe: {{- omit .Values.metrics.readinessProbe "enabled" | toYaml | nindent 12 }}
            httpGet:
              path: /metrics
              port: metrics
          {{- end }}
          {{- if .Values.metrics.resources }}
          resources: {{- toYaml .Values.metrics.resources | nindent 12 }}
          {{- else if ne .Values.metrics.resourcesPreset "none" }}
          resources: {{- include "common.resources.preset" (dict "type" .Values.metrics.resourcesPreset) | nindent 12 }}
          {{- end }}
          volumeMounts:
          {{- if and .Values.auth.usePasswordFiles (not .Values.auth.customPasswordFiles) }}
            - name: mariadb-credentials
              mountPath: /opt/bitnami/mysqld-exporter/secrets/
          {{- end }}
            - name: empty-dir
              mountPath: /tmp
              subPath: app-tmp-dir
          {{- if .Values.metrics.extraVolumeMounts.secondary }}
          {{- include "common.tplvalues.render" (dict "value" .Values.metrics.extraVolumeMounts.secondary "context" .) | nindent 12 }}
          {{- end }}
        {{- end }}
        {{- if .Values.secondary.sidecars }}
        {{- include "common.tplvalues.render" (dict "value" .Values.secondary.sidecars "context" .) | nindent 8 }}
        {{- end }}
      volumes:
        - name: empty-dir
          emptyDir: {}
        - name: config
          configMap:
            name: {{ include "mariadb.secondary.configmapName" . }}
        {{- if and .Values.auth.usePasswordFiles (not .Values.auth.customPasswordFiles) }}
        - name: mariadb-credentials
          secret:
            secretName: {{ template "mariadb.secretName" . }}
            items:
              - key: mariadb-root-password
                path: mariadb-root-password
              - key: mariadb-replication-password
                path: mariadb-replication-password
        {{- end }}
        {{- if .Values.tls.enabled }}
        - name: tls-certs
          projected:
            sources:
              - secret:
                  name: {{ template "mariadb.tls.ca.secretName" . }}
                  items:
                    - key: tls.crt
                      path: ca.crt
              - secret:
                  name: {{ template "mariadb.tls.primary.secretName" . }}
                  items:
                    - key: tls.crt
                      path: tls.crt
                    - key: tls.key
                      path: tls.key
        {{- end }}
        {{- if .Values.secondary.extraVolumes }}
        {{- include "common.tplvalues.render" (dict "value" .Values.secondary.extraVolumes "context" .) | nindent 8 }}
        {{- end }}
  {{- if not .Values.secondary.persistence.enabled }}
        - name: data
          emptyDir: {}
  {{- else }}
  volumeClaimTemplates:
    - metadata:
        name: data
        {{- $claimLabels := include "common.tplvalues.merge" (dict "values" (list .Values.secondary.persistence.labels .Values.commonLabels) "context" .) }}
        labels: {{- include "common.labels.matchLabels" (dict "customLabels" $claimLabels "context" .) | nindent 10 }}
          app.kubernetes.io/part-of: mariadb
          app.kubernetes.io/component: secondary
        {{- if .Values.secondary.persistence.annotations }}
        annotations: {{- include "common.tplvalues.render" (dict "value" .Values.secondary.persistence.annotations "context" .) | nindent 10 }}
        {{- end }}
      spec:
        accessModes:
          {{- range .Values.secondary.persistence.accessModes }}
          - {{ . | quote }}
          {{- end }}
        resources:
          requests:
            storage: {{ .Values.secondary.persistence.size | quote }}
        {{- if .Values.secondary.persistence.dataSource }}
        dataSource: {{- include "common.tplvalues.render" (dict "value" .Values.secondary.persistence.dataSource "context" .) | nindent 10 }}
        {{- end }}
        {{ include "common.storage.class" (dict "persistence" .Values.secondary.persistence "global" .Values.global) }}
        {{- if .Values.secondary.persistence.selector }}
        selector: {{- include "common.tplvalues.render" (dict "value" .Values.secondary.persistence.selector "context" .) | nindent 10 }}
        {{- end -}}
  {{- end }}
{{- end }}
