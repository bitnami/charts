{{- /*
Copyright Broadcom, Inc. All Rights Reserved.
SPDX-License-Identifier: APACHE-2.0
*/}}

{{/*
Return the MariaDB secondary configuration.
ref: https://mariadb.com/kb/en/configuring-mariadb-with-option-files/#options
*/}}
{{- define "mariadb.secondary.configuration" -}}
{{- if .Values.secondary.configuration }}
{{- include "common.tplvalues.render" (dict "value" .Values.secondary.configuration "context" .) }}
{{- else }}
mysqld:
  skip-name-resolve: true
  explicit_defaults_for_timestamp: true
  basedir: /opt/bitnami/mariadb
  datadir: {{ printf "%s/data" .Values.secondary.persistence.mountPath }}
  tmpdir: /opt/bitnami/mariadb/tmp
  port: {{ .Values.secondary.containerPorts.mysql }}
  socket: /opt/bitnami/mariadb/tmp/mysql.sock
  max_allowed_packet: 16M
  bind-address: '*'
  pid-file: /opt/bitnami/mariadb/tmp/mysqld.pid
  log-error: /opt/bitnami/mariadb/logs/mysqld.log
  character-set-server: UTF8
  collation-server: utf8_general_ci
  slow_query_log: false
  long_query_time: '10.0'
  binlog_expire_logs_seconds: '2592000'
  {{- if .Values.tls.enabled }}
  ssl_cert: /opt/bitnami/mariadb/certs/tls.crt
  ssl_key: /opt/bitnami/mariadb/certs/tls.key
  ssl_ca: /opt/bitnami/mariadb/certs/ca.crt
  {{- end }}
client:
  port: {{ .Values.secondary.containerPorts.mysql }}
  socket: /opt/bitnami/mariadb/tmp/mysql.sock
  default-character-set: UTF8
manager:
  port: {{ .Values.secondary.containerPorts.mysql }}
  socket: /opt/bitnami/mariadb/tmp/mysql.sock
  pid-file: /opt/bitnami/mariadb/tmp/mysqld.pid
{{- end }}
{{- end }}

{{- if not .Values.secondary.existingConfigmap }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "mariadb.secondary.fullname" . }}
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "common.labels.standard" (dict "customLabels" .Values.commonLabels "context" .) | nindent 4 }}
    app.kubernetes.io/part-of: mariadb
    app.kubernetes.io/component: secondary
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" (dict "value" .Values.commonAnnotations "context" .) | nindent 4 }}
  {{- end }}
data:
  {{- $configuration := include "mariadb.secondary.configuration" . | fromYaml -}}
  {{- if .Values.secondary.overrideConfiguration }}
  {{- $overrideConfiguration := include "common.tplvalues.render" (dict "value" .Values.secondary.overrideConfiguration "context" .) | fromYaml }}
  {{- $configuration = mustMergeOverwrite $configuration $overrideConfiguration }}
  {{- end }}
  my.cnf: |-
{{- range $section, $settings := $configuration }}
    [{{ $section }}]
  {{- range $key, $val := $settings }}
    {{- if eq (typeOf $val) "bool" }}
    {{ $key }}={{ ternary 1 0 $val }}
    {{- else }}
    {{ $key }}={{ $val }}
    {{- end }}
  {{- end }}
{{- end }}
{{- end -}}
