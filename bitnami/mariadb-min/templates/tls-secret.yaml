{{- /*
Copyright Broadcom, Inc. All Rights Reserved.
SPDX-License-Identifier: APACHE-2.0
*/}}

{{- if and .Values.tls.enabled .Values.tls.autoGenerated.enabled (eq .Values.tls.autoGenerated.engine "helm") -}}
{{- $ca := genCA "mariadb-ca" 365 }}
{{- $releaseNamespace := include "common.names.namespace" . }}
{{- $clusterDomain := .Values.clusterDomain }}
{{- $headlessServiceName := printf "%s-headless" (include "common.names.fullname" .) | trunc 63 | trimSuffix "-" }}
{{- $caSecretName := include "mariadb.tls.ca.secretName" . }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ $caSecretName }}
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" . ) | nindent 4 }}
    app.kubernetes.io/part-of: mariadb
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" . ) | nindent 4 }}
  {{- end }}
type: kubernetes.io/tls
data:
  tls.crt: {{ include "common.secrets.lookup" (dict "secret" $caSecretName "key" "tls.crt" "defaultValue" $ca.Cert "context" .) }}
  tls.key: {{ include "common.secrets.lookup" (dict "secret" $caSecretName "key" "tls.key" "defaultValue" $ca.Key "context" .) }}
---
{{- $primaryServiceName := include "mariadb.primary.fullname" . }}
{{- $primaryAltNames := list (printf "*.%s.%s.svc.%s" $headlessServiceName $releaseNamespace $clusterDomain) (printf "%s.%s.svc.%s" $headlessServiceName $releaseNamespace $clusterDomain) $headlessServiceName (printf "%s.%s.svc.%s" $primaryServiceName $releaseNamespace $clusterDomain) $primaryServiceName "127.0.0.1" "localhost" }}
{{- $primaryCert := genSignedCert $primaryServiceName nil $primaryAltNames 365 $ca }}
{{- $primarySecretName := include "mariadb.tls.primary.secretName" . }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ $primarySecretName }}
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" . ) | nindent 4 }}
    app.kubernetes.io/component: primary
    app.kubernetes.io/part-of: mariadb
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" . ) | nindent 4 }}
  {{- end }}
type: kubernetes.io/tls
data:
  tls.crt: {{ include "common.secrets.lookup" (dict "secret" $primarySecretName "key" "tls.crt" "defaultValue" $primaryCert.Cert "context" .) }}
  tls.key: {{ include "common.secrets.lookup" (dict "secret" $primarySecretName "key" "tls.key" "defaultValue" $primaryCert.Key "context" .) }}
{{- if eq .Values.architecture "replication" }}
---
{{- $secondaryServiceName := include "mariadb.secondary.fullname" . }}
{{- $secondaryAltNames := list (printf "*.%s.%s.svc.%s" $headlessServiceName $releaseNamespace $clusterDomain) (printf "%s.%s.svc.%s" $headlessServiceName $releaseNamespace $clusterDomain) $headlessServiceName (printf "%s.%s.svc.%s" $secondaryServiceName $releaseNamespace $clusterDomain) $secondaryServiceName "127.0.0.1" "localhost" }}
{{- $secondaryCert := genSignedCert $secondaryServiceName nil $secondaryAltNames 365 $ca }}
{{- $secondarySecretName := include "mariadb.tls.secondary.secretName" . }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ $secondarySecretName }}
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" . ) | nindent 4 }}
    app.kubernetes.io/component: secondary
    app.kubernetes.io/part-of: mariadb
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" . ) | nindent 4 }}
  {{- end }}
type: kubernetes.io/tls
data:
  tls.crt: {{ include "common.secrets.lookup" (dict "secret" $secondarySecretName "key" "tls.crt" "defaultValue" $secondaryCert.Cert "context" .) }}
  tls.key: {{ include "common.secrets.lookup" (dict "secret" $secondarySecretName "key" "tls.key" "defaultValue" $secondaryCert.Key "context" .) }}
{{- end }}
{{- else if and .Values.tls.enabled (not .Values.tls.autoGenerated.enabled) (empty .Values.tls.existingCASecret) (empty .Values.tls.primary.existingSecret) (empty .Values.tls.secondary.existingSecret) }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ template "mariadb.tls.ca.secretName" . }}
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" . ) | nindent 4 }}
    app.kubernetes.io/part-of: mariadb
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" . ) | nindent 4 }}
  {{- end }}
type: kubernetes.io/tls
data:
  tls.crt: {{ required "A valid .Values.tls.ca entry required!" .Values.tls.ca | b64enc | quote }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ template "mariadb.tls.primary.secretName" . }}
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" . ) | nindent 4 }}
    app.kubernetes.io/component: primary
    app.kubernetes.io/part-of: mariadb
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" . ) | nindent 4 }}
  {{- end }}
type: kubernetes.io/tls
data:
  tls.crt: {{ required "A valid .Values.tls.primary.cert entry required!" .Values.tls.primary.cert | b64enc | quote }}
  tls.key: {{ required "A valid .Values.tls.primary.key entry required!" .Values.tls.primary.key | b64enc | quote }}
{{- if eq .Values.architecture "replication" }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ template "mariadb.tls.secondary.secretName" . }}
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" . ) | nindent 4 }}
    app.kubernetes.io/component: secondary
    app.kubernetes.io/part-of: mariadb
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" . ) | nindent 4 }}
  {{- end }}
type: kubernetes.io/tls
data:
  tls.crt: {{ required "A valid .Values.tls.secondary.cert entry required!" .Values.tls.secondary.cert | b64enc | quote }}
  tls.key: {{ required "A valid .Values.tls.secondary.key entry required!" .Values.tls.secondary.key | b64enc | quote }}
{{- end }}
{{- end }}
