{{- /*
Copyright Broadcom, Inc. All Rights Reserved.
SPDX-License-Identifier: APACHE-2.0
*/}}

{{- if (include "postgresql-ha.pgpoolCreateSecret" .) }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "postgresql-ha.pgpool" . }}
  namespace: {{ include "common.names.namespace" . | quote }}
  {{- $versionLabel := dict "app.kubernetes.io/version" ( include "common.images.version" ( dict "imageRoot" .Values.pgpool.image "chart" .Chart ) ) }}
  {{- $labels := include "common.tplvalues.merge" ( dict "values" ( list .Values.commonLabels $versionLabel ) "context" . ) }}
  labels: {{- include "common.labels.standard" ( dict "customLabels" $labels "context" . ) | nindent 4 }}
    app.kubernetes.io/component: pgpool
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" . ) | nindent 4 }}
  {{- end }}
type: Opaque
data:
  admin-password: {{ include "common.secrets.passwords.manage" (dict "secret" (include "postgresql-ha.pgpool" .) "key" "admin-password" "providedValues" (list "global.pgpool.adminPassword" "pgpool.adminPassword") "length" 10 "context" .) }}
  sr-check-password: {{ include "common.secrets.passwords.manage" (dict "secret" (include "postgresql-ha.pgpool" .) "key" "sr-check-password" "providedValues" (list "global.pgpool.srCheckPassword" "pgpool.srCheckPassword") "length" 10 "failOnNew" false "context" .) }}
{{- end -}}
